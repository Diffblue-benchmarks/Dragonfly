[
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.ConfigurationWarningsApplicationContextInitializer\\$ConfigurationWarningsPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.ConfigurationWarningsApplicationContextInitializer\\$ConfigurationWarningsPostProcessor\\.postProcessBeanDefinitionRegistry\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.config\\.ConfigFileApplicationListener\\$PropertySourceOrderingPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.UndertowServletWebServerFactory\\$MetaInfResourcesResourceManager\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.tomcat\\.TomcatServletWebServerFactory\\$LoaderHidingWebResourceSet\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.tomcat\\.SslStoreProviderUrlStreamHandlerFactory\\$1\\.openConnection\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.atomikos\\.AtomikosDependsOnBeanFactoryPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.reactive\\.context\\.FilteredReactiveWebContextResource\\.createRelative\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.reactive\\.context\\.FilteredReactiveWebContextResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.atomikos\\.AtomikosDataSourceBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.atomikos\\.AtomikosDataSourceBean\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.getXaConnection\\:\\(\\)Ljavax\\/sql\\/XAConnection\\;"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.recover\\:\\(I\\)\\[Ljavax\\/transaction\\/xa\\/Xid\\;"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.disconnect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.start\\:\\(Ljavax\\/transaction\\/xa\\/Xid\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.end\\:\\(Ljavax\\/transaction\\/xa\\/Xid\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.prepare\\:\\(Ljavax\\/transaction\\/xa\\/Xid\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.commit\\:\\(Ljavax\\/transaction\\/xa\\/Xid\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.rollback\\:\\(Ljavax\\/transaction\\/xa\\/Xid\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.isSameRM\\:\\(Ljavax\\/transaction\\/xa\\/XAResource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.forget\\:\\(Ljavax\\/transaction\\/xa\\/Xid\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.getTransactionTimeout\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.transaction.xa.XAException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.DataSourceXAResourceRecoveryHelper\\.setTransactionTimeout\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.system\\.ApplicationHome\\.findSource\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.TypeExcludeFilter\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.TypeExcludeFilter\\.match\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.web.server.WebServerException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.server\\.WebServer\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.web.server.WebServerException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.server\\.WebServer\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.server\\.SslStoreProvider\\.getKeyStore\\:\\(\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.server\\.SslStoreProvider\\.getTrustStore\\:\\(\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.server\\.ErrorPageRegistrarBeanPostProcessor\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.server\\.ErrorPageRegistrarBeanPostProcessor\\.postProcessAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyEmbeddedWebAppContext\\.deferredInitialize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyHandlerWrappers\\$ServerHeaderHandler\\.handle\\:\\(Ljava\\/lang\\/String\\;Lorg\\/eclipse\\/jetty\\/server\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JasperInitializer\\$WarURLConnection\\.\\<init\\>\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JasperInitializer\\$WarURLConnection\\.connect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JasperInitializer\\$WarURLConnection\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.ServletContextInitializerConfiguration\\$Initializer\\.doStart\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.ServletContextInitializerConfiguration\\$Initializer\\.callInitializers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyServletWebServerFactory\\$1\\.configure\\:\\(Lorg\\/eclipse\\/jetty\\/webapp\\/WebAppContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyServletWebServerFactory\\$2\\.configure\\:\\(Lorg\\/eclipse\\/jetty\\/webapp\\/WebAppContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.JarResourceManager\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Lio\\/undertow\\/server\\/handlers\\/resource\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.JarResourceManager\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.convert\\.IsoOffsetFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/time\\/OffsetDateTime\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.convert\\.IsoOffsetFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.convert\\.InetAddressFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.convert\\.InetAddressFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.convert\\.CharArrayFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.convert\\.CharArrayFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.diagnostics\\.analyzer\\.NoUniqueBeanDefinitionFailureAnalyzer\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jdbc\\.XADataSourceWrapper\\.wrapDataSource\\:\\(Ljavax\\/sql\\/XADataSource\\;\\)Ljavax\\/sql\\/DataSource\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException", 
   "org.springframework.dao.DataAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jdbc\\.EmbeddedDatabaseConnection\\$IsEmbedded\\.doInConnection\\:\\(Ljava\\/sql\\/Connection\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException", 
   "org.springframework.dao.DataAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jdbc\\.EmbeddedDatabaseConnection\\$IsEmbedded\\.doInConnection\\:\\(Ljava\\/sql\\/Connection\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.SpringApplicationBannerPrinter\\.createStringFromBanner\\:\\(Lorg\\/springframework\\/boot\\/Banner\\;Lorg\\/springframework\\/core\\/env\\/Environment\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.PropertySourceLoader\\.load\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.YamlPropertySourceLoader\\.load\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.PropertiesPropertySourceLoader\\.load\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.PropertiesPropertySourceLoader\\.loadProperties\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\$CharacterReader\\.\\<init\\>\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\$CharacterReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\$CharacterReader\\.read\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\$CharacterReader\\.read\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\$CharacterReader\\.skipLeadingWhitespace\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\$CharacterReader\\.skipComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\$CharacterReader\\.readEscaped\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\$CharacterReader\\.readUnicode\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\.load\\:\\(\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\.load\\:\\(Z\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\.loadKey\\:\\(Ljava\\/lang\\/StringBuilder\\;Lorg\\/springframework\\/boot\\/env\\/OriginTrackedPropertiesLoader\\$CharacterReader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.env\\.OriginTrackedPropertiesLoader\\.loadValue\\:\\(Ljava\\/lang\\/StringBuilder\\;Lorg\\/springframework\\/boot\\/env\\/OriginTrackedPropertiesLoader\\$CharacterReader\\;Z\\)Lorg\\/springframework\\/boot\\/origin\\/OriginTrackedValue\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.tomcat\\.SslStoreProviderUrlStreamHandlerFactory\\$KeyStoreUrlConnection\\.connect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.tomcat\\.SslStoreProviderUrlStreamHandlerFactory\\$KeyStoreUrlConnection\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "javax.jms.JMSException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingConnectionFactoryBean\\$DirectXAConnectionFactory\\.createXAConnection\\:\\(\\)Ljavax\\/jms\\/XAConnection\\;"
 }, 
 {
  "exceptions": [
   "javax.jms.JMSException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingConnectionFactoryBean\\$DirectXAConnectionFactory\\.createXAConnection\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/jms\\/XAConnection\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.atomikos\\.AtomikosConnectionFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.atomikos\\.AtomikosConnectionFactoryBean\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaConfigurationBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.arjuna.ats.arjuna.common.CoreEnvironmentBeanException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaConfigurationBean\\.setNodeIdentifier\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.SpringApplication\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.BitronixXADataSourceWrapper\\.wrapDataSource\\:\\(Ljavax\\/sql\\/XADataSource\\;\\)Lorg\\/springframework\\/boot\\/jta\\/bitronix\\/PoolingDataSourceBean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.BitronixXADataSourceWrapper\\.wrapDataSource\\:\\(Ljavax\\/sql\\/XADataSource\\;\\)Ljavax\\/sql\\/DataSource\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaDataSourceBean\\.getConnection\\:\\(\\)Ljava\\/sql\\/Connection\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaDataSourceBean\\.getConnection\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/sql\\/Connection\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaDataSourceBean\\.getLogWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaDataSourceBean\\.setLogWriter\\:\\(Ljava\\/io\\/PrintWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaDataSourceBean\\.setLoginTimeout\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaDataSourceBean\\.getLoginTimeout\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.sql.SQLFeatureNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaDataSourceBean\\.getParentLogger\\:\\(\\)Ljava\\/util\\/logging\\/Logger\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaDataSourceBean\\.unwrap\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaDataSourceBean\\.isWrapperFor\\:\\(Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.logging\\.logback\\.LogbackLoggingSystem\\.configureByResourceUrl\\:\\(Lorg\\/springframework\\/boot\\/logging\\/LoggingInitializationContext\\;Lch\\/qos\\/logback\\/classic\\/LoggerContext\\;Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.UndertowServletWebServerFactory\\$LoaderHidingResourceManager\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Lio\\/undertow\\/server\\/handlers\\/resource\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.UndertowServletWebServerFactory\\$LoaderHidingResourceManager\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.tomcat\\.TomcatEmbeddedWebappClassLoader\\.findResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.tomcat\\.TomcatEmbeddedWebappClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.tomcat\\.TomcatEmbeddedWebappClassLoader\\.doLoadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.tomcat\\.TomcatEmbeddedWebappClassLoader\\.checkPackageAccess\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.ConfigurationPropertiesBindingPostProcessor\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.ConfigurationPropertiesBindingPostProcessor\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.ConfigurationPropertiesBindingPostProcessor\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.LinkageError"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.config\\.DelegatingApplicationContextInitializer\\.getInitializerClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.CompositeResourceManager\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.CompositeResourceManager\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Lio\\/undertow\\/server\\/handlers\\/resource\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.CommandLineRunner\\.run\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.bind\\.handler\\.IgnoreErrorsBindHandler\\.onFailure\\:\\(Lorg\\/springframework\\/boot\\/context\\/properties\\/source\\/ConfigurationPropertyName\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/Bindable\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/BindContext\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.bind\\.handler\\.IgnoreTopLevelConverterNotFoundBindHandler\\.onFailure\\:\\(Lorg\\/springframework\\/boot\\/context\\/properties\\/source\\/ConfigurationPropertyName\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/Bindable\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/BindContext\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.bind\\.AbstractBindHandler\\.onFailure\\:\\(Lorg\\/springframework\\/boot\\/context\\/properties\\/source\\/ConfigurationPropertyName\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/Bindable\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/BindContext\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.bind\\.AbstractBindHandler\\.onFinish\\:\\(Lorg\\/springframework\\/boot\\/context\\/properties\\/source\\/ConfigurationPropertyName\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/Bindable\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/BindContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.bind\\.BindHandler\\.onFailure\\:\\(Lorg\\/springframework\\/boot\\/context\\/properties\\/source\\/ConfigurationPropertyName\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/Bindable\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/BindContext\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.bind\\.BindHandler\\.onFinish\\:\\(Lorg\\/springframework\\/boot\\/context\\/properties\\/source\\/ConfigurationPropertyName\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/Bindable\\;Lorg\\/springframework\\/boot\\/context\\/properties\\/bind\\/BindContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.bind\\.BindResult\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.properties\\.bind\\.BindResult\\.orElseThrow\\:\\(Ljava\\/util\\/function\\/Supplier\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.context\\.ApplicationPidFileWriter\\.writePidFile\\:\\(Lorg\\/springframework\\/boot\\/context\\/event\\/SpringApplicationEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.logging\\.log4j2\\.Log4J2LoggingSystem\\.getConfigurationSource\\:\\(Ljava\\/net\\/URL\\;\\)Lorg\\/apache\\/logging\\/log4j\\/core\\/config\\/ConfigurationSource\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.filter\\.ApplicationContextHeaderFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.web.server.WebServerException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.UndertowWebServer\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.web.server.WebServerException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.UndertowWebServer\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.UndertowServletWebServerFactory\\$Initializer\\.onStartup\\:\\(Ljava\\/util\\/Set\\;Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.tomcat\\.TomcatStarter\\.onStartup\\:\\(Ljava\\/util\\/Set\\;Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.reactive\\.context\\.ReactiveWebServerApplicationContext\\.refresh\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.ApplicationRunner\\.run\\:\\(Lorg\\/springframework\\/boot\\/ApplicationArguments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JasperInitializer\\$WarUrlStreamHandler\\.openConnection\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JasperInitializer\\.doStart\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyEmbeddedErrorHandler\\.handle\\:\\(Ljava\\/lang\\/String\\;Lorg\\/eclipse\\/jetty\\/server\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingDataSourceBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingDataSourceBean\\.createPooledConnection\\:\\(Ljava\\/lang\\/Object\\;Lbitronix\\/tm\\/resource\\/common\\/ResourceBean\\;\\)Lbitronix\\/tm\\/resource\\/common\\/XAStatefulHolder\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLFeatureNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingDataSourceBean\\.getParentLogger\\:\\(\\)Ljava\\/util\\/logging\\/Logger\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.server\\.AbstractServletWebServerFactory\\$SessionConfiguringInitializer\\.onStartup\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.LinkageError"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.reactive\\.context\\.AnnotationConfigReactiveWebApplicationContext\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/context\\/annotation\\/AnnotatedBeanDefinitionReader\\;Lorg\\/springframework\\/context\\/annotation\\/ClassPathBeanDefinitionScanner\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.LinkageError"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.reactive\\.context\\.AnnotationConfigReactiveWebApplicationContext\\.registerConfigLocations\\:\\(Lorg\\/springframework\\/context\\/annotation\\/AnnotatedBeanDefinitionReader\\;Lorg\\/springframework\\/context\\/annotation\\/ClassPathBeanDefinitionScanner\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.LinkageError"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.reactive\\.context\\.AnnotationConfigReactiveWebApplicationContext\\.register\\:\\(Lorg\\/springframework\\/context\\/annotation\\/AnnotatedBeanDefinitionReader\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.RegistrationBean\\.onStartup\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.atomikos\\.AtomikosXADataSourceWrapper\\.wrapDataSource\\:\\(Ljavax\\/sql\\/XADataSource\\;\\)Lorg\\/springframework\\/boot\\/jta\\/atomikos\\/AtomikosDataSourceBean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.atomikos\\.AtomikosXADataSourceWrapper\\.wrapDataSource\\:\\(Ljavax\\/sql\\/XADataSource\\;\\)Ljavax\\/sql\\/DataSource\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.logging\\.logback\\.SpringProfileAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.logging\\.logback\\.SpringProfileAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.ServletContextInitializer\\.onStartup\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyEmbeddedWebAppContext\\$JettyEmbeddedServletHandler\\.initialize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyEmbeddedWebAppContext\\$JettyEmbeddedServletHandler\\.deferredInitialize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.tomcat\\.LazySessionIdGenerator\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingConnectionFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingConnectionFactoryBean\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingConnectionFactoryBean\\.createPooledConnection\\:\\(Ljava\\/lang\\/Object\\;Lbitronix\\/tm\\/resource\\/common\\/ResourceBean\\;\\)Lbitronix\\/tm\\/resource\\/common\\/XAStatefulHolder\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaRecoveryManagerBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaRecoveryManagerBean\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.system\\.ApplicationPid\\.write\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.system\\.ApplicationPid\\.assertCanOverwrite\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.system\\.ApplicationPid\\.canWritePosixFile\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jms\\.XAConnectionFactoryWrapper\\.wrapConnectionFactory\\:\\(Ljavax\\/jms\\/XAConnectionFactory\\;\\)Ljavax\\/jms\\/ConnectionFactory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.type\\.classreading\\.ConcurrentReferenceCachingMetadataReaderFactory\\.getMetadataReader\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.type\\.classreading\\.ConcurrentReferenceCachingMetadataReaderFactory\\.createMetadataReader\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.admin\\.SpringApplicationAdminMXBeanRegistrar\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.admin\\.SpringApplicationAdminMXBeanRegistrar\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.admin\\.SpringApplicationAdminMXBeanRegistrar\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.admin\\.SpringApplicationAdminMXBeanRegistrar\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.json.JsonParseException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.json\\.JsonParser\\.parseMap\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.json.JsonParseException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.json\\.JsonParser\\.parseList\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingDataSourceBean\\$DirectXADataSource\\.getLogWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingDataSourceBean\\$DirectXADataSource\\.getXAConnection\\:\\(\\)Ljavax\\/sql\\/XAConnection\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingDataSourceBean\\$DirectXADataSource\\.getXAConnection\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/sql\\/XAConnection\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingDataSourceBean\\$DirectXADataSource\\.setLogWriter\\:\\(Ljava\\/io\\/PrintWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingDataSourceBean\\$DirectXADataSource\\.setLoginTimeout\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingDataSourceBean\\$DirectXADataSource\\.getLoginTimeout\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.sql.SQLFeatureNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.PoolingDataSourceBean\\$DirectXADataSource\\.getParentLogger\\:\\(\\)Ljava\\/util\\/logging\\/Logger\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.bitronix\\.BitronixDependentBeanFactoryPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jta\\.narayana\\.NarayanaBeanFactoryPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.view\\.MustacheViewResolver\\.buildView\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/servlet\\/view\\/AbstractUrlBasedView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.view\\.MustacheView\\.checkResource\\:\\(Ljava\\/util\\/Locale\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.view\\.MustacheView\\.renderMergedTemplateModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.view\\.MustacheView\\.createTemplate\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lcom\\/samskivert\\/mustache\\/Template\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.view\\.MustacheView\\.getReader\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\$1\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\$ErrorWrapperResponse\\.sendError\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\$ErrorWrapperResponse\\.sendError\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\$ErrorWrapperResponse\\.flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\$ErrorWrapperResponse\\.sendErrorIfNecessary\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\$ErrorWrapperResponse\\.getWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\$ErrorWrapperResponse\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\.handleErrorStatus\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\.handleException\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/springframework\\/boot\\/web\\/servlet\\/support\\/ErrorPageFilter\\$ErrorWrapperResponse\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\.forwardToErrorPage\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\.rethrow\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.ErrorPageFilter\\.access\\$000\\:\\(Lorg\\/springframework\\/boot\\/web\\/servlet\\/support\\/ErrorPageFilter\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.support\\.SpringBootServletInitializer\\.onStartup\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.DelegatingFilterProxyRegistrationBean\\$1\\.initFilterBean\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.DelegatingFilterProxyRegistrationBean\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.ServletComponentRegisteringPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.servlet\\.ServletComponentRegisteringPostProcessor\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.ServletContextInitializerConfiguration\\.configure\\:\\(Lorg\\/eclipse\\/jetty\\/webapp\\/WebAppContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyServletWebServerFactory\\$LoaderHidingResource\\.addPath\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/eclipse\\/jetty\\/util\\/resource\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyServletWebServerFactory\\$LoaderHidingResource\\.isContainedIn\\:\\(Lorg\\/eclipse\\/jetty\\/util\\/resource\\/Resource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyServletWebServerFactory\\$LoaderHidingResource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyServletWebServerFactory\\$LoaderHidingResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyServletWebServerFactory\\$LoaderHidingResource\\.getReadableByteChannel\\:\\(\\)Ljava\\/nio\\/channels\\/ReadableByteChannel\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyServletWebServerFactory\\$LoaderHidingResource\\.delete\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.jetty\\.JettyServletWebServerFactory\\$LoaderHidingResource\\.renameTo\\:\\(Lorg\\/eclipse\\/jetty\\/util\\/resource\\/Resource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.SslBuilderCustomizer\\.getKeyStore\\:\\(Lorg\\/springframework\\/boot\\/web\\/server\\/Ssl\\;Lorg\\/springframework\\/boot\\/web\\/server\\/SslStoreProvider\\;\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.SslBuilderCustomizer\\.getTrustStore\\:\\(Lorg\\/springframework\\/boot\\/web\\/server\\/Ssl\\;Lorg\\/springframework\\/boot\\/web\\/server\\/SslStoreProvider\\;\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.SslBuilderCustomizer\\.loadKeyStore\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.netty\\.SslServerCustomizer\\.getKeyStore\\:\\(Lorg\\/springframework\\/boot\\/web\\/server\\/Ssl\\;Lorg\\/springframework\\/boot\\/web\\/server\\/SslStoreProvider\\;\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.netty\\.SslServerCustomizer\\.getTrustStore\\:\\(Lorg\\/springframework\\/boot\\/web\\/server\\/Ssl\\;Lorg\\/springframework\\/boot\\/web\\/server\\/SslStoreProvider\\;\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.netty\\.SslServerCustomizer\\.loadKeyStore\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.reactive\\.result\\.view\\.MustacheView\\.checkResourceExists\\:\\(Ljava\\/util\\/Locale\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.reactive\\.result\\.view\\.MustacheView\\.getReader\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.liquibase\\.SpringPackageScanClassResolver\\.scan\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;\\)\\[Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jackson\\.JsonComponentModule\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jackson\\.JsonObjectSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.jackson\\.JsonObjectSerializer\\.serializeObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.builder\\.ParentContextCloserApplicationListener\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.validation\\.MessageInterpolatorFactory\\.getObject\\:\\(\\)Ljavax\\/validation\\/MessageInterpolator\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.validation\\.MessageInterpolatorFactory\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.ImageBanner\\.printBanner\\:\\(Lorg\\/springframework\\/core\\/env\\/Environment\\;Ljava\\/io\\/PrintStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.ImageBanner\\.readFrames\\:\\(II\\)\\[Lorg\\/springframework\\/boot\\/ImageBanner\\$Frame\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.ImageBanner\\.readFrames\\:\\(IILjavax\\/imageio\\/stream\\/ImageInputStream\\;\\)\\[Lorg\\/springframework\\/boot\\/ImageBanner\\$Frame\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.ImageBanner\\.readFrame\\:\\(IILjavax\\/imageio\\/ImageReader\\;ILjavax\\/imageio\\/ImageReadParam\\;\\)Lorg\\/springframework\\/boot\\/ImageBanner\\$Frame\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.ImageBanner\\.getDelayTime\\:\\(Ljavax\\/imageio\\/ImageReader\\;I\\)I"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.logging\\.logback\\.SpringPropertyAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.logging\\.logback\\.SpringPropertyAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.web.server.WebServerException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.UndertowServletWebServer\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.UndertowServletWebServer\\.createUndertowServer\\:\\(\\)Lio\\/undertow\\/Undertow\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.web.server.WebServerException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.web\\.embedded\\.undertow\\.UndertowServletWebServer\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.elasticsearch\\.ElasticsearchAutoConfiguration\\.elasticsearchClient\\:\\(\\)Lorg\\/elasticsearch\\/client\\/transport\\/TransportClient\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.couchbase\\.SpringBootCouchbaseConfigurer\\.couchbaseEnvironment\\:\\(\\)Lcom\\/couchbase\\/client\\/java\\/env\\/CouchbaseEnvironment\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.couchbase\\.SpringBootCouchbaseConfigurer\\.couchbaseCluster\\:\\(\\)Lcom\\/couchbase\\/client\\/java\\/Cluster\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.couchbase\\.SpringBootCouchbaseConfigurer\\.couchbaseClusterInfo\\:\\(\\)Lcom\\/couchbase\\/client\\/java\\/cluster\\/ClusterInfo\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.couchbase\\.SpringBootCouchbaseConfigurer\\.couchbaseClient\\:\\(\\)Lcom\\/couchbase\\/client\\/java\\/Bucket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.transaction\\.jta\\.AtomikosJtaConfiguration\\.atomikosTransactionManager\\:\\(Lcom\\/atomikos\\/icatch\\/config\\/UserTransactionService\\;\\)Lcom\\/atomikos\\/icatch\\/jta\\/UserTransactionManager\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jmx\\.ParentAwareNamingStrategy\\.getObjectName\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jmx\\.ParentAwareNamingStrategy\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.integration\\.IntegrationAutoConfigurationScanRegistrar\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.template\\.TemplateLocation\\.anyExists\\:\\(Lorg\\/springframework\\/core\\/io\\/support\\/ResourcePatternResolver\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jms\\.artemis\\.ArtemisConnectionFactoryFactory\\.doCreateConnectionFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/activemq\\/artemis\\/jms\\/client\\/ActiveMQConnectionFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jms\\.artemis\\.ArtemisConnectionFactoryFactory\\.createEmbeddedConnectionFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/activemq\\/artemis\\/jms\\/client\\/ActiveMQConnectionFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jms\\.artemis\\.ArtemisConnectionFactoryFactory\\.createNativeConnectionFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/activemq\\/artemis\\/jms\\/client\\/ActiveMQConnectionFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jms\\.activemq\\.ActiveMQXAConnectionFactoryConfiguration\\.jmsConnectionFactory\\:\\(Lorg\\/springframework\\/boot\\/autoconfigure\\/jms\\/activemq\\/ActiveMQProperties\\;Lorg\\/springframework\\/beans\\/factory\\/ObjectProvider\\;Lorg\\/springframework\\/boot\\/jms\\/XAConnectionFactoryWrapper\\;\\)Ljavax\\/jms\\/ConnectionFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.flyway\\.FlywayMigrationInitializer\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.kafka\\.KafkaAutoConfiguration\\.kafkaJaasInitializer\\:\\(\\)Lorg\\/springframework\\/kafka\\/security\\/jaas\\/KafkaJaasLoginModuleInitializer\\;"
 }, 
 {
  "exceptions": [
   "com.unboundid.ldap.sdk.LDAPException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.ldap\\.embedded\\.EmbeddedLdapAutoConfiguration\\.directoryServer\\:\\(\\)Lcom\\/unboundid\\/ldap\\/listener\\/InMemoryDirectoryServer\\;"
 }, 
 {
  "exceptions": [
   "com.unboundid.ldap.sdk.LDAPException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.ldap\\.embedded\\.EmbeddedLdapAutoConfiguration\\.importLdif\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.condition\\.ConditionEvaluationReportAutoConfigurationImportListener\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.condition\\.OnClassCondition\\$MatchType\\.forName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.condition\\.OnClassCondition\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.webservices\\.WebServicesAutoConfiguration\\$WsdlDefinitionBeanFactoryPostProcessor\\.postProcessBeanDefinitionRegistry\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.webservices\\.WebServicesAutoConfiguration\\$WsdlDefinitionBeanFactoryPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.couchbase\\.CouchbaseConfigurerAdapterConfiguration\\.springBootCouchbaseConfigurer\\:\\(\\)Lorg\\/springframework\\/data\\/couchbase\\/config\\/CouchbaseConfigurer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.info\\.ProjectInfoAutoConfiguration\\.gitProperties\\:\\(\\)Lorg\\/springframework\\/boot\\/info\\/GitProperties\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.info\\.ProjectInfoAutoConfiguration\\.buildProperties\\:\\(\\)Lorg\\/springframework\\/boot\\/info\\/BuildProperties\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.info\\.ProjectInfoAutoConfiguration\\.loadFrom\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.AbstractRepositoryConfigurationSourceSupport\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.redis\\.RedisAutoConfiguration\\.redisTemplate\\:\\(Lorg\\/springframework\\/data\\/redis\\/connection\\/RedisConnectionFactory\\;\\)Lorg\\/springframework\\/data\\/redis\\/core\\/RedisTemplate\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.redis\\.RedisAutoConfiguration\\.stringRedisTemplate\\:\\(Lorg\\/springframework\\/data\\/redis\\/connection\\/RedisConnectionFactory\\;\\)Lorg\\/springframework\\/data\\/redis\\/core\\/StringRedisTemplate\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jms\\.activemq\\.ActiveMQConnectionFactoryFactory\\.doCreateConnectionFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/activemq\\/ActiveMQConnectionFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jms\\.activemq\\.ActiveMQConnectionFactoryFactory\\.createConnectionFactoryInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/activemq\\/ActiveMQConnectionFactory\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jms\\.JndiConnectionFactoryAutoConfiguration\\.connectionFactory\\:\\(\\)Ljavax\\/jms\\/ConnectionFactory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.hazelcast\\.HazelcastClientConfiguration\\$HazelcastClientConfigFileConfiguration\\.hazelcastInstance\\:\\(Lorg\\/springframework\\/boot\\/autoconfigure\\/hazelcast\\/HazelcastProperties\\;\\)Lcom\\/hazelcast\\/core\\/HazelcastInstance\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.hazelcast\\.HazelcastServerConfiguration\\$HazelcastServerConfigFileConfiguration\\.hazelcastInstance\\:\\(Lorg\\/springframework\\/boot\\/autoconfigure\\/hazelcast\\/HazelcastProperties\\;\\)Lcom\\/hazelcast\\/core\\/HazelcastInstance\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jmx\\.JmxAutoConfiguration\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jdbc\\.DataSourceInitializerPostProcessor\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jdbc\\.DataSourceInitializerPostProcessor\\.postProcessAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jdbc\\.XADataSourceAutoConfiguration\\.dataSource\\:\\(\\)Ljavax\\/sql\\/DataSource\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.mustache\\.MustacheResourceTemplateLoader\\.getTemplate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.mongo\\.embedded\\.EmbeddedMongoAutoConfiguration\\.embeddedMongoServer\\:\\(Lde\\/flapdoodle\\/embed\\/mongo\\/config\\/IMongodConfig\\;\\)Lde\\/flapdoodle\\/embed\\/mongo\\/MongodExecutable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.mongo\\.embedded\\.EmbeddedMongoAutoConfiguration\\.embeddedMongoConfiguration\\:\\(\\)Lde\\/flapdoodle\\/embed\\/mongo\\/config\\/IMongodConfig\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.mongo\\.embedded\\.EmbeddedMongoAutoConfiguration\\.getHost\\:\\(\\)Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.hateoas\\.HypermediaHttpMessageConverterConfiguration\\$HalMessageConverterSupportedMediaTypesCustomizer\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.validation\\.ValidatorAdapter\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.validation\\.ValidatorAdapter\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.validation\\.ValidatorAdapter\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.dao.DataAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.mongo\\.MongoDataAutoConfiguration\\$GridFsMongoDbFactory\\.getDb\\:\\(\\)Lcom\\/mongodb\\/client\\/MongoDatabase\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.dao.DataAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.mongo\\.MongoDataAutoConfiguration\\$GridFsMongoDbFactory\\.getDb\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/mongodb\\/client\\/MongoDatabase\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.mongo\\.MongoDataAutoConfiguration\\.mongoMappingContext\\:\\(Lorg\\/springframework\\/data\\/mongodb\\/core\\/convert\\/MongoCustomConversions\\;\\)Lorg\\/springframework\\/data\\/mongodb\\/core\\/mapping\\/MongoMappingContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.mustache\\.MustacheEnvironmentCollector\\$PropertyVariableFetcher\\.get\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.batch\\.BatchAutoConfiguration\\.jobOperator\\:\\(Lorg\\/springframework\\/batch\\/core\\/explore\\/JobExplorer\\;Lorg\\/springframework\\/batch\\/core\\/launch\\/JobLauncher\\;Lorg\\/springframework\\/batch\\/core\\/configuration\\/ListableJobLocator\\;Lorg\\/springframework\\/batch\\/core\\/repository\\/JobRepository\\;\\)Lorg\\/springframework\\/batch\\/core\\/launch\\/support\\/SimpleJobOperator\\;"
 }, 
 {
  "exceptions": [
   "liquibase.exception.LiquibaseException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.liquibase\\.LiquibaseAutoConfiguration\\$DataSourceClosingSpringLiquibase\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.couchbase\\.SpringBootCouchbaseReactiveDataConfiguration\\.reactiveCouchbaseTemplate\\:\\(\\)Lorg\\/springframework\\/data\\/couchbase\\/core\\/RxJavaCouchbaseTemplate\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.couchbase\\.SpringBootCouchbaseReactiveDataConfiguration\\.reactiveRepositoryOperationsMapping\\:\\(Lorg\\/springframework\\/data\\/couchbase\\/core\\/RxJavaCouchbaseTemplate\\;\\)Lorg\\/springframework\\/data\\/couchbase\\/repository\\/config\\/ReactiveRepositoryOperationsMapping\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.neo4j\\.Neo4jProperties\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.cache\\.JCacheCacheConfiguration\\.jCacheCacheManager\\:\\(\\)Ljavax\\/cache\\/CacheManager\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.cache\\.JCacheCacheConfiguration\\.createCacheManager\\:\\(\\)Ljavax\\/cache\\/CacheManager\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.cache\\.HazelcastCacheConfiguration\\.cacheManager\\:\\(Lcom\\/hazelcast\\/core\\/HazelcastInstance\\;\\)Lcom\\/hazelcast\\/spring\\/cache\\/HazelcastCacheManager\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.HttpMediaTypeNotAcceptableException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.web\\.servlet\\.WebMvcAutoConfiguration\\$OptionalPathExtensionContentNegotiationStrategy\\.resolveMediaTypes\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.web\\.servlet\\.ServletWebServerFactoryAutoConfiguration\\$BeanPostProcessorsRegistrar\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.web\\.reactive\\.ReactiveWebServerFactoryAutoConfiguration\\$BeanPostProcessorsRegistrar\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jms\\.artemis\\.ArtemisXAConnectionFactoryConfiguration\\.jmsConnectionFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/ListableBeanFactory\\;Lorg\\/springframework\\/boot\\/autoconfigure\\/jms\\/artemis\\/ArtemisProperties\\;Lorg\\/springframework\\/boot\\/jms\\/XAConnectionFactoryWrapper\\;\\)Ljavax\\/jms\\/ConnectionFactory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.hazelcast\\.HazelcastInstanceFactory\\.\\<init\\>\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.hazelcast\\.HazelcastInstanceFactory\\.getConfig\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lcom\\/hazelcast\\/config\\/Config\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.hazelcast\\.HazelcastClientFactory\\.\\<init\\>\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.hazelcast\\.HazelcastClientFactory\\.getClientConfig\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lcom\\/hazelcast\\/client\\/config\\/ClientConfig\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.batch.core.JobExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.batch\\.JobLauncherCommandLineRunner\\.run\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.batch.core.JobExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.batch\\.JobLauncherCommandLineRunner\\.launchJobFromProperties\\:\\(Ljava\\/util\\/Properties\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.batch.core.JobExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.batch\\.JobLauncherCommandLineRunner\\.executeRegisteredJobs\\:\\(Lorg\\/springframework\\/batch\\/core\\/JobParameters\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.batch.core.repository.JobExecutionAlreadyRunningException", 
   "org.springframework.batch.core.repository.JobRestartException", 
   "org.springframework.batch.core.repository.JobInstanceAlreadyCompleteException", 
   "org.springframework.batch.core.JobParametersInvalidException", 
   "org.springframework.batch.core.launch.JobParametersNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.batch\\.JobLauncherCommandLineRunner\\.execute\\:\\(Lorg\\/springframework\\/batch\\/core\\/Job\\;Lorg\\/springframework\\/batch\\/core\\/JobParameters\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.batch.core.JobExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.batch\\.JobLauncherCommandLineRunner\\.executeLocalJobs\\:\\(Lorg\\/springframework\\/batch\\/core\\/JobParameters\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.integration\\.IntegrationAutoConfiguration\\$IntegrationJmxConfiguration\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.AutoConfigurationExcludeFilter\\.match\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.domain\\.EntityScanner\\.scan\\:\\(\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.orm\\.jpa\\.JpaBaseConfiguration\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.couchbase\\.SpringBootCouchbaseDataConfiguration\\.getInitialEntitySet\\:\\(\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.data\\.couchbase\\.SpringBootCouchbaseDataConfiguration\\.couchbaseTemplate\\:\\(\\)Lorg\\/springframework\\/data\\/couchbase\\/core\\/CouchbaseTemplate\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.web\\.servlet\\.error\\.DefaultErrorViewResolver\\$HtmlResourceView\\.render\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.web\\.servlet\\.WelcomePageHandlerMapping\\.getHandlerInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.quartz\\.AutowireCapableBeanJobFactory\\.createJobInstance\\:\\(Lorg\\/quartz\\/spi\\/TriggerFiredBundle\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.websocket\\.servlet\\.JettyWebSocketServletWebServerCustomizer\\$1\\.configure\\:\\(Lorg\\/eclipse\\/jetty\\/webapp\\/WebAppContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.security\\.oauth2\\.client\\.OAuth2WebSecurityConfiguration\\$OAuth2WebSecurityConfigurerAdapter\\.configure\\:\\(Lorg\\/springframework\\/security\\/config\\/annotation\\/web\\/builders\\/HttpSecurity\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.validation\\.PrimaryDefaultValidatorPostProcessor\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.jersey\\.JerseyAutoConfiguration\\$JerseyWebApplicationInitializer\\.onStartup\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.admin\\.SpringApplicationAdminJmxAutoConfiguration\\.springApplicationAdminRegistrar\\:\\(\\)Lorg\\/springframework\\/boot\\/admin\\/SpringApplicationAdminMXBeanRegistrar\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.SharedMetadataReaderFactoryContextInitializer\\$CachingMetadataReaderFactoryPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.SharedMetadataReaderFactoryContextInitializer\\$CachingMetadataReaderFactoryPostProcessor\\.postProcessBeanDefinitionRegistry\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.SharedMetadataReaderFactoryContextInitializer\\$SharedMetadataReaderFactoryBean\\.getObject\\:\\(\\)Lorg\\/springframework\\/boot\\/type\\/classreading\\/ConcurrentReferenceCachingMetadataReaderFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.SharedMetadataReaderFactoryContextInitializer\\$SharedMetadataReaderFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.web\\.servlet\\.error\\.ErrorMvcAutoConfiguration\\$SpelView\\.render\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.autoconfigure\\.web\\.servlet\\.error\\.ErrorMvcAutoConfiguration\\$PreserveErrorControllerTargetClassPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException", 
   "ch.qos.logback.core.boolex.EvaluationException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.boolex\\.GEventEvaluator\\.evaluate\\:\\(Lch\\/qos\\/logback\\/classic\\/spi\\/ILoggingEvent\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException", 
   "ch.qos.logback.core.boolex.EvaluationException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.boolex\\.GEventEvaluator\\.evaluate\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException", 
   "ch.qos.logback.core.boolex.EvaluationException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.boolex\\.OnErrorEvaluator\\.evaluate\\:\\(Lch\\/qos\\/logback\\/classic\\/spi\\/ILoggingEvent\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException", 
   "ch.qos.logback.core.boolex.EvaluationException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.boolex\\.OnErrorEvaluator\\.evaluate\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException", 
   "ch.qos.logback.core.boolex.EvaluationException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.boolex\\.OnMarkerEvaluator\\.evaluate\\:\\(Lch\\/qos\\/logback\\/classic\\/spi\\/ILoggingEvent\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException", 
   "ch.qos.logback.core.boolex.EvaluationException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.boolex\\.OnMarkerEvaluator\\.evaluate\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.subAppend\\:\\(Lch\\/qos\\/logback\\/classic\\/spi\\/ILoggingEvent\\;Ljava\\/sql\\/Connection\\;Ljava\\/sql\\/PreparedStatement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.secondarySubAppend\\:\\(Lch\\/qos\\/logback\\/classic\\/spi\\/ILoggingEvent\\;Ljava\\/sql\\/Connection\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.bindLoggingEventWithInsertStatement\\:\\(Ljava\\/sql\\/PreparedStatement\\;Lch\\/qos\\/logback\\/classic\\/spi\\/ILoggingEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.bindLoggingEventArgumentsWithPreparedStatement\\:\\(Ljava\\/sql\\/PreparedStatement\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.bindCallerDataWithPreparedStatement\\:\\(Ljava\\/sql\\/PreparedStatement\\;\\[Ljava\\/lang\\/StackTraceElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.insertProperties\\:\\(Ljava\\/util\\/Map\\;Ljava\\/sql\\/Connection\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.updateExceptionStatement\\:\\(Ljava\\/sql\\/PreparedStatement\\;Ljava\\/lang\\/String\\;SJ\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.buildExceptionStatement\\:\\(Lch\\/qos\\/logback\\/classic\\/spi\\/IThrowableProxy\\;SLjava\\/sql\\/PreparedStatement\\;J\\)S"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.insertThrowable\\:\\(Lch\\/qos\\/logback\\/classic\\/spi\\/IThrowableProxy\\;Ljava\\/sql\\/Connection\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.secondarySubAppend\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/sql\\/Connection\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.db\\.DBAppender\\.subAppend\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/sql\\/Connection\\;Ljava\\/sql\\/PreparedStatement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.helpers\\.MDCInsertingServletFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.helpers\\.MDCInsertingServletFilter\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.jmx\\.JMXConfigurator\\.reloadDefaultConfiguration\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException", 
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.jmx\\.JMXConfigurator\\.reloadByFileName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.jmx\\.JMXConfigurator\\.reloadByURL\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.jmx\\.JMXConfiguratorMBean\\.reloadDefaultConfiguration\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException", 
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.jmx\\.JMXConfiguratorMBean\\.reloadByFileName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.jmx\\.JMXConfiguratorMBean\\.reloadByURL\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.joran\\.action\\.ConsolePluginAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.joran\\.action\\.ConsolePluginAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.joran\\.action\\.JMXConfiguratorAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.joran\\.action\\.JMXConfiguratorAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.joran\\.action\\.LoggerContextListenerAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.joran\\.action\\.LoggerContextListenerAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.joran\\.action\\.ReceiverAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.joran\\.action\\.ReceiverAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.Logger\\.readResolve\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.server\\.HardenedLoggingEventInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.server\\.HardenedLoggingEventInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.server\\.RemoteAppenderServerListener\\.createClient\\:\\(Ljava\\/lang\\/String\\;Ljava\\/net\\/Socket\\;\\)Lch\\/qos\\/logback\\/classic\\/net\\/server\\/RemoteAppenderClient\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.server\\.RemoteAppenderServerListener\\.createClient\\:\\(Ljava\\/lang\\/String\\;Ljava\\/net\\/Socket\\;\\)Lch\\/qos\\/logback\\/core\\/net\\/server\\/Client\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.server\\.RemoteAppenderStreamClient\\.createObjectInputStream\\:\\(\\)Lch\\/qos\\/logback\\/core\\/net\\/HardenedObjectInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.server\\.ServerSocketReceiver\\.getServerSocketFactory\\:\\(\\)Ljavax\\/net\\/ServerSocketFactory\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.server\\.ServerSocketReceiver\\.getInetAddress\\:\\(\\)Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.server\\.SSLServerSocketReceiver\\.getServerSocketFactory\\:\\(\\)Ljavax\\/net\\/ServerSocketFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.SimpleSocketServer\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.SimpleSocketServer\\.doMain\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.SimpleSocketServer\\.configureLC\\:\\(Lch\\/qos\\/logback\\/classic\\/LoggerContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.SimpleSSLSocketServer\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.SimpleSSLSocketServer\\.\\<init\\>\\:\\(Lch\\/qos\\/logback\\/classic\\/LoggerContext\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.SocketReceiver\\.waitForConnectorToReturnASocket\\:\\(\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.net.SocketException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.SyslogAppender\\.createOutputStream\\:\\(\\)Lch\\/qos\\/logback\\/core\\/net\\/SyslogOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.net\\.SyslogAppender\\.handleThrowableFirstLine\\:\\(Ljava\\/io\\/OutputStream\\;Lch\\/qos\\/logback\\/classic\\/spi\\/IThrowableProxy\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.selector\\.servlet\\.LoggerContextFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.selector\\.servlet\\.LoggerContextFilter\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.servlet\\.LogbackServletContainerInitializer\\.onStartup\\:\\(Ljava\\/util\\/Set\\;Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.sift\\.SiftAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.sift\\.SiftAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.spi\\.LoggingEvent\\.setThreadName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.spi\\.LoggingEvent\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.spi\\.LoggingEventVO\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.spi\\.LoggingEventVO\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.util\\.ContextInitializer\\.configureByResource\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.util\\.ContextInitializer\\.joranConfigureByResource\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.util\\.ContextInitializer\\.autoConfig\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.util\\.ContextSelectorStaticBinder\\.init\\:\\(Lch\\/qos\\/logback\\/classic\\/LoggerContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.SecurityException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.util\\.ContextSelectorStaticBinder\\.dynamicalContextSelector\\:\\(Lch\\/qos\\/logback\\/classic\\/LoggerContext\\;Ljava\\/lang\\/String\\;\\)Lch\\/qos\\/logback\\/classic\\/selector\\/ContextSelector\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.util\\.JNDIUtil\\.getInitialContext\\:\\(\\)Ljavax\\/naming\\/Context\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.classic\\.util\\.LogbackMDCAdapter\\.put\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.LogbackException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.Appender\\.doAppend\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException", 
   "ch.qos.logback.core.boolex.EvaluationException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.boolex\\.EventEvaluator\\.evaluate\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.boolex.EvaluationException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.boolex\\.JaninoEventEvaluatorBase\\.evaluate\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.boolex.EvaluationException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.boolex\\.Matcher\\.matches\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.ContextBase\\.setName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.db\\.ConnectionSource\\.getConnection\\:\\(\\)Ljava\\/sql\\/Connection\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.db\\.DataSourceConnectionSource\\.getConnection\\:\\(\\)Ljava\\/sql\\/Connection\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.db\\.DBAppenderBase\\.subAppend\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/sql\\/Connection\\;Ljava\\/sql\\/PreparedStatement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.db\\.DBAppenderBase\\.secondarySubAppend\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/sql\\/Connection\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.db\\.DBAppenderBase\\.selectEventId\\:\\(Ljava\\/sql\\/PreparedStatement\\;Ljava\\/sql\\/Connection\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.db\\.DriverManagerConnectionSource\\.getConnection\\:\\(\\)Ljava\\/sql\\/Connection\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.db\\.JNDIConnectionSource\\.getConnection\\:\\(\\)Ljava\\/sql\\/Connection\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.sql.SQLException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.db\\.JNDIConnectionSource\\.lookupDataSource\\:\\(\\)Ljavax\\/sql\\/DataSource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.encoder\\.NonClosableInputStream\\.realClose\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.FileAppender\\.openFile\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.FileAppender\\.safeWrite\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.FileAppender\\.writeOut\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.helpers\\.CyclicBuffer\\.\\<init\\>\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.Action\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.Action\\.body\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.Action\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.AppenderAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.ContextPropertyAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.ContextPropertyAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.DefinePropertyAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.IncludeAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.IncludeAction\\.parseAndRecord\\:\\(Ljava\\/io\\/InputStream\\;Lch\\/qos\\/logback\\/core\\/joran\\/event\\/SaxEventRecorder\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.IncludeAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.PropertyAction\\.loadAndSetProperties\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/io\\/InputStream\\;Lch\\/qos\\/logback\\/core\\/joran\\/action\\/ActionUtil\\$Scope\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.ShutdownHookAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.ShutdownHookAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.StatusListenerAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.TimestampAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.action\\.TimestampAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.conditional\\.IfAction\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.conditional\\.IfAction\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "org.codehaus.commons.compiler.CompileException", 
   "java.lang.InstantiationException", 
   "java.lang.SecurityException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.conditional\\.PropertyEvalScriptBuilder\\.build\\:\\(Ljava\\/lang\\/String\\;\\)Lch\\/qos\\/logback\\/core\\/joran\\/conditional\\/Condition\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.conditional\\.ThenOrElseActionBase\\.begin\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.ActionException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.conditional\\.ThenOrElseActionBase\\.end\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/InterpretationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.event\\.SaxEventRecorder\\.recordEvents\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.event\\.SaxEventRecorder\\.recordEvents\\:\\(Lorg\\/xml\\/sax\\/InputSource\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.event\\.SaxEventRecorder\\.handleError\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.event\\.SaxEventRecorder\\.buildSaxParser\\:\\(\\)Ljavax\\/xml\\/parsers\\/SAXParser\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.event\\.SaxEventRecorder\\.error\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.event\\.SaxEventRecorder\\.fatalError\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.event\\.SaxEventRecorder\\.warning\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.event\\.stax\\.StaxEventRecorder\\.recordEvents\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.event\\.stax\\.StaxEventRecorder\\.read\\:\\(Ljavax\\/xml\\/stream\\/XMLEventReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.GenericConfigurator\\.doConfigure\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.GenericConfigurator\\.doConfigure\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.GenericConfigurator\\.doConfigure\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.GenericConfigurator\\.doConfigure\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.GenericConfigurator\\.doConfigure\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.GenericConfigurator\\.doConfigure\\:\\(Lorg\\/xml\\/sax\\/InputSource\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.GenericConfigurator\\.doConfigure\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.spi\\.ConsoleTarget\\$1\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.spi\\.ConsoleTarget\\$1\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.spi\\.ConsoleTarget\\$1\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.spi\\.ConsoleTarget\\$1\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.spi\\.ConsoleTarget\\$2\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.spi\\.ConsoleTarget\\$2\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.spi\\.ConsoleTarget\\$2\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.spi\\.ConsoleTarget\\$2\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.spi\\.RuleStore\\.addRule\\:\\(Lch\\/qos\\/logback\\/core\\/joran\\/spi\\/ElementSelector\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.util.PropertySetterException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.joran\\.util\\.PropertySetter\\.setProperty\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.AbstractSocketAppender\\.socketConnectionCouldBeEstablished\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.AbstractSocketAppender\\.createObjectWriterForSocket\\:\\(\\)Lch\\/qos\\/logback\\/core\\/net\\/ObjectWriter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.AbstractSocketAppender\\.dispatchEvents\\:\\(Lch\\/qos\\/logback\\/core\\/net\\/ObjectWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.AutoFlushingObjectWriter\\.write\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.AutoFlushingObjectWriter\\.preventMemoryLeak\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.DefaultSocketConnector\\.call\\:\\(\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.DefaultSocketConnector\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.HardenedObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.HardenedObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.HardenedObjectInputStream\\.resolveClass\\:\\(Ljava\\/io\\/ObjectStreamClass\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ObjectWriter\\.write\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ObjectWriterFactory\\.newAutoFlushingObjectWriter\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lch\\/qos\\/logback\\/core\\/net\\/AutoFlushingObjectWriter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.server\\.AbstractServerSocketAppender\\.getServerSocketFactory\\:\\(\\)Ljavax\\/net\\/ServerSocketFactory\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.server\\.AbstractServerSocketAppender\\.getInetAddress\\:\\(\\)Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.server\\.ConcurrentServerRunner\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.server\\.RemoteReceiverServerListener\\.createClient\\:\\(Ljava\\/lang\\/String\\;Ljava\\/net\\/Socket\\;\\)Lch\\/qos\\/logback\\/core\\/net\\/server\\/RemoteReceiverClient\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.server\\.RemoteReceiverServerListener\\.createClient\\:\\(Ljava\\/lang\\/String\\;Ljava\\/net\\/Socket\\;\\)Lch\\/qos\\/logback\\/core\\/net\\/server\\/Client\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.server\\.RemoteReceiverStreamClient\\.createObjectOutputStream\\:\\(\\)Ljava\\/io\\/ObjectOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.server\\.ServerListener\\.acceptClient\\:\\(\\)Lch\\/qos\\/logback\\/core\\/net\\/server\\/Client\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.server\\.ServerRunner\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.server\\.ServerSocketListener\\.acceptClient\\:\\(\\)Lch\\/qos\\/logback\\/core\\/net\\/server\\/Client\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.server\\.ServerSocketListener\\.createClient\\:\\(Ljava\\/lang\\/String\\;Ljava\\/net\\/Socket\\;\\)Lch\\/qos\\/logback\\/core\\/net\\/server\\/Client\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.SocketConnector\\.call\\:\\(\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.ConfigurableSSLServerSocketFactory\\.createServerSocket\\:\\(IILjava\\/net\\/InetAddress\\;\\)Ljava\\/net\\/ServerSocket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.ConfigurableSSLServerSocketFactory\\.createServerSocket\\:\\(II\\)Ljava\\/net\\/ServerSocket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.ConfigurableSSLServerSocketFactory\\.createServerSocket\\:\\(I\\)Ljava\\/net\\/ServerSocket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.ConfigurableSSLSocketFactory\\.createSocket\\:\\(Ljava\\/net\\/InetAddress\\;ILjava\\/net\\/InetAddress\\;I\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.ConfigurableSSLSocketFactory\\.createSocket\\:\\(Ljava\\/net\\/InetAddress\\;I\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.ConfigurableSSLSocketFactory\\.createSocket\\:\\(Ljava\\/lang\\/String\\;ILjava\\/net\\/InetAddress\\;I\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.ConfigurableSSLSocketFactory\\.createSocket\\:\\(Ljava\\/lang\\/String\\;I\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchProviderException", 
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.KeyManagerFactoryFactoryBean\\.createKeyManagerFactory\\:\\(\\)Ljavax\\/net\\/ssl\\/KeyManagerFactory\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchProviderException", 
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.KeyStoreFactoryBean\\.createKeyStore\\:\\(\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException", 
   "java.security.NoSuchProviderException", 
   "java.security.KeyStoreException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.KeyStoreFactoryBean\\.newKeyStore\\:\\(\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchProviderException", 
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.SecureRandomFactoryBean\\.createSecureRandom\\:\\(\\)Ljava\\/security\\/SecureRandom\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchProviderException", 
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyManagementException", 
   "java.security.UnrecoverableKeyException", 
   "java.security.KeyStoreException", 
   "java.security.cert.CertificateException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.SSLContextFactoryBean\\.createContext\\:\\(Lch\\/qos\\/logback\\/core\\/spi\\/ContextAware\\;\\)Ljavax\\/net\\/ssl\\/SSLContext\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchProviderException", 
   "java.security.NoSuchAlgorithmException", 
   "java.security.UnrecoverableKeyException", 
   "java.security.KeyStoreException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.SSLContextFactoryBean\\.createKeyManagers\\:\\(Lch\\/qos\\/logback\\/core\\/spi\\/ContextAware\\;\\)\\[Ljavax\\/net\\/ssl\\/KeyManager\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchProviderException", 
   "java.security.NoSuchAlgorithmException", 
   "java.security.KeyStoreException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.SSLContextFactoryBean\\.createTrustManagers\\:\\(Lch\\/qos\\/logback\\/core\\/spi\\/ContextAware\\;\\)\\[Ljavax\\/net\\/ssl\\/TrustManager\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchProviderException", 
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.SSLContextFactoryBean\\.createSecureRandom\\:\\(Lch\\/qos\\/logback\\/core\\/spi\\/ContextAware\\;\\)Ljava\\/security\\/SecureRandom\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchProviderException", 
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.ssl\\.TrustManagerFactoryFactoryBean\\.createTrustManagerFactory\\:\\(\\)Ljavax\\/net\\/ssl\\/TrustManagerFactory\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException", 
   "java.net.SocketException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.SyslogAppenderBase\\.createOutputStream\\:\\(\\)Lch\\/qos\\/logback\\/core\\/net\\/SyslogOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException", 
   "java.net.SocketException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.SyslogOutputStream\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.SyslogOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.SyslogOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.SyslogOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.net.SocketException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.net\\.SyslogOutputStream\\.getSendBufferSize\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.OutputStreamAppender\\.writeOut\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.OutputStreamAppender\\.writeBytes\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.FormatInfo\\.valueOf\\:\\(Ljava\\/lang\\/String\\;\\)Lch\\/qos\\/logback\\/core\\/pattern\\/FormatInfo\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.OptionTokenizer\\.tokenize\\:\\(CLjava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.Parser\\.\\<init\\>\\:\\(Lch\\/qos\\/logback\\/core\\/pattern\\/parser\\/TokenStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.Parser\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.Parser\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Lch\\/qos\\/logback\\/core\\/pattern\\/util\\/IEscapeUtil\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.Parser\\.parse\\:\\(\\)Lch\\/qos\\/logback\\/core\\/pattern\\/parser\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.Parser\\.E\\:\\(\\)Lch\\/qos\\/logback\\/core\\/pattern\\/parser\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.Parser\\.Eopt\\:\\(\\)Lch\\/qos\\/logback\\/core\\/pattern\\/parser\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.Parser\\.T\\:\\(\\)Lch\\/qos\\/logback\\/core\\/pattern\\/parser\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.Parser\\.C\\:\\(\\)Lch\\/qos\\/logback\\/core\\/pattern\\/parser\\/FormattingNode\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.Parser\\.SINGLE\\:\\(\\)Lch\\/qos\\/logback\\/core\\/pattern\\/parser\\/FormattingNode\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.Parser\\.COMPOSITE\\:\\(Ljava\\/lang\\/String\\;\\)Lch\\/qos\\/logback\\/core\\/pattern\\/parser\\/FormattingNode\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.TokenStream\\.tokenize\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.pattern\\.parser\\.TokenStream\\.processOption\\:\\(CLjava\\/util\\/List\\;Ljava\\/lang\\/StringBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.recovery\\.ResilientFileOutputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/File\\;ZJ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.recovery\\.ResilientFileOutputStream\\.openNewOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.recovery\\.ResilientOutputStreamBase\\.openNewOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.recovery\\.ResilientOutputStreamBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException", 
   "java.net.SocketException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.recovery\\.ResilientSyslogOutputStream\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.recovery\\.ResilientSyslogOutputStream\\.openNewOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.rolling\\.FixedWindowRollingPolicy\\.rollover\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.rolling\\.helper\\.Compressor\\.asyncCompress\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/concurrent\\/Future\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.rolling\\.helper\\.FileStoreUtil\\.areOnSameFileStore\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.rolling\\.helper\\.RenameUtil\\.rename\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.rolling\\.helper\\.RenameUtil\\.areOnDifferentVolumes\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.rolling\\.helper\\.RenameUtil\\.renameByCopying\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.rolling\\.helper\\.RenameUtil\\.createMissingTargetDirsIfNecessary\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.rolling\\.RollingPolicy\\.rollover\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.rolling\\.TimeBasedRollingPolicy\\.rollover\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.rolling\\.TimeBasedRollingPolicy\\.renameRawAndAsyncCompress\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/concurrent\\/Future\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.sift\\.AbstractAppenderFactoryUsingJoran\\.buildAppender\\:\\(Lch\\/qos\\/logback\\/core\\/Context\\;Ljava\\/lang\\/String\\;\\)Lch\\/qos\\/logback\\/core\\/Appender\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.sift\\.AppenderFactory\\.buildAppender\\:\\(Lch\\/qos\\/logback\\/core\\/Context\\;Ljava\\/lang\\/String\\;\\)Lch\\/qos\\/logback\\/core\\/Appender\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.joran.spi.JoranException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.sift\\.SiftingJoranConfiguratorBase\\.doConfigure\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.status\\.ViewStatusMessagesServletBase\\.service\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.NodeToStringTransformer\\.substituteVariable\\:\\(Ljava\\/lang\\/String\\;Lch\\/qos\\/logback\\/core\\/spi\\/PropertyContainer\\;Lch\\/qos\\/logback\\/core\\/spi\\/PropertyContainer\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.NodeToStringTransformer\\.tokenizeAndParseString\\:\\(Ljava\\/lang\\/String\\;\\)Lch\\/qos\\/logback\\/core\\/subst\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.NodeToStringTransformer\\.transform\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.NodeToStringTransformer\\.compileNode\\:\\(Lch\\/qos\\/logback\\/core\\/subst\\/Node\\;Ljava\\/lang\\/StringBuilder\\;Ljava\\/util\\/Stack\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.NodeToStringTransformer\\.handleVariable\\:\\(Lch\\/qos\\/logback\\/core\\/subst\\/Node\\;Ljava\\/lang\\/StringBuilder\\;Ljava\\/util\\/Stack\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.Parser\\.parse\\:\\(\\)Lch\\/qos\\/logback\\/core\\/subst\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.Parser\\.E\\:\\(\\)Lch\\/qos\\/logback\\/core\\/subst\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.Parser\\.Eopt\\:\\(\\)Lch\\/qos\\/logback\\/core\\/subst\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.Parser\\.T\\:\\(\\)Lch\\/qos\\/logback\\/core\\/subst\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.Parser\\.V\\:\\(\\)Lch\\/qos\\/logback\\/core\\/subst\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.Parser\\.C\\:\\(\\)Lch\\/qos\\/logback\\/core\\/subst\\/Node\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.Parser\\.expectCurlyRight\\:\\(Lch\\/qos\\/logback\\/core\\/subst\\/Token\\;\\)V"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.spi.ScanException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.subst\\.Tokenizer\\.tokenize\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException", 
   "java.net.SocketException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.ContextUtil\\.getLocalHostName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException", 
   "java.net.SocketException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.ContextUtil\\.getLocalAddressAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.rolling.RolloverFailure"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.FileUtil\\.copy\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.Loader\\.getResources\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.Loader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Lch\\/qos\\/logback\\/core\\/Context\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.Loader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException", 
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.LocationUtil\\.urlForResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.util.IncompatibleClassException", 
   "ch.qos.logback.core.util.DynamicClassLoadingException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.OptionHelper\\.instantiateByClassName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Lch\\/qos\\/logback\\/core\\/Context\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.util.IncompatibleClassException", 
   "ch.qos.logback.core.util.DynamicClassLoadingException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.OptionHelper\\.instantiateByClassNameAndParameter\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Lch\\/qos\\/logback\\/core\\/Context\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.util.IncompatibleClassException", 
   "ch.qos.logback.core.util.DynamicClassLoadingException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.OptionHelper\\.instantiateByClassName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "ch.qos.logback.core.util.IncompatibleClassException", 
   "ch.qos.logback.core.util.DynamicClassLoadingException"
  ], 
  "methodRegex": "ch\\.qos\\.logback\\.core\\.util\\.OptionHelper\\.instantiateByClassNameAndParameter\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.ObjectMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.ObjectMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.Activator\\.start\\:\\(Lorg\\/osgi\\/framework\\/BundleContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.Activator\\.stop\\:\\(Lorg\\/osgi\\/framework\\/BundleContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.Level\\.clone\\:\\(\\)Lorg\\/apache\\/logging\\/log4j\\/Level\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.Level\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.FormattedMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.FormattedMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.ObjectArrayMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.ObjectArrayMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.SimpleMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.SimpleMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.StringFormattedMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.StringFormattedMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.status\\.StatusConsoleListener\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.LocalizedMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.LocalizedMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.MessageFormatMessage\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.MessageFormatMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.InvalidObjectException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.message\\.ThreadDumpMessage\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.LoaderUtil\\.loadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.LoaderUtil\\.newInstanceOf\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.IllegalAccessException", 
   "java.lang.InstantiationException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.LoaderUtil\\.newInstanceOf\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.LoaderUtil\\.newCheckedInstanceOf\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.LoaderUtil\\.newCheckedInstanceOfProperty\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.SortedArrayStringMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.SortedArrayStringMap\\.marshall\\:\\(Ljava\\/lang\\/Object\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.SortedArrayStringMap\\.unmarshall\\:\\(\\[B\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.logging\\.log4j\\.util\\.SortedArrayStringMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.slf4j\\.bridge\\.SLF4JBridgeHandler\\.uninstall\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.slf4j\\.bridge\\.SLF4JBridgeHandler\\.isInstalled\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.TypeDescription\\.setProperty\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.Yaml\\$SilentEmitter\\.emit\\:\\(Lorg\\/yaml\\/snakeyaml\\/events\\/Event\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.constructor\\.BaseConstructor\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/yaml\\/snakeyaml\\/nodes\\/Node\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.constructor\\.BaseConstructor\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/yaml\\/snakeyaml\\/nodes\\/Node\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.constructor\\.Constructor\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.constructor\\.Constructor\\.getClassForName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.constructor\\.CustomClassLoaderConstructor\\.getClassForName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitable\\.emit\\:\\(Lorg\\/yaml\\/snakeyaml\\/events\\/Event\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectBlockMappingKey\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectBlockMappingSimpleValue\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectBlockMappingValue\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectBlockSequenceItem\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectDocumentEnd\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectDocumentRoot\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectDocumentStart\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFirstBlockMappingKey\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFirstBlockSequenceItem\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFirstDocumentStart\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFirstFlowMappingKey\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFirstFlowSequenceItem\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFlowMappingKey\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFlowMappingSimpleValue\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFlowMappingValue\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectFlowSequenceItem\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectNothing\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\$ExpectStreamStart\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.emit\\:\\(Lorg\\/yaml\\/snakeyaml\\/events\\/Event\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectNode\\:\\(ZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectAlias\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectScalar\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectFlowSequence\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectFlowMapping\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectBlockSequence\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.expectBlockMapping\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.processAnchor\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.processTag\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.processScalar\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.flushStream\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeStreamEnd\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeIndicator\\:\\(Ljava\\/lang\\/String\\;ZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeIndent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeWhitespace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeLineBreak\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeVersionDirective\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeTagDirective\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeSingleQuoted\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeDoubleQuoted\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeFolded\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writeLiteral\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.writePlain\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.access\\$1600\\:\\(Lorg\\/yaml\\/snakeyaml\\/emitter\\/Emitter\\;ZZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.Emitter\\.access\\$3300\\:\\(Lorg\\/yaml\\/snakeyaml\\/emitter\\/Emitter\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.emitter\\.EmitterState\\.expect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.extensions\\.compactnotation\\.CompactConstructor\\.createInstance\\:\\(Lorg\\/yaml\\/snakeyaml\\/nodes\\/ScalarNode\\;Lorg\\/yaml\\/snakeyaml\\/extensions\\/compactnotation\\/CompactData\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.extensions\\.compactnotation\\.CompactConstructor\\.setProperties\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.extensions\\.compactnotation\\.PackageCompactConstructor\\.getClassForName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.external\\.com\\.google\\.gdata\\.util\\.common\\.base\\.UnicodeEscaper\\$1\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.external\\.com\\.google\\.gdata\\.util\\.common\\.base\\.UnicodeEscaper\\$1\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.external\\.com\\.google\\.gdata\\.util\\.common\\.base\\.UnicodeEscaper\\$1\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.external\\.com\\.google\\.gdata\\.util\\.common\\.base\\.UnicodeEscaper\\$1\\.outputChars\\:\\(\\[CI\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.FieldProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.MethodProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.MissingProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.Property\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.introspector\\.PropertySubstitute\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.reader\\.UnicodeReader\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.reader\\.UnicodeReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.reader\\.UnicodeReader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.serializer\\.Serializer\\.open\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.serializer\\.Serializer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.serializer\\.Serializer\\.serialize\\:\\(Lorg\\/yaml\\/snakeyaml\\/nodes\\/Node\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.serializer\\.Serializer\\.serializeNode\\:\\(Lorg\\/yaml\\/snakeyaml\\/nodes\\/Node\\;Lorg\\/yaml\\/snakeyaml\\/nodes\\/Node\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.nio.charset.CharacterCodingException"
  ], 
  "methodRegex": "org\\.yaml\\.snakeyaml\\.util\\.UriEncoder\\.decode\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.AnnotationIntrospector\\.refineSerializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.AnnotationIntrospector\\.refineDeserializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.BeanProperty\\$Bogus\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.BeanProperty\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DatabindContext\\.resolveSubType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DatabindContext\\.objectIdGeneratorInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/ObjectIdInfo\\;\\)Lcom\\/fasterxml\\/jackson\\/annotation\\/ObjectIdGenerator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DatabindContext\\.converterInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/Converter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DatabindContext\\.reportBadDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DatabindContext\\.reportBadDefinition\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationConfig\\.findTypeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findInjectableValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findContextualValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findNonContextualValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findRootValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.checkUnresolvedObjectId\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.findClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.deserializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.keyDeserializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handlePrimaryContextualization\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleSecondaryContextualization\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.parseDate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.readPropertyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.readPropertyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleUnknownProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleWeirdKey\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleWeirdStringValue\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleWeirdNumberValue\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Number\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleWeirdNativeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleMissingInstantiator\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleInstantiationProblem\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleUnexpectedToken\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleUnexpectedToken\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleUnknownTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeIdResolver\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.handleMissingTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeIdResolver\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportWrongTokenException\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportWrongTokenException\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportWrongTokenException\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportUnresolvedObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/ObjectIdReader\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportInputMismatch\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportInputMismatch\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportInputMismatch\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportInputMismatch\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportTrailingTokens\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportWrongTokenException\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportUnknownProperty\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportMissingContent\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportBadTypeDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportBadPropertyDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportBadDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportBadMerge\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.DeserializationContext\\.reportMappingException\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.InjectableValues\\$Std\\.findInjectableValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.InjectableValues\\.findInjectableValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonDeserializer\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonNode\\.binaryValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonNode\\.at\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonSerializable\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonSerializable\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.JsonSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.KeyDeserializer\\.deserializeKey\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.hasNextValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.nextValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.readAll\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.readAll\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.readAll\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingIterator\\.\\_resync\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.MappingJsonFactory\\.hasFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readTree\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.treeToValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.valueToTree\\:\\(Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/File\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/File\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/net\\/URL\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/net\\/URL\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/net\\/URL\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BLjava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BIILjava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BLcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BLcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/DataInput\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValue\\:\\(Ljava\\/io\\/DataInput\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValue\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValue\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValue\\:\\(Ljava\\/io\\/DataOutput\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValue\\:\\(Ljava\\/io\\/Writer\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValueAsString\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.writeValueAsBytes\\:\\(Ljava\\/lang\\/Object\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.convertValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.convertValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.convertValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_convert\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.updateValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.generateJsonSchema\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonschema\\/JsonSchema\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.acceptJsonFormatVisitor\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_configAndWriteValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_configAndWriteCloseable\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_writeCloseableValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_readMapAndClose\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_readTreeAndClose\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_unwrapAndDeserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_initForReading\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_initForReading\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_verifyNoTrailingTokens\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.\\_findRootDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectMapper\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_initForReading\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_initForMultiRead\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(\\[B\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(\\[BII\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValue\\:\\(Ljava\\/io\\/DataInput\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readTree\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readTree\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readTree\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readTree\\:\\(Ljava\\/io\\/DataInput\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.readValues\\:\\(Ljava\\/io\\/DataInput\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.treeToValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.writeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_bind\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_bindAndClose\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_bindAndCloseAsTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_bindAsTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_bindAndReadValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_unwrapAndDeserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_verifyNoTrailingTokens\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_detectBindAndClose\\:\\(\\[BII\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_detectBindAndClose\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_detectBindAndReadValues\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/MappingIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_detectBindAndCloseAsTree\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_reportUnkownFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_inputStream\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_inputStream\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_reportUndetectableSource\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_findRootDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectReader\\.\\_findTreeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\$Prefetch\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/DefaultSerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.\\_newSequenceWriter\\:\\(ZLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValues\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValues\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValues\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValues\\:\\(Ljava\\/io\\/DataOutput\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValuesAsArray\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValuesAsArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValuesAsArray\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValuesAsArray\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValuesAsArray\\:\\(Ljava\\/io\\/DataOutput\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValue\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValue\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException", 
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValue\\:\\(Ljava\\/io\\/Writer\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValue\\:\\(Ljava\\/io\\/DataOutput\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValueAsString\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.writeValueAsBytes\\:\\(Ljava\\/lang\\/Object\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.acceptJsonFormatVisitor\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.\\_configAndWriteValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ObjectWriter\\.\\_writeCloseable\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.\\<init\\>\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/DefaultSerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/ObjectWriter\\$Prefetch\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.init\\:\\(Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.write\\:\\(Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.write\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.writeAll\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.writeAll\\:\\(Ljava\\/util\\/Collection\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.writeAll\\:\\(Ljava\\/lang\\/Iterable\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.\\_writeCloseableValue\\:\\(Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.\\_writeCloseableValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/SequenceWriter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.\\_findAndAddDynamic\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SequenceWriter\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findValueSerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findValueSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findValueSerializer\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findValueSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findPrimaryPropertySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findPrimaryPropertySerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findTypedValueSerializer\\:\\(Ljava\\/lang\\/Class\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findTypedValueSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findTypeSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findKeySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findKeySerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findNullKeySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.findNullValueSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.serializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.includeFilterInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.includeFilterSuppressNulls\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.handlePrimaryContextualization\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.handleSecondaryContextualization\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeValue\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeDateValue\\:\\(JLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeDateValue\\:\\(Ljava\\/util\\/Date\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeDateKey\\:\\(JLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeDateKey\\:\\(Ljava\\/util\\/Date\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.defaultSerializeNull\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportMappingProblem\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportBadTypeDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportBadPropertyDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportBadDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportBadDefinition\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportBadDefinition\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.reportMappingProblem\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_reportIncompatibleRootType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_findExplicitUntypedSerializer\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_createAndCacheUntypedSerializer\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_createAndCacheUntypedSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_createUntypedSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_handleContextualResolvable\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.SerializerProvider\\.\\_handleResolvable\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.AbstractDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.AbstractDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.AbstractDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.AbstractDeserializer\\.\\_deserializeIfNatural\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.AbstractDeserializer\\.\\_deserializeFromObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.mapAbstractType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_mapAbstractType2\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findValueInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findStdValueInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_constructDefaultValueInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCreatorsFromProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_valueInstantiatorInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_addDeserializerConstructors\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/VisibilityChecker\\;Lcom\\/fasterxml\\/jackson\\/databind\\/AnnotationIntrospector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_addExplicitDelegatingCreator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCandidate\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_addExplicitPropertyCreator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCandidate\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_addExplicitAnyCreator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCandidate\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_checkImplicitlyNamedConstructors\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/VisibilityChecker\\;Lcom\\/fasterxml\\/jackson\\/databind\\/AnnotationIntrospector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_addDeserializerFactoryMethods\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/VisibilityChecker\\;Lcom\\/fasterxml\\/jackson\\/databind\\/AnnotationIntrospector\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/CreatorCollector\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_reportUnwrappedCreatorProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.constructCreatorProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/PropertyName\\;ILcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedParameter\\;Lcom\\/fasterxml\\/jackson\\/annotation\\/JacksonInject\\$Value\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createEnumDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createTreeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findTypeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findOptionalStdDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.createKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_createEnumKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findPropertyTypeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findPropertyContentTypeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findDefaultDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findRemappedType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomTreeNodeDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomEnumDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.\\_findCustomMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findDeserializerFromAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findKeyDeserializerFromAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.findContentDeserializerFromAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.resolveMemberAndTypeAnnotations\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.modifyTypeByAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BasicDeserializerFactory\\.resolveType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\$BeanReferring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.\\_deserializeOther\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.\\_missingToken\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.vanillaDeserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.\\_deserializeUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.handleUnresolvedReference\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyValueBuffer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/UnresolvedForwardReference\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializer\\$BeanReferring\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.\\_deserializeWithErrorWrapping\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeFromNull\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeWithView\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeUsingPropertyBasedWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializer\\.deserializeUsingPropertyBasedWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_findDelegateDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedWithParams\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.findConvertingDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_resolveManagedReferenceProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_resolvedObjectIdProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_findPropertyUnwrapper\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/NameTransformer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_resolveMergeAndNullSettings\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/PropertyMetadata\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_handleTypedObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_convertObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeWithObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromObjectUsingNonDefault\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_deserializeUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromNumber\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromDouble\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromBoolean\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.deserializeFromEmbedded\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.injectValues\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.handleUnknownProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.handleUnknownVanilla\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.handleUnknownProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.handleIgnoredProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.handlePolymorphic\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.\\_findSubclassDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.wrapAndThrow\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.throwOrReturnThrowable\\:\\(Ljava\\/lang\\/Throwable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBase\\.wrapInstantiationProblem\\:\\(Ljava\\/lang\\/Throwable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerBuilder\\.buildBuilderBased\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.createBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.createBuilderBasedDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.findStdDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.materializeAbstractType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.buildBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.buildBuilderBasedDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.addObjectIdReader\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.buildThrowableDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.addBeanProps\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.filterBeanProps\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;Ljava\\/util\\/List\\;Ljava\\/util\\/Set\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.addBackReferenceProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.addReferenceProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.addInjectables\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/BeanDeserializerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.constructAnySetter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableAnyProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.constructSettableProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.constructSetterlessProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BeanDeserializerFactory\\.\\_validateSubType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.finishBuild\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.vanillaDeserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.\\_deserializeUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.\\_deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeWithView\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeUsingPropertyBasedWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeWithUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.BuilderBasedDeserializer\\.deserializeUsingPropertyBasedWithExternalTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ContextualDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ContextualKeyDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.findInjectableValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.inject\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.\\_verifySetter\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.CreatorProperty\\.\\_reportMissingSetter\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DataFormatReaders\\$Match\\.createParserWithMatch\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DataFormatReaders\\.findFormat\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DataFormatReaders\\.findFormat\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DataFormatReaders\\.findFormat\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DataFormatReaders\\.\\_findFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$AccessorForReader\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DataFormatReaders\\$Match\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DefaultDeserializationContext\\.checkUnresolvedObjectId\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DefaultDeserializationContext\\.deserializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DefaultDeserializationContext\\.keyDeserializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleUnknownProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleWeirdKey\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleWeirdStringValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleWeirdNumberValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Number\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleWeirdNativeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleUnexpectedToken\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleInstantiationProblem\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleMissingInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleUnknownTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeIdResolver\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleMissingTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeIdResolver\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializationProblemHandler\\.handleMissingInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.findValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.findKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.hasValueDeserializerFor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_createAndCacheValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_createAndCache2\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_createDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_createDeserializer2\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/DeserializerFactory\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.findDeserializerFromAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.findConvertingDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.findConverter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/Converter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.modifyTypeByAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_handleUnknownValueDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerCache\\.\\_handleUnknownKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.mapAbstractType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.findValueInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createBuilderBasedDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createEnumDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createTreeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.createKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.DeserializerFactory\\.findTypeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findEnumDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findTreeNodeDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\$Base\\.findMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findEnumDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findTreeNodeDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.Deserializers\\.findMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.KeyDeserializers\\.findKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.NullValueProvider\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ResolvableDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableAnyProperty\\$AnySetterReferring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableAnyProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableAnyProperty\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableAnyProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableAnyProperty\\.\\_throwAsIOE\\:\\(Ljava\\/lang\\/Exception\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\$Delegating\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\$Delegating\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\$Delegating\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\$Delegating\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.deserializeWith\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.\\_throwAsIOE\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Exception\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.\\_throwAsIOE\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/io\\/IOException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.\\_throwAsIOE\\:\\(Ljava\\/lang\\/Exception\\;\\)Ljava\\/io\\/IOException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.SettableBeanProperty\\.\\_throwAsIOE\\:\\(Ljava\\/lang\\/Exception\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createUsingDefault\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromObjectWith\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromObjectWith\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyValueBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createUsingDelegate\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createUsingArrayDelegate\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromString\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromInt\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromLong\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;J\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromDouble\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;D\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.createFromBoolean\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.ValueInstantiator\\.\\_createFromStringFallbacks\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.finishBuild\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.\\_deserializeNonVanilla\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.\\_deserializeUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayBuilderDeserializer\\.\\_deserializeFromNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.\\_deserializeNonVanilla\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.\\_deserializeUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanAsArrayDeserializer\\.\\_deserializeFromNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanPropertyMap\\.findDeserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.BeanPropertyMap\\.wrapAndThrow\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\$StdTypeConstructor\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\$StdTypeConstructor\\.call\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\$StdTypeConstructor\\.call1\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\$StdTypeConstructor\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\$StdTypeConstructor\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\.constructValueInstantiator\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.CreatorCollector\\.\\_computeDelegateType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedWithParams\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ErrorThrowingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.handleTypePropertyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.\\_handleTypePropertyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.handlePropertyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.complete\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.complete\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyValueBuffer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyBasedCreator\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.\\_deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;ILjava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ExternalTypeHandler\\.\\_deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.FailingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.FieldProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.FieldProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.FieldProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.FieldProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.InnerClassProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.InnerClassProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.JavaUtilCollectionsDeserializers\\.findForCollection\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.JavaUtilCollectionsDeserializers\\.findForMap\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ManagedReferenceProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ManagedReferenceProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ManagedReferenceProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ManagedReferenceProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MergingSettableBeanProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MergingSettableBeanProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MergingSettableBeanProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MergingSettableBeanProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MethodProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MethodProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MethodProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.MethodProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.NullsAsEmptyProvider\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.NullsFailProvider\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReader\\.readObjectReference\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReferenceProperty\\$PropertyReferring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReferenceProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReferenceProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReferenceProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdReferenceProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdValueProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdValueProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdValueProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ObjectIdValueProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyBasedCreator\\.construct\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/BeanPropertyMap\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyBasedCreator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyBasedCreator\\.construct\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyBasedCreator\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyBasedCreator\\.construct\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/ValueInstantiator\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyBasedCreator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyBasedCreator\\.build\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyValueBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValue\\$Any\\.assign\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValue\\$Map\\.assign\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValue\\$Regular\\.assign\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValue\\.assign\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValueBuffer\\.getParameter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValueBuffer\\.getParameters\\:\\(\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValueBuffer\\.\\_findMissing\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValueBuffer\\.readIdProperty\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.PropertyValueBuffer\\.handleIdValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ReadableObjectId\\$Referring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ReadableObjectId\\.bindItem\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.SetterlessProperty\\.deserializeAndSet\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.SetterlessProperty\\.deserializeSetAndReturn\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.SetterlessProperty\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.SetterlessProperty\\.setAndReturn\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.TypeWrappedDeserializer\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.TypeWrappedDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.TypeWrappedDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.TypeWrappedDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.TypeWrappedDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.UnwrappedPropertyHandler\\.processUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ValueInjector\\.findValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.impl\\.ValueInjector\\.inject\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ArrayBlockingQueueDeserializer\\.createDefaultInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ArrayBlockingQueueDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ArrayBlockingQueueDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ArrayBlockingQueueDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.AtomicBooleanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/concurrent\\/atomic\\/AtomicBoolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.AtomicBooleanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.\\_handleDuplicateField\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.deserializeObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.deserializeObjectAtName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.updateObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.deserializeArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ArrayNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.updateArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ArrayNode\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.deserializeAny\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.\\_fromInt\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.\\_fromFloat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.BaseNodeDeserializer\\.\\_fromEmbedded\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/JsonNodeFactory\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ByteBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ByteBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/nio\\/ByteBuffer\\;\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ByteBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ByteBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\$CollectionReferring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\$CollectionReferringAccumulator\\.resolveForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/std\\/CollectionDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.createDefaultInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.\\_deserializeWithObjectId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.CollectionDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ContainerDeserializerBase\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ContainerDeserializerBase\\.wrapAndThrow\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$CalendarDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Calendar\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$CalendarDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$CalendarDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$DateBasedDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$DateBasedDeserializer\\.\\_parseDate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$DateDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$DateDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$DateDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$SqlDateDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/sql\\/Date\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$SqlDateDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$SqlDateDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$TimestampDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/sql\\/Timestamp\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$TimestampDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DateDeserializers\\$TimestampDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.DelegatingDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumDeserializer\\.\\_deserializeAltString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/CompactStringObjectMap\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumDeserializer\\.\\_deserializeOther\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/EnumMap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/EnumMap\\;\\)Ljava\\/util\\/EnumMap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.constructMap\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/EnumMap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.\\_deserializeUsingProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/EnumMap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumMapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/EnumSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/EnumSet\\;\\)Ljava\\/util\\/EnumSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.\\_deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/EnumSet\\;\\)Ljava\\/util\\/EnumSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/EnumSet\\;\\)Ljava\\/util\\/EnumSet\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.EnumSetDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.deserializeEnumUsingPropertyBased\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/impl\\/PropertyBasedCreator\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.\\_deserializeWithErrorWrapping\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.wrapAndThrow\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FactoryBasedEnumDeserializer\\.throwOrReturnThrowable\\:\\(Ljava\\/lang\\/Throwable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\$Std\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\$Std\\.\\_deserializeFromEmptyString\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\.\\_deserializeEmbedded\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.FromStringDeserializer\\.\\_deserializeFromEmptyString\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ArrayNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ArrayNode\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ArrayNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\$ObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.JsonNodeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\$MapReferring\\.handleResolvedForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\$MapReferringAccumulator\\.resolveForwardReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.\\_readAndBind\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.\\_readAndBindStringKeyMap\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.\\_deserializeUsingCreator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.\\_readAndUpdate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.\\_readAndUpdateStringKeyMap\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.handleUnresolvedReference\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/std\\/MapDeserializer\\$MapReferringAccumulator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/UnresolvedForwardReference\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Map\\$Entry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\$Entry\\;\\)Ljava\\/util\\/Map\\$Entry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.MapEntryDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NullifyingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NullifyingDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BigDecimalDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BigDecimalDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BigIntegerDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BigIntegerDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.\\_parseBoolean\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$BooleanDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ByteDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Byte\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ByteDeserializer\\.\\_parseByte\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Byte\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ByteDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ByteDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$CharacterDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Character\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$CharacterDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$CharacterDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Double\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Double\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.\\_parseDouble\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Double\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$DoubleDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$FloatDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Float\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$FloatDeserializer\\.\\_parseFloat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Float\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$FloatDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$FloatDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.\\_parseInteger\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$IntegerDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$LongDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$LongDeserializer\\.\\_parseLong\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$LongDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$LongDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$NumberDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$NumberDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$PrimitiveOrWrapperDeserializer\\.getNullValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$PrimitiveOrWrapperDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ShortDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Short\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ShortDeserializer\\.\\_parseShort\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Short\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ShortDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.NumberDeserializers\\$ShortDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Ljava\\/lang\\/Object\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserializeFromBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/Byte\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ObjectArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$BooleanDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$BooleanDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$BooleanDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$BooleanDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ByteDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ByteDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ByteDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ByteDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$CharDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$CharDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$CharDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$CharDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$DoubleDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$DoubleDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$DoubleDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$DoubleDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$FloatDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$FloatDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$FloatDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$FloatDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$IntDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$IntDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$IntDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$IntDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$LongDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$LongDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$LongDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$LongDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ShortDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ShortDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ShortDeser\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\$ShortDeser\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.handleSingleElementUnwrapped\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.PrimitiveArrayDeserializers\\.\\_failOnNull\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ReferenceTypeDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ReferenceTypeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ReferenceTypeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ReferenceTypeDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StackTraceElementDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/StackTraceElement\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StackTraceElementDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDelegatingDeserializer\\.\\_handleIncompatibleUpdateValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseBooleanPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseBooleanFromInt\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseBytePrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseShortPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseIntPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseIntPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseLongPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseLongPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseFloatPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseFloatPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseDoublePrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseDoublePrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseDate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseDateFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseDate\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.parseDouble\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_parseString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_deserializeFromEmpty\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_deserializeFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_deserializeWrappedValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_failDoubleToIntCoercion\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_coerceIntegral\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_coerceNullToken\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_coerceTextualNull\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_coerceEmptyString\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyNullForPrimitive\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyNullForPrimitiveCoercion\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyNullForScalarCoercion\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyStringForScalarCoercion\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyNumberForScalarCoercion\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_reportFailedNullCoerce\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;ZLjava\\/lang\\/Enum\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.findDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.findConvertingContentDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.findValueNullProvider\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/PropertyMetadata\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/NullValueProvider\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.findContentNullProvider\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/NullValueProvider\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.findContentNullStyle\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/annotation\\/Nulls\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_findNullProvider\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/annotation\\/Nulls\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/NullValueProvider\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.handleUnknownProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.handleMissingEndArrayForSingle\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdDeserializer\\.\\_verifyEndArrayForSingle\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\$DelegatingKD\\.deserializeKey\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\$EnumKD\\.\\_parse\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\$StringCtorKeyDeserializer\\.\\_parse\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\$StringFactoryKeyDeserializer\\.\\_parse\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\$StringKD\\.deserializeKey\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.deserializeKey\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.\\_parse\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.\\_parseInt\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.\\_parseLong\\:\\(Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.\\_parseDouble\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializer\\.\\_weirdKey\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdKeyDeserializers\\.findKeyDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdNodeBasedDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdNodeBasedDeserializer\\.convert\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdNodeBasedDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdNodeBasedDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdScalarDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdScalarDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createUsingDefault\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromObjectWith\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createUsingDelegate\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createUsingArrayDelegate\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromString\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromInt\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromLong\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;J\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromDouble\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;D\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.createFromBoolean\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StdValueInstantiator\\.\\_createUsingDelegate\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedWithParams\\;\\[Lcom\\/fasterxml\\/jackson\\/databind\\/deser\\/SettableBeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.\\_deserializeCustom\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringArrayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserializeUsingCustom\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.handleNonArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringCollectionDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringDeserializer\\.getEmptyValue\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.StringDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.ThrowableDeserializer\\.deserializeFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.TokenBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.TokenBufferDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/UUID\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_deserializeEmbedded\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/UUID\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_badFormat\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/UUID\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.intFromChars\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.shortFromChars\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.byteFromChars\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_badChar\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;C\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_fromBytes\\:\\(\\[BLcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/UUID\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_deserializeEmbedded\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UUIDDeserializer\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.mapArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.mapArrayToArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\$Vanilla\\.mapObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.\\_findCustomDeser\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.mapArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.mapArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Collection\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.mapObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.mapArrayToArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.deser\\.std\\.UntypedObjectDeserializer\\.mapObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLDeserializers\\$Std\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLDeserializers\\$Std\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.serialize\\:\\(Ljavax\\/xml\\/datatype\\/XMLGregorianCalendar\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.serializeWithType\\:\\(Ljavax\\/xml\\/datatype\\/XMLGregorianCalendar\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.CoreXMLSerializers\\$XMLGregorianCalendarSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMDeserializer\\$DocumentDeserializer\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lorg\\/w3c\\/dom\\/Document\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMDeserializer\\$NodeDeserializer\\.\\_deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lorg\\/w3c\\/dom\\/Node\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMDeserializer\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/w3c\\/dom\\/Document\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.parsers.ParserConfigurationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMDeserializer\\.documentBuilder\\:\\(\\)Ljavax\\/xml\\/parsers\\/DocumentBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMSerializer\\.serialize\\:\\(Lorg\\/w3c\\/dom\\/Node\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.DOMSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/nio\\/file\\/Path\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathSerializer\\.serialize\\:\\(Ljava\\/nio\\/file\\/Path\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathSerializer\\.serializeWithType\\:\\(Ljava\\/nio\\/file\\/Path\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.NioPathSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ext\\.OptionalHandlerFactory\\.findDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedConstructor\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedConstructor\\.call\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedConstructor\\.call1\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedConstructor\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedConstructor\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedField\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedField\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMember\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMember\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.call\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.call1\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.callOn\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.callOnWith\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedMethod\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedParameter\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedParameter\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedWithParams\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedWithParams\\.call\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotatedWithParams\\.call1\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotationIntrospectorPair\\.refineSerializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.AnnotationIntrospectorPair\\.refineDeserializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.BasicBeanDescription\\.findAnySetterAccessor\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.BasicBeanDescription\\.findAnyGetter\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.JacksonAnnotationIntrospector\\.refineSerializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.JacksonAnnotationIntrospector\\.refineDeserializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/cfg\\/MapperConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.VirtualAnnotatedMember\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.introspect\\.VirtualAnnotatedMember\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonArrayFormatVisitor\\$Base\\.itemsFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonArrayFormatVisitor\\$Base\\.itemsFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatTypes\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonArrayFormatVisitor\\.itemsFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonArrayFormatVisitor\\.itemsFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatTypes\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitable\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectObjectFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectArrayFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonArrayFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectStringFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonStringFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectNumberFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonNumberFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectIntegerFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonIntegerFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectBooleanFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonBooleanFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectNullFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonNullFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectAnyFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonAnyFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\$Base\\.expectMapFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonMapFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectObjectFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectArrayFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonArrayFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectStringFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonStringFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectNumberFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonNumberFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectIntegerFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonIntegerFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectBooleanFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonBooleanFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectNullFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonNullFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectAnyFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonAnyFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonFormatVisitorWrapper\\.expectMapFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonMapFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonMapFormatVisitor\\$Base\\.keyFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonMapFormatVisitor\\$Base\\.valueFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonMapFormatVisitor\\.keyFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonMapFormatVisitor\\.valueFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\$Base\\.property\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\$Base\\.property\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\$Base\\.optionalProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\$Base\\.optionalProperty\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\.property\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\.property\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\.optionalProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonFormatVisitors\\.JsonObjectFormatVisitor\\.optionalProperty\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitable\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonschema\\.SchemaAware\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsonschema\\.SchemaAware\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeTypedFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeTypedFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeTypedFromScalar\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeTypedFromAny\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeIfNatural\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeDeserializer\\.deserializeIfNatural\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeIdResolver\\.typeFromId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DatabindContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypeSuffixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypeSuffixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypeSuffixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypeSuffixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypeSuffixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.writeCustomTypeSuffixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.TypeSerializer\\.\\_writeLegacySuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.deserializeTypedFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.deserializeTypedFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.deserializeTypedFromScalar\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.deserializeTypedFromAny\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.\\_deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsArrayTypeDeserializer\\.\\_locateTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeScalarPrefix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeObjectPrefix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeArrayPrefix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeScalarSuffix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeObjectSuffix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsExternalTypeSerializer\\.\\_writeArraySuffix\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsPropertyTypeDeserializer\\.deserializeTypedFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsPropertyTypeDeserializer\\.\\_deserializeTypedForId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsPropertyTypeDeserializer\\.\\_deserializeTypedUsingDefaultImpl\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsPropertyTypeDeserializer\\.deserializeTypedFromAny\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeDeserializer\\.deserializeTypedFromObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeDeserializer\\.deserializeTypedFromArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeDeserializer\\.deserializeTypedFromScalar\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeDeserializer\\.deserializeTypedFromAny\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeDeserializer\\.\\_deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.AsWrapperTypeSerializer\\.\\_writeTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.ClassNameIdResolver\\.typeFromId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DatabindContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.ClassNameIdResolver\\.\\_typeFromId\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DatabindContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.MinimalClassNameIdResolver\\.\\_typeFromId\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DatabindContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.SubTypeValidator\\.validateSubType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_findDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_findDefaultImplDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_deserializeWithNativeTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_deserializeWithNativeTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_handleUnknownTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeDeserializerBase\\.\\_handleMissingTypeId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeIdResolverBase\\.typeFromId\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DatabindContext\\;Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeSerializerBase\\.writeTypePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.jsontype\\.impl\\.TypeSerializerBase\\.writeTypeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findArrayDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findBeanDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findCollectionDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findCollectionLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findEnumDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findTreeNodeDeserializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findReferenceDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findMapDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.module\\.SimpleDeserializers\\.findMapLikeDeserializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapLikeType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/KeyDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ArrayNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ArrayNode\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.BaseJsonNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.BaseJsonNode\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.BigIntegerNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.BinaryNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.BooleanNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.DecimalNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.DoubleNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.FloatNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.IntNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.LongNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.MissingNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.MissingNode\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.NullNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ObjectNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ObjectNode\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.POJONode\\.binaryValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.POJONode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ShortNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TextNode\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TextNode\\.binaryValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TextNode\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.currentNumericNode\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.TreeTraversingParser\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.node\\.ValueNode\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.AnyGetterWriter\\.getAndSerialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.AnyGetterWriter\\.getAndFilter\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyFilter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.AnyGetterWriter\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.createSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findSerializerByAnnotations\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findSerializerByPrimaryType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findOptionalStdSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findSerializerByAddonType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findSerializerFromAnnotation\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findConvertingSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findConverter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/Converter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildContainerSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildCollectionSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/CollectionType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildMapSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/MapType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.\\_checkMapContentInclusion\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/std\\/MapSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/std\\/MapSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildMapEntrySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.\\_findInclusionWithContent\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/annotation\\/JsonInclude\\$Value\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildArraySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ArrayType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.findReferenceSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildAtomicReferenceSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/ReferenceType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildIteratorSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildIterableSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.buildEnumSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.\\_findKeySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BasicSerializerFactory\\.\\_findContentSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyFilter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.serializeAsOmittedField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.serializeAsPlaceholder\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanPropertyWriter\\.\\_handleSelfReference\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.createSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.\\_createSerializer2\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.findBeanSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.findPropertyTypeSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.findPropertyContentTypeSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.constructBeanSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.constructObjectIdHandler\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Ljava\\/util\\/List\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/ObjectIdWriter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.findBeanProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanDescription\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanSerializerBuilder\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.BeanSerializerFactory\\.\\_constructWriter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyBuilder\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.ContextualSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.serializerInstance\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.includeFilterSuppressNulls\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.serializeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.serializeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.serializeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.serializePolymorphic\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.\\_serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/PropertyName\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.\\_serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.\\_serializeNull\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.DefaultSerializerProvider\\.generateJsonSchema\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonschema\\/JsonSchema\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyBuilder\\.buildWriter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/BeanPropertyDefinition\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/AnnotatedMember\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyBuilder\\.findSerializationType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/introspect\\/Annotated\\;ZLcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyFilter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyFilter\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.serializeAsOmittedField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.serializeAsPlaceholder\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.PropertyWriter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.ResolvableSerializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerCache\\.addAndResolveNonTypedSerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerCache\\.addAndResolveNonTypedSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerCache\\.addAndResolveNonTypedSerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerFactory\\.createSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerFactory\\.createTypeSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.SerializerFactory\\.createKeySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializationConfig\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.VirtualBeanPropertyWriter\\.value\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.VirtualBeanPropertyWriter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.VirtualBeanPropertyWriter\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.AttributePropertyWriter\\.value\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.BeanAsArraySerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.BeanAsArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.BeanAsArraySerializer\\.serializeAsArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FailingSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FailingSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$MultiView\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$MultiView\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$MultiView\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$SingleView\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$SingleView\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.FilteredBeanPropertyWriter\\$SingleView\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serialize\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serializeContents\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serializeContentsUsing\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serializeTypedContents\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedListSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.acceptContentVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonArrayFormatVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serialize\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serializeWithType\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serializeContents\\:\\(Ljava\\/util\\/List\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serializeWithType\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IndexedStringListSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IteratorSerializer\\.serialize\\:\\(Ljava\\/util\\/Iterator\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IteratorSerializer\\.serializeContents\\:\\(Ljava\\/util\\/Iterator\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IteratorSerializer\\.\\_serializeDynamicContents\\:\\(Ljava\\/util\\/Iterator\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IteratorSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.IteratorSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.serialize\\:\\(Ljava\\/util\\/Map\\$Entry\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.serializeWithType\\:\\(Ljava\\/util\\/Map\\$Entry\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.serializeDynamic\\:\\(Ljava\\/util\\/Map\\$Entry\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.MapEntrySerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddPrimarySerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddPrimarySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddSecondarySerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddSecondarySerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddRootValueSerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddRootValueSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.PropertySerializerMap\\.findAndAddKeySerializer\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\$SerializerAndMapResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\$1\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\$1\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\$1\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\$1\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.SimpleBeanPropertyFilter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyWriter\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.serialize\\:\\(\\[Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.serializeContents\\:\\(\\[Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.serializeContentsSlow\\:\\(\\[Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.acceptContentVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonArrayFormatVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.serialize\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.serializeWithType\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.serializeContents\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.StringCollectionSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.TypeWrappedSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.TypeWrappedSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.TypeWrappedSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnknownSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnknownSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnknownSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnknownSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnknownSerializer\\.failForEmpty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanPropertyWriter\\$1\\.expectObjectFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanPropertyWriter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanPropertyWriter\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanPropertyWriter\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.UnwrappingBeanSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.WritableObjectId\\.writeAsId\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/ObjectIdWriter\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.impl\\.WritableObjectId\\.writeAsField\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/ObjectIdWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ArraySerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ArraySerializerBase\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ArraySerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ArraySerializerBase\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.AsArraySerializerBase\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.findConvertingSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/BeanPropertyWriter\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.\\_serializeWithObjectId\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.\\_serializeWithObjectId\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.\\_serializeObjectId\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/WritableObjectId\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.serializeFields\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.serializeFieldsFiltered\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BeanSerializerBase\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\$AsNumber\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\$AsNumber\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\$AsNumber\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\$AsNumber\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.BooleanSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteArraySerializer\\.serialize\\:\\(\\[BLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteArraySerializer\\.serializeWithType\\:\\(\\[BLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteArraySerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteBufferSerializer\\.serialize\\:\\(Ljava\\/nio\\/ByteBuffer\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteBufferSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ByteBufferSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CalendarSerializer\\.serialize\\:\\(Ljava\\/util\\/Calendar\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CalendarSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ClassSerializer\\.serialize\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ClassSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ClassSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CollectionSerializer\\.serialize\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CollectionSerializer\\.serializeContents\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CollectionSerializer\\.serializeContentsUsing\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CollectionSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.CollectionSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateSerializer\\.serialize\\:\\(Ljava\\/util\\/Date\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateTimeSerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateTimeSerializerBase\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateTimeSerializerBase\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateTimeSerializerBase\\.\\_acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.DateTimeSerializerBase\\.\\_serializeAsString\\:\\(Ljava\\/util\\/Date\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSerializer\\.serialize\\:\\(Ljava\\/lang\\/Enum\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSetSerializer\\.serialize\\:\\(Ljava\\/util\\/EnumSet\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSetSerializer\\.serializeContents\\:\\(Ljava\\/util\\/EnumSet\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSetSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.EnumSetSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.FileSerializer\\.serialize\\:\\(Ljava\\/io\\/File\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.FileSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.FileSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetAddressSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetAddressSerializer\\.serialize\\:\\(Ljava\\/net\\/InetAddress\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetAddressSerializer\\.serializeWithType\\:\\(Ljava\\/net\\/InetAddress\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetAddressSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetAddressSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetSocketAddressSerializer\\.serialize\\:\\(Ljava\\/net\\/InetSocketAddress\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetSocketAddressSerializer\\.serializeWithType\\:\\(Ljava\\/net\\/InetSocketAddress\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetSocketAddressSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.InetSocketAddressSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.IterableSerializer\\.serialize\\:\\(Ljava\\/lang\\/Iterable\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.IterableSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Iterable\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.IterableSerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.IterableSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypeSuffixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypeSuffixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypeSuffixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypePrefixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypePrefixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypePrefixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypeSuffixForScalar\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypeSuffixForObject\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\$TypeSerializerRerouter\\.writeCustomTypeSuffixForArray\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.JsonValueSerializer\\.\\_acceptJsonFormatVisitorForEnum\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.serializeAsOmittedField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.serializeAsElement\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.serializeAsPlaceholder\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonObjectFormatVisitor\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapProperty\\.depositSchemaProperty\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/node\\/ObjectNode\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serialize\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeWithType\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeFields\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeOptionalFields\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeFieldsUsing\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeFilteredFields\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyFilter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeTypedFields\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeFilteredAnyProperties\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyFilter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.\\_orderEntries\\:\\(Ljava\\/util\\/Map\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.\\_writeNullKeyedEntry\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.\\_findSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.MapSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NonTypedScalarSerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NullSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NullSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NullSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NullSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializer\\.serialize\\:\\(Ljava\\/lang\\/Number\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$Base\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$Base\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$DoubleSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$DoubleSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$DoubleSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$DoubleSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$FloatSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$FloatSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$FloatSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntLikeSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntLikeSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntLikeSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntegerSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntegerSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntegerSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$IntegerSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$LongSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$LongSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$LongSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$ShortSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$ShortSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.NumberSerializers\\$ShortSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serialize\\:\\(\\[Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serializeContents\\:\\(\\[Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serializeContentsUsing\\:\\(\\[Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serializeTypedContents\\:\\(\\[Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ObjectArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.RawSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.RawSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.RawSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.\\_findCachedSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Class\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ReferenceTypeSerializer\\.\\_findSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SerializableSerializer\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializable\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SerializableSerializer\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializable\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SerializableSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SerializableSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SerializableSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SqlDateSerializer\\.serialize\\:\\(Ljava\\/sql\\/Date\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SqlDateSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SqlTimeSerializer\\.serialize\\:\\(Ljava\\/sql\\/Time\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SqlTimeSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.SqlTimeSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StaticListSerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StaticListSerializerBase\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StaticListSerializerBase\\.acceptContentVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonArrayFormatVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StaticListSerializerBase\\.serializeWithType\\:\\(Ljava\\/util\\/Collection\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StaticListSerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$BooleanArraySerializer\\.serialize\\:\\(\\[ZLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$BooleanArraySerializer\\.serializeContents\\:\\(\\[ZLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$BooleanArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$BooleanArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$BooleanArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.serialize\\:\\(\\[CLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.serializeWithType\\:\\(\\[CLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.\\_writeArrayContents\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\[C\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$CharArraySerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$DoubleArraySerializer\\.serialize\\:\\(\\[DLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$DoubleArraySerializer\\.serializeContents\\:\\(\\[DLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$DoubleArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$DoubleArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$DoubleArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$FloatArraySerializer\\.serialize\\:\\(\\[FLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$FloatArraySerializer\\.serializeContents\\:\\(\\[FLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$FloatArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$FloatArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$FloatArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$IntArraySerializer\\.serialize\\:\\(\\[ILcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$IntArraySerializer\\.serializeContents\\:\\(\\[ILcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$IntArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$IntArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$IntArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$LongArraySerializer\\.serialize\\:\\(\\[JLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$LongArraySerializer\\.serializeContents\\:\\(\\[JLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$LongArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$LongArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$LongArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$ShortArraySerializer\\.serialize\\:\\(\\[SLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$ShortArraySerializer\\.serializeContents\\:\\(\\[SLcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$ShortArraySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$ShortArraySerializer\\.serializeContents\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdArraySerializers\\$ShortArraySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.resolve\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdDelegatingSerializer\\.\\_findSerializer\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicBooleanSerializer\\.serialize\\:\\(Ljava\\/util\\/concurrent\\/atomic\\/AtomicBoolean\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicBooleanSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicBooleanSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicIntegerSerializer\\.serialize\\:\\(Ljava\\/util\\/concurrent\\/atomic\\/AtomicInteger\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicIntegerSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicIntegerSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicLongSerializer\\.serialize\\:\\(Ljava\\/util\\/concurrent\\/atomic\\/AtomicLong\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicLongSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdJdkSerializers\\$AtomicLongSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$Default\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$Dynamic\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$Dynamic\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$Dynamic\\.\\_findAndAddDynamic\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/impl\\/PropertySerializerMap\\;Ljava\\/lang\\/Class\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$EnumKeySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdKeySerializers\\$StringKeySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdScalarSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdScalarSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdScalarSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;Z\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitStringFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitStringFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonValueFormat\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitIntFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitIntFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonValueFormat\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitFloatFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitArrayFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.visitArrayFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatTypes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.wrapAndThrow\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.wrapAndThrow\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Object\\;I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.findContextualConvertingSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.findConvertingContentSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.findPropertyFilter\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/ser\\/PropertyFilter\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StdSerializer\\.findAnnotatedContentSerializer\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StringSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StringSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.StringSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TimeZoneSerializer\\.serialize\\:\\(Ljava\\/util\\/TimeZone\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TimeZoneSerializer\\.serializeWithType\\:\\(Ljava\\/util\\/TimeZone\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TimeZoneSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TimeZoneSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ToStringSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ToStringSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ToStringSerializer\\.getSchema\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonNode\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.ToStringSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TokenBufferSerializer\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TokenBufferSerializer\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TokenBufferSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TokenBufferSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.TokenBufferSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.UUIDSerializer\\.serialize\\:\\(Ljava\\/util\\/UUID\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.ser\\.std\\.UUIDSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeBase\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeBase\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeFactory\\.findClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeFactory\\.classForName\\:\\(Ljava\\/lang\\/String\\;ZLjava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeFactory\\.classForName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeFactory\\.\\_resolveTypePlaceholders\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeFactory\\.constructFromCanonical\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeParser\\.parseType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/TypeParser\\$MyTokenizer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.type\\.TypeParser\\.parseTypes\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/type\\/TypeParser\\$MyTokenizer\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ByteBufferBackedInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ByteBufferBackedInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ByteBufferBackedOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ByteBufferBackedOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.throwIfIOE\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.throwRootCauseIfIOE\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.throwAsMappingException\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/io\\/IOException\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.closeOnFailAndThrowAsIOE\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.closeOnFailAndThrowAsIOE\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/io\\/Closeable\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.createInstance\\:\\(Ljava\\/lang\\/Class\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ClassUtil\\.findConstructor\\:\\(Ljava\\/lang\\/Class\\;Z\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ConstantValueInstantiator\\.createUsingDefault\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ISO8601DateFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ISO8601Utils\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.ISO8601Utils\\.parseInt\\:\\(Ljava\\/lang\\/String\\;II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.JSONPObject\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.JSONPObject\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.JSONWrappedObject\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.JSONWrappedObject\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.LRUMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.LRUMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.RawValue\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.RawValue\\.serializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.RawValue\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.RawValue\\.\\_serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.StdDateFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.StdDateFormat\\.\\_parseDate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.StdDateFormat\\.\\_parseDateFromLong\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.StdDateFormat\\.parseAsISO8601\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.StdDateFormat\\.\\_parseAsISO8601\\:\\(Ljava\\/lang\\/String\\;Ljava\\/text\\/ParsePosition\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.peekNextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.\\_convertNumberToInt\\:\\(Ljava\\/lang\\/Number\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.\\_convertNumberToLong\\:\\(Ljava\\/lang\\/Number\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.\\_checkIsNumber\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\$Parser\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.asCopyOfValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.asParserOnFirstToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.append\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.serialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/util\\/TokenBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.writeEmbeddedObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.copyCurrentEvent\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.copyCurrentStructure\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBuffer\\.\\_checkNativeIds\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.databind\\.util\\.TokenBufferReadContext\\.setCurrentName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.decode\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/util\\/ByteArrayBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.\\_reportInvalidBase64\\:\\(CILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variant\\.\\_reportBase64EOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.Base64Variants\\.valueOf\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.hasFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.hasJSONFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[C\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(\\[CII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createParser\\:\\(Ljava\\/io\\/DataInput\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createNonBlockingByteArrayParser\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/io\\/Reader\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonParser\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/File\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/DataOutput\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createGenerator\\:\\(Ljava\\/io\\/DataOutput\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonGenerator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonGenerator\\:\\(Ljava\\/io\\/Writer\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.createJsonGenerator\\:\\(Ljava\\/io\\/OutputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(\\[CIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Z\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(\\[BIILcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createParser\\:\\(Ljava\\/io\\/DataInput\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createGenerator\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createUTF8Generator\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_createWriter\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/Reader\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/DataInput\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/DataInput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/OutputStream\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_decorate\\:\\(Ljava\\/io\\/Writer\\;Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonFactory\\.\\_optimizedStreamFromURL\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeFieldId\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArray\\:\\(\\[III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArray\\:\\(\\[JII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArray\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(Ljava\\/io\\/Reader\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeRawValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeEmbeddedObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectRef\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeTypeId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeTypePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeTypeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/type\\/WritableTypeId\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeStringField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBooleanField\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNullField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeNumberField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeBinaryField\\:\\(Ljava\\/lang\\/String\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeArrayFieldStart\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectFieldStart\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeObjectField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.writeOmittedField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.copyCurrentEvent\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.copyCurrentStructure\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.\\_reportError\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonGenerator\\.\\_writeSimpleObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.isNaN\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.currentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getByteValue\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getShortValue\\:\\(\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBooleanValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getBinaryValue\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readBinaryValue\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getObjectId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.getTypeId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValueAs\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValueAs\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValuesAs\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValuesAs\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonParser\\.readValueAsTree\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.JsonPointer\\.compile\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonPointer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/TypeReference\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/core\\/type\\/ResolvedType\\;\\)Ljava\\/util\\/Iterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.writeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.readTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.ObjectCodec\\.treeToValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeRootValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeStartObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeEndObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeObjectEntrySeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeObjectFieldValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeStartArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeEndArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.writeArrayValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.beforeArrayValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.PrettyPrinter\\.beforeObjectEntries\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.writeQuotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.writeUnquotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.putQuotedUTF8\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.SerializableString\\.putUnquotedUTF8\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.TreeCodec\\.readTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.TreeCodec\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.TreeNode\\.at\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.async\\.ByteArrayFeeder\\.feedInput\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.async\\.ByteBufferFeeder\\.feedInput\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeRawValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.\\_asString\\:\\(Ljava\\/math\\/BigDecimal\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.GeneratorBase\\.\\_decodeSurrogate\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_eofAsNextChar\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseNumericValue\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseSlowFloat\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_parseSlowInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToInt\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToLong\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToBigInteger\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToDouble\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.convertNumberToBigDecimal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_reportMismatchedEndMarker\\:\\(IC\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_decodeBase64Escape\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_decodeBase64Escape\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;CI\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.reportInvalidBase64Char\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;II\\)Ljava\\/lang\\/IllegalArgumentException\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.reportInvalidBase64Char\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;IILjava\\/lang\\/String\\;\\)Ljava\\/lang\\/IllegalArgumentException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserBase\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_handleEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_decodeBase64\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/util\\/ByteArrayBuilder\\;Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.reportUnexpectedNumberChar\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.reportInvalidNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.reportOverflowInt\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.reportOverflowLong\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportUnexpectedChar\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOF\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOFInValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOF\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOFInValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportInvalidEOF\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportMissingRootWS\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_throwInvalidSpace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_throwUnquotedSpace\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_handleUnrecognizedCharacterEscape\\:\\(C\\)C"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportError\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportError\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_reportError\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.base\\.ParserMinimalBase\\.\\_wrapError\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeOmittedField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeObjectId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeObjectRef\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.writeTypeId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkParentPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkPropertyParentPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkBinaryWrite\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringGeneratorDelegate\\.\\_checkRawValueWrite\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_nextToken2\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_nextTokenWithBuffering\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_nextBuffered\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.\\_verifyAllowedMatches\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getBooleanValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getByteValue\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getShortValue\\:\\(\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.FilteringParserDelegate\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilter\\.includeValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.setFieldName\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.writePath\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.writeImmediatePath\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.\\_writePath\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.closeArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.filter\\.TokenFilterContext\\.closeObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/filter\\/TokenFilterContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.findFormat\\:\\(Ljava\\/io\\/InputStream\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.findFormat\\:\\(\\[B\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.findFormat\\:\\(\\[BII\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatDetector\\.\\_findFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\$Std\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/DataFormatMatcher\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.DataFormatMatcher\\.createParserWithMatch\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\$Std\\.hasMoreBytes\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\$Std\\.nextByte\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\.hasMoreBytes\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.format\\.InputAccessor\\.nextByte\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.DataOutputAsStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.DataOutputAsStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.DataOutputAsStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;\\[BII\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/DataInput\\;\\)Ljava\\/io\\/DataInput\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.InputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/Reader\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.MergedStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseDouble\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseBigDecimal\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseBigDecimal\\:\\(\\[C\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.NumberInput\\.parseBigDecimal\\:\\(\\[CII\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.OutputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.OutputDecorator\\.decorate\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/io\\/IOContext\\;Ljava\\/io\\/Writer\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SegmentedStringWriter\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SegmentedStringWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SegmentedStringWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.writeQuotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.SerializedString\\.writeUnquotedUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportUnexpectedEOF\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportInvalid\\:\\(IILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.loadMore\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportBounds\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF32Reader\\.reportStrangeStream\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.append\\:\\(C\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(\\[C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.write\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.convertSurrogate\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.illegalSurrogate\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.io\\.UTF8Writer\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.detectEncoding\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonEncoding\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.skipUTF8BOM\\:\\(Ljava\\/io\\/DataInput\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.constructReader\\:\\(\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.constructParser\\:\\(ILcom\\/fasterxml\\/jackson\\/core\\/ObjectCodec\\;Lcom\\/fasterxml\\/jackson\\/core\\/sym\\/ByteQuadsCanonicalizer\\;Lcom\\/fasterxml\\/jackson\\/core\\/sym\\/CharsToNameCanonicalizer\\;I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.hasJSONFormat\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.tryMatch\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/format\\/MatchStrength\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.skipSpace\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.skipSpace\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/format\\/InputAccessor\\;B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.handleBOM\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.checkUTF32\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.reportWeirdUCS4\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ByteSourceJsonBootstrapper\\.ensureLoaded\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.DupDetector\\.isDup\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonGeneratorImpl\\.writeStringField\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonGeneratorImpl\\.\\_verifyPrettyValueWrite\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonGeneratorImpl\\.\\_reportCantWriteValueExpectName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonReadContext\\.setCurrentName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonReadContext\\.\\_checkDup\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/json\\/DupDetector\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonWriteContext\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.JsonWriteContext\\.\\_checkDup\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/json\\/DupDetector\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getNextChar\\:\\(Ljava\\/lang\\/String\\;\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getNextChar\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_readBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_isNextTokenNameYes\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_isNextTokenNameMaybe\\:\\(ILjava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_nextTokenNotInObject\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parsePosNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseFloat\\:\\(IIIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseNegNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseNumber2\\:\\(ZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_verifyNoLeadingZeroes\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_verifyNLZ2\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleInvalidNumberStart\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_verifyRootSpace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseName2\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleOddName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_parseAposName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleOddValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleApos\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_handleOddName2\\:\\(II\\[I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_finishString2\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipCR\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipColon\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipColon2\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipColonFast\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipComma\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipAfterComma2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipWSOrEnd\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipWSOrEnd2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipCComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipYAMLComment\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_skipLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchTrue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchFalse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_matchToken2\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_checkMatchEnd\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_decodeBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.ReaderBasedJsonParser\\.\\_closeScope\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_readBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_nextTokenNotInObject\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parsePosNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseNegNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleLeadingZeroes\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseFloat\\:\\(\\[CIIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_verifyRootSpace\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseMediumName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseMediumName2\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseLongName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseName\\:\\(IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.parseEscapedName\\:\\(\\[IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleOddName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_parseAposName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.findName\\:\\(\\[IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.addName\\:\\(\\[III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_finishAndReturnString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_finishString2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleUnexpectedValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleApos\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_handleInvalidNumberStart\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_matchToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_checkMatchEnd\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipWS\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipWSOrEnd\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipWSComment\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipColon\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipColon2\\:\\(IZ\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipCComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipYAMLComment\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeCharForError\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeUtf8\\_2\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeUtf8\\_3\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeUtf8\\_4\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipUtf8\\_2\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipUtf8\\_3\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_skipUtf8\\_4\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidToken\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidToken\\:\\(ILjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_decodeBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8DataInputJsonParser\\.\\_closeScope\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUnq\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writePPFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writePPFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(Ljava\\/io\\/Reader\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRawValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeSegmentedRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeRawSegment\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedShort\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedLong\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeQuotedRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBytes\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegments\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegments\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegments\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegment2\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegmentASCII2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeStringSegmentASCII2\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeCustomStringSegment2\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeCustomStringSegment2\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeCustomEscape\\:\\(\\[BILcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_handleLongCustomEscape\\:\\(\\[BII\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUTF8Segments\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUTF8Segment\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeUTF8Segment2\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_readMore\\:\\(Ljava\\/io\\/InputStream\\;\\[BIII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_outputRawMultiByteChar\\:\\(I\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_outputSurrogates\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_outputMultiByteChar\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_writeGenericEscape\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8JsonGenerator\\.\\_flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_loadMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_readBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_nextTokenNotInObject\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextFieldName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipColonFast\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_isNextTokenNameYes\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_isNextTokenNameMaybe\\:\\(ILcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextTextValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextIntValue\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextLongValue\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextBooleanValue\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parsePosNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseNegNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseNumber2\\:\\(\\[CIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_verifyNoLeadingZeroes\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseFloat\\:\\(\\[CIIZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_verifyRootSpace\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseMediumName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseMediumName2\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseLongName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.slowParseName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseName\\:\\(IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.parseEscapedName\\:\\(\\[IIIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleOddName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_parseAposName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.findName\\:\\(\\[IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.addName\\:\\(\\[III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_loadMoreGuaranteed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_finishString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_finishAndReturnString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_finishString2\\:\\(\\[CI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleUnexpectedValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleApos\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_handleInvalidNumberStart\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchTrue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchFalse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_matchToken2\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_checkMatchEnd\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWS\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWS2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWSOrEnd\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipWSOrEnd2\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipColon\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipColon2\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipCComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipYAMLComment\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeCharForError\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_2\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_3\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_3fast\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeUtf8\\_4\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipUtf8\\_2\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipUtf8\\_3\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipUtf8\\_4\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_skipCR\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.nextByte\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidToken\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_reportInvalidOther\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_decodeBase64\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_closeScope\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_closeArrayScope\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.UTF8StreamJsonParser\\.\\_closeObjectScope\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeFieldName\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writePPFieldName\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writePPFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(Ljava\\/io\\/Reader\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeRawLong\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedShort\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedLong\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeQuotedRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_verifyValueWrite\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeString2\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeLongString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeSegment\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringASCII\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeSegmentASCII\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringASCII\\:\\(\\[CIII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringCustom\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeSegmentCustom\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeStringCustom\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_readMore\\:\\(Ljava\\/io\\/InputStream\\;\\[BIII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_prependOrWriteCharacterEscape\\:\\(CI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_prependOrWriteCharacterEscape\\:\\(\\[CIICI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonGenerationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_appendCharacterEscape\\:\\(CI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.WriterBasedJsonGenerator\\.\\_flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.feedInput\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeEscaped\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishTokenWithEOF\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startDocument\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishBOM\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startFieldName\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startFieldNameAfterComma\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startValue\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startValueExpectComma\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startValueExpectColon\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startValueAfterComma\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startUnexpectedValue\\:\\(ZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_skipWS\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startSlashComment\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishHashComment\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishCppComment\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishCComment\\:\\(IZ\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startAfterComment\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startFalseToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startTrueToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startNullToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishKeywordToken\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishKeywordTokenWithEOF\\:\\(Ljava\\/lang\\/String\\;ILcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNonStdToken\\:\\(II\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNonStdTokenWithEOF\\:\\(II\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishErrorToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishErrorTokenWithEOF\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_reportErrorToken\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startPositiveNumber\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startNegativeNumber\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startNumberLeadingZero\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNumberMinus\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNumberLeadingZeroes\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNumberLeadingNegZeroes\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishNumberIntegralPart\\:\\(\\[CI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startFloat\\:\\(\\[CII\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishFloatFraction\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishFloatExponent\\:\\(ZI\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_fastParseName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_parseMediumName\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_parseMediumName2\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_parseEscapedName\\:\\(III\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_handleOddName\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishUnquotedName\\:\\(III\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishAposName\\:\\(III\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishFieldWithEscape\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeSplitEscaped\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startString\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishRegularString\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_startAposString\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_finishAposString\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeSplitMultiByte\\:\\(IIZ\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeSplitUTF8\\_3\\:\\(III\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeSplitUTF8\\_4\\:\\(III\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeCharEscape\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeFastCharEscape\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeUTF8\\_2\\:\\(II\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeUTF8\\_3\\:\\(III\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParser\\.\\_decodeUTF8\\_4\\:\\(IIII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.releaseBuffered\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_releaseBuffers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_closeInput\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_startArrayScope\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_startObjectScope\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_closeArrayScope\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_closeObjectScope\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_findName\\:\\(II\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_findName\\:\\(III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_findName\\:\\(IIII\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_addName\\:\\(\\[III\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_eofAsNextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_fieldComplete\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_valueComplete\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_valueCompleteInt\\:\\(ILjava\\/lang\\/String\\;\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_valueNonStdNumberComplete\\:\\(I\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_reportInvalidChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_reportInvalidInitial\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_reportInvalidOther\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.core.JsonParseException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.json\\.async\\.NonBlockingJsonParserBase\\.\\_reportInvalidOther\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultIndenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\$FixedSpaceIndenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\$Indenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\$NopIndenter\\.writeIndentation\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeRootValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeStartObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.beforeObjectEntries\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeObjectFieldValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeObjectEntrySeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeEndObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeStartArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.beforeArrayValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeArrayValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.DefaultPrettyPrinter\\.writeEndArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartArray\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeEndArray\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeStartObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeEndObject\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeFieldName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeFieldName\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeFieldId\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeArray\\:\\(\\[III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeArray\\:\\(\\[JII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeArray\\:\\(\\[DII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(Ljava\\/io\\/Reader\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeString\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeUTF8String\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/SerializableString\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRaw\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawValue\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeRawValue\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeBinary\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/InputStream\\;I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(S\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigInteger\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/math\\/BigDecimal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNumber\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeNull\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeOmittedField\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeObjectId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeObjectRef\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeTypeId\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeEmbeddedObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.writeTree\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/TreeNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.copyCurrentEvent\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.copyCurrentStructure\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonGeneratorDelegate\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getCurrentName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.isNaN\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTextCharacters\\:\\(\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTextLength\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTextOffset\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getText\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getBigIntegerValue\\:\\(\\)Ljava\\/math\\/BigInteger\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getBooleanValue\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getByteValue\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getShortValue\\:\\(\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getDecimalValue\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getDoubleValue\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getFloatValue\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getIntValue\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getLongValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getNumberType\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\$NumberType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getNumberValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsLong\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsBoolean\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getValueAsString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getEmbeddedObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.readBinaryValue\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/Base64Variant\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.nextValue\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.finishToken\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getObjectId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserDelegate\\.getTypeId\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.nextToken\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.skipChildren\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.JsonParserSequence\\.switchAndReturnNext\\:\\(\\)Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeRootValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeStartObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.beforeObjectEntries\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeObjectFieldValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeObjectEntrySeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeEndObject\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeStartArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.beforeArrayValues\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeArrayValueSeparator\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.MinimalPrettyPrinter\\.writeEndArray\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.TextBuffer\\.contentsAsDecimal\\:\\(\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.TextBuffer\\.contentsAsDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.core\\.util\\.TextBuffer\\.contentsToWriter\\:\\(Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.Jdk8OptionalBeanPropertyWriter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.Jdk8UnwrappingOptionalBeanPropertyWriter\\.serializeAsField\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalDoubleDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/OptionalDouble\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalDoubleDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalDoubleSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalDoubleSerializer\\.serialize\\:\\(Ljava\\/util\\/OptionalDouble\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalDoubleSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalIntDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/OptionalInt\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalIntDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalIntSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalIntSerializer\\.serialize\\:\\(Ljava\\/util\\/OptionalInt\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalIntSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalLongDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/util\\/OptionalLong\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalLongDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalLongSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalLongSerializer\\.serialize\\:\\(Ljava\\/util\\/OptionalLong\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jdk8\\.OptionalLongSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.DurationDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/Duration\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.DurationDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.DurationDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310DateTimeDeserializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310DateTimeDeserializerBase\\.\\_throwNoNumericTimestampNeedTimeZone\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310DateTimeDeserializerBase\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310DeserializerBase\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310DeserializerBase\\.\\_reportWrongToken\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310DeserializerBase\\.\\_reportWrongToken\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\[Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310DeserializerBase\\.\\_handleDateTimeException\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/time\\/DateTimeException\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310DeserializerBase\\.\\_handleUnexpectedToken\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310DeserializerBase\\.\\_handleUnexpectedToken\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;\\[Lcom\\/fasterxml\\/jackson\\/core\\/JsonToken\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310StringParsableDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.JSR310StringParsableDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.LocalDateDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/LocalDate\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.LocalDateDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.LocalDateTimeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/LocalDateTime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.LocalDateTimeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.LocalTimeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/LocalTime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.LocalTimeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.MonthDayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/MonthDay\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.MonthDayDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.OffsetTimeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/OffsetTime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.OffsetTimeDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.YearDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/Year\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.YearDeserializer\\.deserializeWithType\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeDeserializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.YearDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.YearMonthDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/YearMonth\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.YearMonthDeserializer\\.deserialize\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonParser\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.DurationKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/Duration\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.DurationKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.Jsr310KeyDeserializer\\.deserializeKey\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.Jsr310KeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.Jsr310KeyDeserializer\\.\\_handleDateTimeException\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;Ljava\\/lang\\/Class\\;Ljava\\/time\\/DateTimeException\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.LocalDateKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/LocalDate\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.LocalDateKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.LocalDateTimeKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/LocalDateTime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.LocalDateTimeKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.LocalTimeKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/LocalTime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.LocalTimeKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.MonthDayKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/MonthDay\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.MonthDayKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.OffsetDateTimeKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/OffsetDateTime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.OffsetDateTimeKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.OffsetTimeKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/OffsetTime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.OffsetTimeKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.PeriodKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/Period\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.PeriodKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.YearKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/Year\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.YearKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.YearMothKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/YearMonth\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.YearMothKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.ZoneIdKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.ZoneOffsetKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/ZoneOffset\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.ZoneOffsetKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.ZonedDateTimeKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/time\\/ZonedDateTime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.deser\\.key\\.ZonedDateTimeKeyDeserializer\\.deserialize\\:\\(Ljava\\/lang\\/String\\;Lcom\\/fasterxml\\/jackson\\/databind\\/DeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.DurationSerializer\\.serialize\\:\\(Ljava\\/time\\/Duration\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.DurationSerializer\\.\\_acceptTimestampVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.DurationSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.DurationSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.DurationSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.InstantSerializerBase\\.serialize\\:\\(Ljava\\/time\\/temporal\\/Temporal\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.InstantSerializerBase\\.\\_acceptTimestampVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.InstantSerializerBase\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.InstantSerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.InstantSerializerBase\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.JSR310FormattedSerializerBase\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.JSR310FormattedSerializerBase\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.JSR310FormattedSerializerBase\\.\\_acceptTimestampVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.JSR310SerializerBase\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateSerializer\\.serialize\\:\\(Ljava\\/time\\/LocalDate\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateSerializer\\.serializeWithType\\:\\(Ljava\\/time\\/LocalDate\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateSerializer\\.\\_serializeAsArrayContents\\:\\(Ljava\\/time\\/LocalDate\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateTimeSerializer\\.serialize\\:\\(Ljava\\/time\\/LocalDateTime\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateTimeSerializer\\.serializeWithType\\:\\(Ljava\\/time\\/LocalDateTime\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateTimeSerializer\\.\\_serializeAsArrayContents\\:\\(Ljava\\/time\\/LocalDateTime\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateTimeSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateTimeSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateTimeSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalDateTimeSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalTimeSerializer\\.serialize\\:\\(Ljava\\/time\\/LocalTime\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalTimeSerializer\\.serializeWithType\\:\\(Ljava\\/time\\/LocalTime\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalTimeSerializer\\.\\_serializeAsArrayContents\\:\\(Ljava\\/time\\/LocalTime\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalTimeSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalTimeSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalTimeSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.LocalTimeSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.MonthDaySerializer\\.serialize\\:\\(Ljava\\/time\\/MonthDay\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.MonthDaySerializer\\.serializeWithType\\:\\(Ljava\\/time\\/MonthDay\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.MonthDaySerializer\\.\\_serializeAsArrayContents\\:\\(Ljava\\/time\\/MonthDay\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.MonthDaySerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.MonthDaySerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.MonthDaySerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.MonthDaySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.OffsetTimeSerializer\\.serialize\\:\\(Ljava\\/time\\/OffsetTime\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.OffsetTimeSerializer\\.serializeWithType\\:\\(Ljava\\/time\\/OffsetTime\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.OffsetTimeSerializer\\.\\_serializeAsArrayContents\\:\\(Ljava\\/time\\/OffsetTime\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.OffsetTimeSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.OffsetTimeSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.OffsetTimeSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.OffsetTimeSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearMonthSerializer\\.serialize\\:\\(Ljava\\/time\\/YearMonth\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearMonthSerializer\\.serializeWithType\\:\\(Ljava\\/time\\/YearMonth\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearMonthSerializer\\.\\_serializeAsArrayContents\\:\\(Ljava\\/time\\/YearMonth\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearMonthSerializer\\.\\_acceptTimestampVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearMonthSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearMonthSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearMonthSerializer\\.serializeWithType\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/jsontype\\/TypeSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearMonthSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearSerializer\\.serialize\\:\\(Ljava\\/time\\/Year\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearSerializer\\.\\_acceptTimestampVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearSerializer\\.acceptJsonFormatVisitor\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/jsonFormatVisitors\\/JsonFormatVisitorWrapper\\;Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.fasterxml.jackson.databind.JsonMappingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearSerializer\\.createContextual\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;Lcom\\/fasterxml\\/jackson\\/databind\\/BeanProperty\\;\\)Lcom\\/fasterxml\\/jackson\\/databind\\/JsonSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.YearSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.key\\.Jsr310NullKeySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.fasterxml.jackson.core.JsonProcessingException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.key\\.ZonedDateTimeKeySerializer\\.serialize\\:\\(Ljava\\/time\\/ZonedDateTime\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.fasterxml\\.jackson\\.datatype\\.jsr310\\.ser\\.key\\.ZonedDateTimeKeySerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Lcom\\/fasterxml\\/jackson\\/databind\\/SerializerProvider\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.HttpInputMessage\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.ClientHttpRequestFactory\\.createRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.ClientHttpResponse\\.getStatusCode\\:\\(\\)Lorg\\/springframework\\/http\\/HttpStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.ClientHttpResponse\\.getRawStatusCode\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.ClientHttpResponse\\.getStatusText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractClientHttpRequest\\.getBody\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractClientHttpRequest\\.execute\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractClientHttpRequest\\.getBodyInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractAsyncClientHttpRequest\\.getBody\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractAsyncClientHttpRequest\\.executeAsync\\:\\(\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractAsyncClientHttpRequest\\.getBodyInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractAsyncClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleClientHttpResponse\\.getRawStatusCode\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleClientHttpResponse\\.getStatusText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleClientHttpResponse\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpRequestFactory\\$1\\.initChannel\\:\\(Lio\\/netty\\/channel\\/socket\\/SocketChannel\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpRequestFactory\\$1\\.initChannel\\:\\(Lio\\/netty\\/channel\\/Channel\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleBufferingAsyncClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\[B\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.support\\.HttpAccessor\\.createRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.support\\.AsyncHttpAccessor\\.createAsyncRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/AsyncClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.support\\.ProxyFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.support\\.ProxyFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.support\\.BasicAuthorizationInterceptor\\.intercept\\:\\(Lorg\\/springframework\\/http\\/HttpRequest\\;\\[BLorg\\/springframework\\/http\\/client\\/ClientHttpRequestExecution\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractBufferingClientHttpRequest\\.getBodyInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractBufferingClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractBufferingClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\[B\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleClientHttpRequestFactory\\.createRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleClientHttpRequestFactory\\.createAsyncRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/AsyncClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleClientHttpRequestFactory\\.openConnection\\:\\(Ljava\\/net\\/URL\\;Ljava\\/net\\/Proxy\\;\\)Ljava\\/net\\/HttpURLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleClientHttpRequestFactory\\.prepareConnection\\:\\(Ljava\\/net\\/HttpURLConnection\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsClientHttpRequestFactory\\.createRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsClientHttpRequestFactory\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AsyncClientHttpRequestInterceptor\\.intercept\\:\\(Lorg\\/springframework\\/http\\/HttpRequest\\;\\[BLorg\\/springframework\\/http\\/client\\/AsyncClientHttpRequestExecution\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleStreamingAsyncClientHttpRequest\\$1\\.call\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleStreamingAsyncClientHttpRequest\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpResponse\\.getRawStatusCode\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpResponse\\.getStatusText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpResponse\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.InterceptingClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\[B\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.ClientHttpRequestInterceptor\\.intercept\\:\\(Lorg\\/springframework\\/http\\/HttpRequest\\;\\[BLorg\\/springframework\\/http\\/client\\/ClientHttpRequestExecution\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsAsyncClientHttpRequest\\$ClientHttpResponseFuture\\.adapt\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleStreamingAsyncClientHttpRequest\\.getBodyInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleStreamingAsyncClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleBufferingAsyncClientHttpRequest\\$1\\.call\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleBufferingAsyncClientHttpRequest\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.OkHttp3ClientHttpResponse\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.ClientHttpRequestExecution\\.execute\\:\\(Lorg\\/springframework\\/http\\/HttpRequest\\;\\[B\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsAsyncClientHttpResponse\\.getRawStatusCode\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsAsyncClientHttpResponse\\.getStatusText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsAsyncClientHttpResponse\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsStreamingClientHttpRequest\\.getBodyInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsStreamingClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.OkHttp3AsyncClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\[B\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpRequestFactory\\.createRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpRequestFactory\\.createAsyncRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/AsyncClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpRequestFactory\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AsyncClientHttpRequestExecution\\.executeAsync\\:\\(Lorg\\/springframework\\/http\\/HttpRequest\\;\\[B\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.OkHttp3ClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\[B\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.BufferingClientHttpRequestWrapper\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\[B\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.InterceptingAsyncClientHttpRequest\\$AsyncRequestExecution\\.executeAsync\\:\\(Lorg\\/springframework\\/http\\/HttpRequest\\;\\[B\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractClientHttpResponse\\.getStatusCode\\:\\(\\)Lorg\\/springframework\\/http\\/HttpStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsAsyncClientHttpRequestFactory\\.createAsyncRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/AsyncClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsAsyncClientHttpRequestFactory\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsClientHttpResponse\\.getRawStatusCode\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsClientHttpResponse\\.getStatusText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsClientHttpResponse\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractBufferingAsyncClientHttpRequest\\.getBodyInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractBufferingAsyncClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractBufferingAsyncClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\[B\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleStreamingClientHttpRequest\\.getBodyInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.SimpleStreamingClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.BufferingClientHttpRequestFactory\\.createRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/client\\/ClientHttpRequestFactory\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AsyncClientHttpRequestFactory\\.createAsyncRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/AsyncClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.ClientHttpRequest\\.execute\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AsyncClientHttpRequest\\.executeAsync\\:\\(\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.BufferingClientHttpResponseWrapper\\.getStatusCode\\:\\(\\)Lorg\\/springframework\\/http\\/HttpStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.BufferingClientHttpResponseWrapper\\.getRawStatusCode\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.BufferingClientHttpResponseWrapper\\.getStatusText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.BufferingClientHttpResponseWrapper\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractClientHttpRequestFactoryWrapper\\.createRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.AbstractClientHttpRequestFactoryWrapper\\.createRequest\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/client\\/ClientHttpRequestFactory\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpRequest\\$RequestExecuteHandler\\.channelRead0\\:\\(Lio\\/netty\\/channel\\/ChannelHandlerContext\\;Lio\\/netty\\/handler\\/codec\\/http\\/FullHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpRequest\\$RequestExecuteHandler\\.exceptionCaught\\:\\(Lio\\/netty\\/channel\\/ChannelHandlerContext\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.Netty4ClientHttpRequest\\$RequestExecuteHandler\\.channelRead0\\:\\(Lio\\/netty\\/channel\\/ChannelHandlerContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsStreamingClientHttpRequest\\$StreamingHttpEntity\\.getContent\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsStreamingClientHttpRequest\\$StreamingHttpEntity\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsStreamingClientHttpRequest\\$StreamingHttpEntity\\.consumeContent\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.InterceptingAsyncClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\[B\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.client\\.HttpComponentsAsyncClientHttpRequest\\.executeInternal\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\[B\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.bind.JAXBException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.codec\\.xml\\.JaxbContextContainer\\.createMarshaller\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/xml\\/bind\\/Marshaller\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.bind.JAXBException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.codec\\.xml\\.JaxbContextContainer\\.createUnmarshaller\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/xml\\/bind\\/Unmarshaller\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.bind.JAXBException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.codec\\.xml\\.JaxbContextContainer\\.getJaxbContext\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/xml\\/bind\\/JAXBContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.StreamingHttpOutputMessage\\$Body\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.ServerHttpResponse\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.ServletServerHttpAsyncRequestControl\\.onComplete\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.ServletServerHttpAsyncRequestControl\\.onStartAsync\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.ServletServerHttpAsyncRequestControl\\.onError\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.ServletServerHttpAsyncRequestControl\\.onTimeout\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.AbstractListenerReadPublisher\\.read\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.AbstractListenerReadPublisher\\.readAndPublish\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.AbstractListenerReadPublisher\\.access\\$1000\\:\\(Lorg\\/springframework\\/http\\/server\\/reactive\\/AbstractListenerReadPublisher\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpResponse\\$ResponseBodyProcessor\\.write\\:\\(Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBuffer\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpResponse\\$ResponseBodyProcessor\\.write\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.JettyHttpHandlerAdapter\\.createResponse\\:\\(Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/AsyncContext\\;\\)Lorg\\/springframework\\/http\\/server\\/reactive\\/ServerHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.TomcatHttpHandlerAdapter\\$TomcatServerHttpResponse\\.\\<init\\>\\:\\(Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/AsyncContext\\;Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBufferFactory\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.TomcatHttpHandlerAdapter\\$TomcatServerHttpResponse\\.writeToOutputStream\\:\\(Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpRequest\\$RequestBodyPublisher\\.registerReadListener\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpRequest\\$RequestBodyPublisher\\.read\\:\\(\\)Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpRequest\\$RequestBodyPublisher\\.read\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpRequest\\$RequestBodyPublisher\\$RequestBodyPublisherReadListener\\.onDataAvailable\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpRequest\\$RequestBodyPublisher\\$RequestBodyPublisherReadListener\\.onAllDataRead\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.UndertowServerHttpRequest\\.\\<init\\>\\:\\(Lio\\/undertow\\/server\\/HttpServerExchange\\;Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBufferFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.UndertowServerHttpRequest\\.initUri\\:\\(Lio\\/undertow\\/server\\/HttpServerExchange\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletHttpHandlerAdapter\\.service\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletHttpHandlerAdapter\\.createRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/AsyncContext\\;\\)Lorg\\/springframework\\/http\\/server\\/reactive\\/ServerHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletHttpHandlerAdapter\\.createResponse\\:\\(Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/AsyncContext\\;\\)Lorg\\/springframework\\/http\\/server\\/reactive\\/ServerHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpResponse\\$ResponseBodyFlushProcessor\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.JettyHttpHandlerAdapter\\$JettyServerHttpResponse\\.\\<init\\>\\:\\(Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/AsyncContext\\;Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBufferFactory\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.JettyHttpHandlerAdapter\\$JettyServerHttpResponse\\.writeToOutputStream\\:\\(Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.AbstractListenerWriteFlushProcessor\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.TomcatHttpHandlerAdapter\\.createRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/AsyncContext\\;\\)Lorg\\/springframework\\/http\\/server\\/reactive\\/ServerHttpRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.TomcatHttpHandlerAdapter\\.createResponse\\:\\(Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/AsyncContext\\;\\)Lorg\\/springframework\\/http\\/server\\/reactive\\/ServerHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.AbstractListenerWriteProcessor\\.write\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.TomcatHttpHandlerAdapter\\$TomcatServerHttpRequest\\.\\<init\\>\\:\\(Lorg\\/springframework\\/http\\/server\\/reactive\\/TomcatHttpHandlerAdapter\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/AsyncContext\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBufferFactory\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.TomcatHttpHandlerAdapter\\$TomcatServerHttpRequest\\.readFromInputStream\\:\\(\\)Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.UndertowServerHttpResponse\\$ResponseBodyFlushProcessor\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpResponse\\$ResponseBodyWriteListener\\.onWritePossible\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpRequest\\.\\<init\\>\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/AsyncContext\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBufferFactory\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpRequest\\.initUri\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.reactive\\.ServletServerHttpRequest\\.readFromInputStream\\:\\(\\)Lorg\\/springframework\\/core\\/io\\/buffer\\/DataBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.ServletServerHttpRequest\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.server\\.ServletServerHttpRequest\\.getBodyFromServletRequestParameters\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.HttpOutputMessage\\.getBody\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.StringHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.StringHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.StringHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.StringHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.StringHttpMessageConverter\\.getContentLength\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.FormHttpMessageConverter\\$MultipartHttpOutputMessage\\.getBody\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.FormHttpMessageConverter\\$MultipartHttpOutputMessage\\.writeHeaders\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceRegionHttpMessageConverter\\.read\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceRegionHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Lorg\\/springframework\\/core\\/io\\/support\\/ResourceRegion\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceRegionHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceRegionHttpMessageConverter\\.writeResourceRegion\\:\\(Lorg\\/springframework\\/core\\/io\\/support\\/ResourceRegion\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceRegionHttpMessageConverter\\.writeResourceRegionCollection\\:\\(Ljava\\/util\\/Collection\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceRegionHttpMessageConverter\\.println\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceRegionHttpMessageConverter\\.print\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceRegionHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceHttpMessageConverter\\.getContentLength\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceHttpMessageConverter\\.writeInternal\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceHttpMessageConverter\\.writeContent\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceHttpMessageConverter\\.getContentLength\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ResourceHttpMessageConverter\\.getDefaultContentType\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/MediaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\$ProtobufJavaFormatSupport\\.merge\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/nio\\/charset\\/Charset\\;Lorg\\/springframework\\/http\\/MediaType\\;Lcom\\/google\\/protobuf\\/ExtensionRegistry\\;Lcom\\/google\\/protobuf\\/Message\\$Builder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\$ProtobufJavaFormatSupport\\.print\\:\\(Lcom\\/google\\/protobuf\\/Message\\;Ljava\\/io\\/OutputStream\\;Lorg\\/springframework\\/http\\/MediaType\\;Ljava\\/nio\\/charset\\/Charset\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\$ProtobufJavaUtilSupport\\.merge\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/nio\\/charset\\/Charset\\;Lorg\\/springframework\\/http\\/MediaType\\;Lcom\\/google\\/protobuf\\/ExtensionRegistry\\;Lcom\\/google\\/protobuf\\/Message\\$Builder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\$ProtobufJavaUtilSupport\\.print\\:\\(Lcom\\/google\\/protobuf\\/Message\\;Ljava\\/io\\/OutputStream\\;Lorg\\/springframework\\/http\\/MediaType\\;Ljava\\/nio\\/charset\\/Charset\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Lcom\\/google\\/protobuf\\/Message\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\.getMessageBuilder\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/google\\/protobuf\\/Message\\$Builder\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\.writeInternal\\:\\(Lcom\\/google\\/protobuf\\/Message\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\.getDefaultContentType\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/MediaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\$ProtobufFormatSupport\\.merge\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/nio\\/charset\\/Charset\\;Lorg\\/springframework\\/http\\/MediaType\\;Lcom\\/google\\/protobuf\\/ExtensionRegistry\\;Lcom\\/google\\/protobuf\\/Message\\$Builder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.protobuf\\.ProtobufHttpMessageConverter\\$ProtobufFormatSupport\\.print\\:\\(Lcom\\/google\\/protobuf\\/Message\\;Ljava\\/io\\/OutputStream\\;Lorg\\/springframework\\/http\\/MediaType\\;Ljava\\/nio\\/charset\\/Charset\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.Jackson2ObjectMapperFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.MappingJacksonInputMessage\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.MappingJackson2HttpMessageConverter\\.writePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.MappingJackson2HttpMessageConverter\\.writeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.google.gson.JsonParseException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.GsonBuilderUtils\\$Base64TypeAdapter\\.deserialize\\:\\(Lcom\\/google\\/gson\\/JsonElement\\;Ljava\\/lang\\/reflect\\/Type\\;Lcom\\/google\\/gson\\/JsonDeserializationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.GsonFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJackson2HttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJackson2HttpMessageConverter\\.read\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJackson2HttpMessageConverter\\.readJavaType\\:\\(Lcom\\/fasterxml\\/jackson\\/databind\\/JavaType\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJackson2HttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJackson2HttpMessageConverter\\.writePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJackson2HttpMessageConverter\\.writeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJackson2HttpMessageConverter\\.getDefaultContentType\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/MediaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJackson2HttpMessageConverter\\.getContentLength\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.JsonbHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.JsonbHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.GsonHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.GsonHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJsonHttpMessageConverter\\.read\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJsonHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJsonHttpMessageConverter\\.readResolved\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJsonHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJsonHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJsonHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJsonHttpMessageConverter\\.getReader\\:\\(Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.json\\.AbstractJsonHttpMessageConverter\\.getWriter\\:\\(Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.feed\\.AbstractWireFeedHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Lcom\\/rometools\\/rome\\/feed\\/WireFeed\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.feed\\.AbstractWireFeedHttpMessageConverter\\.writeInternal\\:\\(Lcom\\/rometools\\/rome\\/feed\\/WireFeed\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.feed\\.AbstractWireFeedHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.feed\\.AbstractWireFeedHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ByteArrayHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ByteArrayHttpMessageConverter\\.writeInternal\\:\\(\\[BLorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ByteArrayHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ByteArrayHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ByteArrayHttpMessageConverter\\.getContentLength\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ObjectToStringHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.ObjectToStringHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.HttpMessageConverter\\.read\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.HttpMessageConverter\\.write\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.GenericHttpMessageConverter\\.read\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.GenericHttpMessageConverter\\.write\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/MediaType\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.Jaxb2CollectionHttpMessageConverter\\.readFromSource\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpHeaders\\;Ljavax\\/xml\\/transform\\/Source\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.Jaxb2CollectionHttpMessageConverter\\.read\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.Jaxb2CollectionHttpMessageConverter\\.moveToFirstChildOfRootElement\\:\\(Ljavax\\/xml\\/stream\\/XMLStreamReader\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.Jaxb2CollectionHttpMessageConverter\\.moveToNextElement\\:\\(Ljavax\\/xml\\/stream\\/XMLStreamReader\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.Jaxb2CollectionHttpMessageConverter\\.write\\:\\(Ljava\\/util\\/Collection\\;Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/MediaType\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.Jaxb2CollectionHttpMessageConverter\\.writeToResult\\:\\(Ljava\\/util\\/Collection\\;Lorg\\/springframework\\/http\\/HttpHeaders\\;Ljavax\\/xml\\/transform\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.Jaxb2CollectionHttpMessageConverter\\.writeToResult\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpHeaders\\;Ljavax\\/xml\\/transform\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.Jaxb2CollectionHttpMessageConverter\\.readFromSource\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpHeaders\\;Ljavax\\/xml\\/transform\\/Source\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.Jaxb2CollectionHttpMessageConverter\\.write\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/MediaType\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.Jaxb2CollectionHttpMessageConverter\\.read\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.MarshallingHttpMessageConverter\\.readFromSource\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpHeaders\\;Ljavax\\/xml\\/transform\\/Source\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.MarshallingHttpMessageConverter\\.writeToResult\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpHeaders\\;Ljavax\\/xml\\/transform\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.SourceHttpMessageConverter\\$CountingOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.SourceHttpMessageConverter\\$CountingOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.SourceHttpMessageConverter\\$CountingOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.AbstractXmlHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.AbstractXmlHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.transform.TransformerException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.AbstractXmlHttpMessageConverter\\.transform\\:\\(Ljavax\\/xml\\/transform\\/Source\\;Ljavax\\/xml\\/transform\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.AbstractXmlHttpMessageConverter\\.readFromSource\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpHeaders\\;Ljavax\\/xml\\/transform\\/Source\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.http\\.converter\\.xml\\.AbstractXmlHttpMessageConverter\\.writeToResult\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpHeaders\\;Ljavax\\/xml\\/transform\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.caucho\\.HessianExporter\\.invoke\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.caucho\\.HessianExporter\\.doInvoke\\:\\(Lcom\\/caucho\\/hessian\\/server\\/HessianSkeleton\\;Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.caucho\\.SimpleHessianServiceExporter\\.handle\\:\\(Lcom\\/sun\\/net\\/httpserver\\/HttpExchange\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.caucho\\.HessianServiceExporter\\.handleRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.remoting.RemoteLookupFailureException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.caucho\\.HessianClientInterceptor\\.prepare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.caucho\\.HessianClientInterceptor\\.createHessianProxy\\:\\(Lcom\\/caucho\\/hessian\\/client\\/HessianProxyFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.caucho\\.HessianClientInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerRequestExecutor\\.doExecuteRequest\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Ljava\\/io\\/ByteArrayOutputStream\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerRequestExecutor\\.openConnection\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;\\)Ljava\\/net\\/HttpURLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerRequestExecutor\\.prepareConnection\\:\\(Ljava\\/net\\/HttpURLConnection\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerRequestExecutor\\.writeRequestBody\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Ljava\\/net\\/HttpURLConnection\\;Ljava\\/io\\/ByteArrayOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerRequestExecutor\\.validateResponse\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Ljava\\/net\\/HttpURLConnection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerRequestExecutor\\.readResponseBody\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Ljava\\/net\\/HttpURLConnection\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerRequestExecutor\\.executeRequest\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerServiceExporter\\.handleRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerServiceExporter\\.readRemoteInvocation\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerServiceExporter\\.readRemoteInvocation\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljava\\/io\\/InputStream\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerServiceExporter\\.decorateInputStream\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerServiceExporter\\.writeRemoteInvocationResult\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerServiceExporter\\.writeRemoteInvocationResult\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerServiceExporter\\.decorateOutputStream\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.AbstractHttpInvokerRequestExecutor\\.executeRequest\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.AbstractHttpInvokerRequestExecutor\\.getByteArrayOutputStream\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;\\)Ljava\\/io\\/ByteArrayOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.AbstractHttpInvokerRequestExecutor\\.writeRemoteInvocation\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.AbstractHttpInvokerRequestExecutor\\.decorateOutputStream\\:\\(Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.AbstractHttpInvokerRequestExecutor\\.doWriteRemoteInvocation\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.AbstractHttpInvokerRequestExecutor\\.doExecuteRequest\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Ljava\\/io\\/ByteArrayOutputStream\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.AbstractHttpInvokerRequestExecutor\\.readRemoteInvocationResult\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.AbstractHttpInvokerRequestExecutor\\.decorateInputStream\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.AbstractHttpInvokerRequestExecutor\\.createObjectInputStream\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/ObjectInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.AbstractHttpInvokerRequestExecutor\\.doReadRemoteInvocationResult\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpComponentsHttpInvokerRequestExecutor\\.doExecuteRequest\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Ljava\\/io\\/ByteArrayOutputStream\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpComponentsHttpInvokerRequestExecutor\\.createHttpPost\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;\\)Lorg\\/apache\\/http\\/client\\/methods\\/HttpPost\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpComponentsHttpInvokerRequestExecutor\\.setRequestBody\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpPost\\;Ljava\\/io\\/ByteArrayOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpComponentsHttpInvokerRequestExecutor\\.executeHttpPost\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Lorg\\/apache\\/http\\/client\\/HttpClient\\;Lorg\\/apache\\/http\\/client\\/methods\\/HttpPost\\;\\)Lorg\\/apache\\/http\\/HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpComponentsHttpInvokerRequestExecutor\\.validateResponse\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Lorg\\/apache\\/http\\/HttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpComponentsHttpInvokerRequestExecutor\\.getResponseBody\\:\\(Lorg\\/springframework\\/remoting\\/httpinvoker\\/HttpInvokerClientConfiguration\\;Lorg\\/apache\\/http\\/HttpResponse\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerClientInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerClientInterceptor\\.executeRequest\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerClientInterceptor\\.executeRequest\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerServiceExporter\\.handle\\:\\(Lcom\\/sun\\/net\\/httpserver\\/HttpExchange\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerServiceExporter\\.readRemoteInvocation\\:\\(Lcom\\/sun\\/net\\/httpserver\\/HttpExchange\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerServiceExporter\\.readRemoteInvocation\\:\\(Lcom\\/sun\\/net\\/httpserver\\/HttpExchange\\;Ljava\\/io\\/InputStream\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerServiceExporter\\.decorateInputStream\\:\\(Lcom\\/sun\\/net\\/httpserver\\/HttpExchange\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerServiceExporter\\.writeRemoteInvocationResult\\:\\(Lcom\\/sun\\/net\\/httpserver\\/HttpExchange\\;Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerServiceExporter\\.writeRemoteInvocationResult\\:\\(Lcom\\/sun\\/net\\/httpserver\\/HttpExchange\\;Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.SimpleHttpInvokerServiceExporter\\.decorateOutputStream\\:\\(Lcom\\/sun\\/net\\/httpserver\\/HttpExchange\\;Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.httpinvoker\\.HttpInvokerServiceExporter\\$FlushGuardedOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.jaxws\\.AbstractJaxWsServiceExporter\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.jaxws\\.LocalJaxWsServiceFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.jaxws\\.LocalJaxWsServiceFactory\\.setWsdlDocumentResource\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.jaxws\\.JaxWsPortClientInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.jaxws\\.JaxWsPortClientInterceptor\\.doInvoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.jaxws\\.JaxWsPortClientInterceptor\\.doInvoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.jaxws\\.SimpleHttpServerJaxWsServiceExporter\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.jsf\\.el\\.WebApplicationContextFacesELResolver\\.getValue\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.jsf\\.el\\.WebApplicationContextFacesELResolver\\.getType\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.jsf\\.el\\.WebApplicationContextFacesELResolver\\.setValue\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.jsf\\.el\\.WebApplicationContextFacesELResolver\\.isReadOnly\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.jsf\\.el\\.SpringBeanFacesELResolver\\.getValue\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.jsf\\.el\\.SpringBeanFacesELResolver\\.getType\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.jsf\\.el\\.SpringBeanFacesELResolver\\.setValue\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.jsf\\.el\\.SpringBeanFacesELResolver\\.isReadOnly\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.jsf\\.FacesContextUtils\\.getRequiredWebApplicationContext\\:\\(Ljavax\\/faces\\/context\\/FacesContext\\;\\)Lorg\\/springframework\\/web\\/context\\/WebApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.multipart.MultipartException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.StandardServletMultipartResolver\\.resolveMultipart\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Lorg\\/springframework\\/web\\/multipart\\/MultipartHttpServletRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.StandardMultipartHttpServletRequest\\$StandardMultipartFile\\.getBytes\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.StandardMultipartHttpServletRequest\\$StandardMultipartFile\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.StandardMultipartHttpServletRequest\\$StandardMultipartFile\\.transferTo\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.multipart.MultipartException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.StandardMultipartHttpServletRequest\\.\\<init\\>\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.multipart.MultipartException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.StandardMultipartHttpServletRequest\\.\\<init\\>\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.MultipartResolutionDelegate\\.resolveMultipartArgument\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.MultipartResolutionDelegate\\.resolvePart\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/servlet\\/http\\/Part\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.MultipartResolutionDelegate\\.resolvePartList\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.MultipartResolutionDelegate\\.resolvePartArray\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljava\\/lang\\/String\\;\\)\\[Ljavax\\/servlet\\/http\\/Part\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.multipart.support.MissingServletRequestPartException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.RequestPartServletServerHttpRequest\\.\\<init\\>\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.RequestPartServletServerHttpRequest\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.support\\.MultipartFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.commons\\.CommonsFileUploadSupport\\.setUploadTempDir\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.multipart.MultipartException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.commons\\.CommonsMultipartResolver\\.resolveMultipart\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Lorg\\/springframework\\/web\\/multipart\\/MultipartHttpServletRequest\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.multipart.MultipartException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.commons\\.CommonsMultipartResolver\\.parseRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Lorg\\/springframework\\/web\\/multipart\\/commons\\/CommonsFileUploadSupport\\$MultipartParsingResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.commons\\.CommonsMultipartFile\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.commons\\.CommonsMultipartFile\\.transferTo\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.multipart.MultipartException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.MultipartResolver\\.resolveMultipart\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Lorg\\/springframework\\/web\\/multipart\\/MultipartHttpServletRequest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.MultipartFile\\.getBytes\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.MultipartFile\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.multipart\\.MultipartFile\\.transferTo\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.HttpMediaTypeNotAcceptableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.accept\\.AbstractMappingContentNegotiationStrategy\\.resolveMediaTypes\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.HttpMediaTypeNotAcceptableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.accept\\.AbstractMappingContentNegotiationStrategy\\.resolveMediaTypeKey\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.HttpMediaTypeNotAcceptableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.accept\\.AbstractMappingContentNegotiationStrategy\\.handleNoMatch\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/http\\/MediaType\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.HttpMediaTypeNotAcceptableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.accept\\.ServletPathExtensionContentNegotiationStrategy\\.handleNoMatch\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/http\\/MediaType\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.HttpMediaTypeNotAcceptableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.accept\\.ContentNegotiationManager\\.resolveMediaTypes\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.HttpMediaTypeNotAcceptableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.accept\\.HeaderContentNegotiationStrategy\\.resolveMediaTypes\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.HttpMediaTypeNotAcceptableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.accept\\.ContentNegotiationStrategy\\.resolveMediaTypes\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.ResponseErrorHandler\\.hasError\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.ResponseErrorHandler\\.handleError\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.ResponseErrorHandler\\.handleError\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\$ResponseEntityResponseExtractor\\.extractData\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\$ResponseEntityResponseExtractor\\.extractData\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.MessageBodyClientHttpResponseWrapper\\.\\<init\\>\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.MessageBodyClientHttpResponseWrapper\\.hasMessageBody\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.MessageBodyClientHttpResponseWrapper\\.hasEmptyMessageBody\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.MessageBodyClientHttpResponseWrapper\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.MessageBodyClientHttpResponseWrapper\\.getStatusCode\\:\\(\\)Lorg\\/springframework\\/http\\/HttpStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.MessageBodyClientHttpResponseWrapper\\.getRawStatusCode\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.MessageBodyClientHttpResponseWrapper\\.getStatusText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.DefaultResponseErrorHandler\\.hasError\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.DefaultResponseErrorHandler\\.handleError\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.DefaultResponseErrorHandler\\.handleError\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;Lorg\\/springframework\\/http\\/HttpStatus\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.DefaultResponseErrorHandler\\.getHttpStatusCode\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)Lorg\\/springframework\\/http\\/HttpStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.ExtractingResponseErrorHandler\\.handleError\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;Lorg\\/springframework\\/http\\/HttpStatus\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.ExtractingResponseErrorHandler\\.extract\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\$HeadersExtractor\\.extractData\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.getForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.getForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.getForEntity\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.headForHeaders\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.headForHeaders\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.headForHeaders\\:\\(Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.postForLocation\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.postForLocation\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.postForLocation\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.postForEntity\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.postForEntity\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.postForEntity\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.put\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.put\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.put\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.delete\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.delete\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.delete\\:\\(Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.optionsForAllow\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.optionsForAllow\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.optionsForAllow\\:\\(Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.exchange\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.exchange\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.execute\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/AsyncRequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.execute\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/AsyncRequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestOperations\\.execute\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/AsyncRequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\$1\\.adapt\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\$1\\.adapt\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RequestCallback\\.doWithRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\$2\\.adapt\\:\\(Lorg\\/springframework\\/http\\/HttpHeaders\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\$2\\.adapt\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRequestCallback\\.doWithRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/AsyncClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\$AsyncRequestCallbackAdapter\\.doWithRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/AsyncClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.getForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.getForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.getForObject\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.getForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.getForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.getForEntity\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.headForHeaders\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/HttpHeaders\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.headForHeaders\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/HttpHeaders\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.headForHeaders\\:\\(Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/http\\/HttpHeaders\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.postForLocation\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.postForLocation\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.postForLocation\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.postForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.postForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.postForObject\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.postForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.postForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.postForEntity\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.put\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.put\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.put\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.patchForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.patchForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.patchForObject\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.delete\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.delete\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.delete\\:\\(Ljava\\/net\\/URI\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.optionsForAllow\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.optionsForAllow\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.optionsForAllow\\:\\(Ljava\\/net\\/URI\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.exchange\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.exchange\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.exchange\\:\\(Lorg\\/springframework\\/http\\/RequestEntity\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.exchange\\:\\(Lorg\\/springframework\\/http\\/RequestEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.execute\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/RequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.execute\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/RequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.execute\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/RequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.doExecute\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/RequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\.handleResponse\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\$ResponseExtractorFuture\\.adapt\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\$ResponseExtractorFuture\\.convertResponse\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\$ResponseExtractorFuture\\.adapt\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\$AsyncRequestCallbackAdapter\\$1\\.execute\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\$AsyncRequestCallbackAdapter\\$1\\.getBody\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.ResponseExtractor\\.extractData\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestTemplate\\$AcceptHeaderRequestCallback\\.doWithRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.HttpMessageConverterExtractor\\.extractData\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.getForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.getForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.getForObject\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.getForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.getForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.getForEntity\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.headForHeaders\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/HttpHeaders\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.headForHeaders\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/HttpHeaders\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.headForHeaders\\:\\(Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/http\\/HttpHeaders\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.postForLocation\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.postForLocation\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.postForLocation\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.postForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.postForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.postForObject\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.postForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.postForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.postForEntity\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.put\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.put\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.put\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.patchForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.patchForObject\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.patchForObject\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.delete\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.delete\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.delete\\:\\(Ljava\\/net\\/URI\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.optionsForAllow\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.optionsForAllow\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.optionsForAllow\\:\\(Ljava\\/net\\/URI\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.exchange\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.exchange\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.exchange\\:\\(Lorg\\/springframework\\/http\\/RequestEntity\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.exchange\\:\\(Lorg\\/springframework\\/http\\/RequestEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.execute\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/RequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.execute\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/RequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperations\\.execute\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/RequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.getForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.getForEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.getForEntity\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.headForHeaders\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.headForHeaders\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.headForHeaders\\:\\(Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.postForLocation\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.postForLocation\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.postForLocation\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.postForEntity\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.postForEntity\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.postForEntity\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.put\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.put\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.put\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.delete\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.delete\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.delete\\:\\(Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.optionsForAllow\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.optionsForAllow\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.optionsForAllow\\:\\(Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.exchange\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.exchange\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.exchange\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Lorg\\/springframework\\/core\\/ParameterizedTypeReference\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.execute\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/AsyncRequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.execute\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/AsyncRequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.execute\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/AsyncRequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.doExecute\\:\\(Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/web\\/client\\/AsyncRequestCallback\\;Lorg\\/springframework\\/web\\/client\\/ResponseExtractor\\;\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.handleResponseError\\:\\(Lorg\\/springframework\\/http\\/HttpMethod\\;Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.AsyncRestTemplate\\.access\\$100\\:\\(Lorg\\/springframework\\/web\\/client\\/AsyncRestTemplate\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.support\\.WebDataBinderFactory\\.createBinder\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/bind\\/WebDataBinder\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.support\\.DefaultDataBinderFactory\\.createBinder\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/bind\\/WebDataBinder\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.support\\.DefaultDataBinderFactory\\.createBinderInstance\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Lorg\\/springframework\\/web\\/bind\\/WebDataBinder\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.support\\.DefaultDataBinderFactory\\.initBinder\\:\\(Lorg\\/springframework\\/web\\/bind\\/WebDataBinder\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.support\\.WebExchangeBindException\\.popNestedPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.support\\.WebArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$ParameterParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$ParameterParser\\.validateRequiredParameter\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$ParameterParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$DoubleParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Double\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$DoubleParser\\.parseDouble\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$DoubleParser\\.parseDoubles\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$DoubleParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$FloatParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Float\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$FloatParser\\.parseFloat\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)F"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$FloatParser\\.parseFloats\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)\\[F"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$FloatParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$BooleanParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$BooleanParser\\.parseBoolean\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$BooleanParser\\.parseBooleans\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)\\[Z"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$BooleanParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestDataBinder\\.closeNoCatch\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getIntParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredIntParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredIntParameters\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)\\[I"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getLongParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredLongParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredLongParameters\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)\\[J"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getFloatParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Float\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredFloatParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)F"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredFloatParameters\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)\\[F"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getDoubleParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Double\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredDoubleParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredDoubleParameters\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)\\[D"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getBooleanParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredBooleanParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredBooleanParameters\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)\\[Z"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getStringParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredStringParameter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\.getRequiredStringParameters\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$StringParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$StringParser\\.validateRequiredString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$StringParser\\.validateRequiredStrings\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$StringParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$LongParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$LongParser\\.parseLong\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$LongParser\\.parseLongs\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)\\[J"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$LongParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$IntParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$IntParser\\.parseInt\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$IntParser\\.parseInts\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)\\[I"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.ServletRequestUtils\\$IntParser\\.doParse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.bind\\.EscapedErrors\\.popNestedPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptorAdapter\\.beforeConcurrentHandling\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptorAdapter\\.preProcess\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptorAdapter\\.postProcess\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptorAdapter\\.handleTimeout\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptorAdapter\\.handleError\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptorAdapter\\.afterCompletion\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableInterceptorChain\\.applyBeforeConcurrentHandling\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableInterceptorChain\\.applyPreProcess\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.TimeoutDeferredResultProcessingInterceptor\\.handleTimeout\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptor\\.beforeConcurrentHandling\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptor\\.preProcess\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptor\\.postProcess\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptor\\.handleTimeout\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptor\\.handleError\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.CallableProcessingInterceptor\\.afterCompletion\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptorAdapter\\.beforeConcurrentHandling\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptorAdapter\\.preProcess\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptorAdapter\\.postProcess\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptorAdapter\\.handleTimeout\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptorAdapter\\.handleError\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;Ljava\\/lang\\/Throwable\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptorAdapter\\.afterCompletion\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.WebAsyncTask\\$1\\.handleTimeout\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.WebAsyncTask\\$1\\.handleError\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.WebAsyncTask\\$1\\.afterCompletion\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptor\\.beforeConcurrentHandling\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptor\\.preProcess\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptor\\.postProcess\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptor\\.handleTimeout\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptor\\.handleError\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;Ljava\\/lang\\/Throwable\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultProcessingInterceptor\\.afterCompletion\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultInterceptorChain\\.applyBeforeConcurrentHandling\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultInterceptorChain\\.applyPreProcess\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultInterceptorChain\\.triggerAfterTimeout\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.DeferredResultInterceptorChain\\.triggerAfterError\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/context\\/request\\/async\\/DeferredResult\\;Ljava\\/lang\\/Throwable\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.async\\.TimeoutCallableProcessingInterceptor\\.handleTimeout\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.WebRequestInterceptor\\.preHandle\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/WebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.WebRequestInterceptor\\.postHandle\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/WebRequest\\;Lorg\\/springframework\\/ui\\/ModelMap\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.WebRequestInterceptor\\.afterCompletion\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/WebRequest\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.request\\.RequestContextHolder\\.currentRequestAttributes\\:\\(\\)Lorg\\/springframework\\/web\\/context\\/request\\/RequestAttributes\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.HttpRequestHandlerServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.HttpRequestHandlerServlet\\.service\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.WebApplicationContextUtils\\$FacesDependencyRegistrar\\$1\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.GroovyWebApplicationContext\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/DefaultListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.GroovyWebApplicationContext\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/beans\\/factory\\/groovy\\/GroovyBeanDefinitionReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.ServletContextAttributeFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.WebApplicationContextUtils\\.getRequiredWebApplicationContext\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)Lorg\\/springframework\\/web\\/context\\/WebApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.ServletContextAwareProcessor\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.WebApplicationContextUtils\\$WebRequestObjectFactory\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.LiveBeansViewServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.LiveBeansViewServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.WebApplicationContextUtils\\$RequestObjectFactory\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.WebApplicationContextUtils\\$FacesDependencyRegistrar\\$2\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.WebApplicationObjectSupport\\.getWebApplicationContext\\:\\(\\)Lorg\\/springframework\\/web\\/context\\/WebApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.WebApplicationObjectSupport\\.getServletContext\\:\\(\\)Ljavax\\/servlet\\/ServletContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.WebApplicationObjectSupport\\.getTempDir\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.ServletContextResourcePatternResolver\\.doFindPathMatchingFileResources\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.ServletContextResourcePatternResolver\\.doRetrieveMatchingServletContextResources\\:\\(Ljavax\\/servlet\\/ServletContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Set\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.WebApplicationContextUtils\\$SessionObjectFactory\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.ServletContextResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.ServletContextResource\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.ServletContextResource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.XmlWebApplicationContext\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/DefaultListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.XmlWebApplicationContext\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/beans\\/factory\\/xml\\/XmlBeanDefinitionReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.ServletContextParameterFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.support\\.WebApplicationContextUtils\\$ResponseObjectFactory\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.context\\.AbstractContextLoaderInitializer\\.onStartup\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.HttpRequestHandler\\.handleRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.support\\.HandlerMethodReturnValueHandlerComposite\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.support\\.InvocableHandlerMethod\\.\\<init\\>\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.support\\.InvocableHandlerMethod\\.invokeForRequest\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.support\\.InvocableHandlerMethod\\.getMethodArgumentValues\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;\\[Ljava\\/lang\\/Object\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.support\\.InvocableHandlerMethod\\.doInvoke\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.support\\.HandlerMethodArgumentResolverComposite\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.support\\.HandlerMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.support\\.HandlerMethodReturnValueHandler\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.SessionStatusMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.ExpressionValueMethodArgumentResolver\\.resolveName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.ExpressionValueMethodArgumentResolver\\.handleMissingValue\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.MapMethodProcessor\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.MapMethodProcessor\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.ModelFactory\\.initModel\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/method\\/HandlerMethod\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.ModelFactory\\.invokeModelAttributeMethods\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.ModelFactory\\.updateModel\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.ModelFactory\\.updateBindingResult\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/ui\\/ModelMap\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.AbstractCookieValueMethodArgumentResolver\\.handleMissingValue\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.InitBinderDataBinderFactory\\.initBinder\\:\\(Lorg\\/springframework\\/web\\/bind\\/WebDataBinder\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.AbstractNamedValueMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.AbstractNamedValueMethodArgumentResolver\\.resolveName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.AbstractNamedValueMethodArgumentResolver\\.handleMissingValue\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.AbstractNamedValueMethodArgumentResolver\\.handleMissingValue\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.RequestHeaderMapMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.ModelMethodProcessor\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.ModelMethodProcessor\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.RequestHeaderMethodArgumentResolver\\.resolveName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.RequestHeaderMethodArgumentResolver\\.handleMissingValue\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.AbstractWebArgumentResolverAdapter\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.RequestParamMethodArgumentResolver\\.resolveName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.RequestParamMethodArgumentResolver\\.handleMissingValue\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.annotation\\.ErrorsMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.HandlerMethod\\$HandlerMethodParameter\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.HandlerMethod\\.\\<init\\>\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.method\\.HandlerMethod\\$ReturnValueMethodParameter\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.cors\\.CorsProcessor\\.processRequest\\:\\(Lorg\\/springframework\\/web\\/cors\\/CorsConfiguration\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.cors\\.DefaultCorsProcessor\\.processRequest\\:\\(Lorg\\/springframework\\/web\\/cors\\/CorsConfiguration\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.cors\\.DefaultCorsProcessor\\.rejectRequest\\:\\(Lorg\\/springframework\\/http\\/server\\/ServerHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.cors\\.DefaultCorsProcessor\\.handleInternal\\:\\(Lorg\\/springframework\\/http\\/server\\/ServerHttpRequest\\;Lorg\\/springframework\\/http\\/server\\/ServerHttpResponse\\;Lorg\\/springframework\\/web\\/cors\\/CorsConfiguration\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.WebApplicationInitializer\\.onStartup\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.RelativeRedirectFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.GenericFilterBean\\$FilterConfigPropertyValues\\.\\<init\\>\\:\\(Ljavax\\/servlet\\/FilterConfig\\;Ljava\\/util\\/Set\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.DelegatingFilterProxy\\.initFilterBean\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.DelegatingFilterProxy\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.DelegatingFilterProxy\\.initDelegate\\:\\(Lorg\\/springframework\\/web\\/context\\/WebApplicationContext\\;\\)Ljavax\\/servlet\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.DelegatingFilterProxy\\.invokeDelegate\\:\\(Ljavax\\/servlet\\/Filter\\;Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.OncePerRequestFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.OncePerRequestFilter\\.shouldNotFilter\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.OncePerRequestFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.CharacterEncodingFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.ShallowEtagHeaderFilter\\$HttpStreamingAwareContentCachingResponseWrapper\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.ShallowEtagHeaderFilter\\$HttpStreamingAwareContentCachingResponseWrapper\\.getWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.GenericFilterBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.GenericFilterBean\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.GenericFilterBean\\.initBeanWrapper\\:\\(Lorg\\/springframework\\/beans\\/BeanWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.GenericFilterBean\\.initFilterBean\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.AbstractRequestLoggingFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.HttpPutFormContentFilter\\$1\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.ForwardedHeaderFilter\\.shouldNotFilter\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.ForwardedHeaderFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.HiddenHttpMethodFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.CompositeFilter\\$VirtualFilterChain\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.HttpPutFormContentFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.ForwardedHeaderFilter\\$ForwardedHeaderExtractingResponse\\.sendRedirect\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.CorsFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.RequestContextFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.ShallowEtagHeaderFilter\\.doFilterInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.ShallowEtagHeaderFilter\\.updateResponse\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.ShallowEtagHeaderFilter\\.generateETagHeaderValue\\:\\(Ljava\\/io\\/InputStream\\;Z\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.CompositeFilter\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.filter\\.CompositeFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.server\\.adapter\\.AbstractReactiveWebInitializer\\.onStartup\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.SpringServletContainerInitializer\\.onStartup\\:\\(Ljava\\/util\\/Set\\;Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\$ResponseServletOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\$ResponseServletOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\$ResponsePrintWriter\\.\\<init\\>\\:\\(Lorg\\/springframework\\/web\\/util\\/ContentCachingResponseWrapper\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.DefaultUriBuilderFactory\\$DefaultUriBuilder\\.pathSegment\\:\\(\\[Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/util\\/UriBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.UriBuilder\\.pathSegment\\:\\(\\[Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/util\\/UriBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\.sendError\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\.sendError\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\.sendRedirect\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\.getWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\.flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\.copyBodyToResponse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingResponseWrapper\\.copyBodyToResponse\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingRequestWrapper\\.getInputStream\\:\\(\\)Ljavax\\/servlet\\/ServletInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingRequestWrapper\\.getReader\\:\\(\\)Ljava\\/io\\/BufferedReader\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.util.pattern.PatternParseException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.pattern\\.PathPatternParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/util\\/pattern\\/PathPattern\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.util.pattern.PatternParseException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.pattern\\.InternalPathPatternParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/util\\/pattern\\/PathPattern\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.WebUtils\\.setWebAppRootSystemProperty\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.WebUtils\\.getRealPath\\:\\(Ljavax\\/servlet\\/ServletContext\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.WebUtils\\.getRequiredSessionAttribute\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.util\\.ContentCachingRequestWrapper\\$ContentCachingInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.getForObject\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.getForObject\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.getForObject\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/net\\/URI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.getForEntity\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.getForEntity\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.getForEntity\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.patchForObject\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.patchForObject\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.patchForObject\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.patchForObject\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.patchForObject\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.patchForObject\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForObject\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForObject\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForObject\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForObject\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForObject\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForObject\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForEntity\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForEntity\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForEntity\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForEntity\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForEntity\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.postForEntity\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.exchange\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.exchange\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\[Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.exchange\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.exchange\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/util\\/Map\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.exchange\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.exchange\\$default\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.client\\.RestOperationsExtensionsKt\\.exchange\\:\\(Lorg\\/springframework\\/web\\/client\\/RestOperations\\;Lorg\\/springframework\\/http\\/RequestEntity\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanInfoFactory\\.getBeanInfo\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/beans\\/BeanInfo\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverterSupport\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverterSupport\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverterSupport\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/reflect\\/Field\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverterSupport\\.doConvert\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Ljava\\/lang\\/reflect\\/Field\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.support\\.PropertyComparator\\.sort\\:\\(Ljava\\/util\\/List\\;Lorg\\/springframework\\/beans\\/support\\/SortDefinition\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.support\\.PropertyComparator\\.sort\\:\\(\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/beans\\/support\\/SortDefinition\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyValuesEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.GenericTypeAwarePropertyDescriptor\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractPropertyAccessor\\.setPropertyValue\\:\\(Lorg\\/springframework\\/beans\\/PropertyValue\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractPropertyAccessor\\.setPropertyValues\\:\\(Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractPropertyAccessor\\.setPropertyValues\\:\\(Lorg\\/springframework\\/beans\\/PropertyValues\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractPropertyAccessor\\.setPropertyValues\\:\\(Lorg\\/springframework\\/beans\\/PropertyValues\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractPropertyAccessor\\.setPropertyValues\\:\\(Lorg\\/springframework\\/beans\\/PropertyValues\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractPropertyAccessor\\.getPropertyValue\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractPropertyAccessor\\.setPropertyValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.InvalidPropertyException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanWrapper\\.getPropertyDescriptor\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/beans\\/PropertyDescriptor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverterDelegate\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverterDelegate\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/reflect\\/Field\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverterDelegate\\.convertIfNecessary\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverterDelegate\\.convertIfNecessary\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyDescriptorUtils\\.findPropertyType\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyDescriptorUtils\\.findIndexedPropertyType\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AbstractFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AbstractFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AbstractFactoryBean\\.getEarlySingletonInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AbstractFactoryBean\\.getSingletonInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AbstractFactoryBean\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AbstractFactoryBean\\.createInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AbstractFactoryBean\\.destroyInstance\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AbstractFactoryBean\\.access\\$200\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/AbstractFactoryBean\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.SetFactoryBean\\.createInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ProviderCreatingFactoryBean\\$TargetBeanProvider\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ServiceLocatorFactoryBean\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.BeanPostProcessor\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.BeanPostProcessor\\.postProcessAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.DependencyDescriptor\\.resolveNotUnique\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.DependencyDescriptor\\.resolveShortcut\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.DependencyDescriptor\\.resolveCandidate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.DependencyDescriptor\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.TypedStringValue\\.resolveTargetType\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertyResourceConfigurer\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertyResourceConfigurer\\.processProperties\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;Ljava\\/util\\/Properties\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessor\\.postProcessBeforeInstantiation\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessor\\.postProcessAfterInstantiation\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessor\\.postProcessPropertyValues\\:\\(Lorg\\/springframework\\/beans\\/PropertyValues\\;\\[Ljava\\/beans\\/PropertyDescriptor\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/PropertyValues\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.BeanFactoryPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.MapFactoryBean\\.createInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertyPlaceholderConfigurer\\.setSystemPropertiesModeName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertyPlaceholderConfigurer\\.processProperties\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;Ljava\\/util\\/Properties\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ConfigurableBeanFactory\\.setParentBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ConfigurableBeanFactory\\.registerAlias\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ConfigurableBeanFactory\\.getMergedBeanDefinition\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ConfigurableBeanFactory\\.isFactoryBean\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.createBean\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.autowireBean\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.configureBean\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.createBean\\:\\(Ljava\\/lang\\/Class\\;IZ\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.autowire\\:\\(Ljava\\/lang\\/Class\\;IZ\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.autowireBeanProperties\\:\\(Ljava\\/lang\\/Object\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.applyBeanPropertyValues\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.initializeBean\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.applyBeanPostProcessorsBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.applyBeanPostProcessorsAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.resolveNamedBean\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/NamedBeanHolder\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.resolveDependency\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/DependencyDescriptor\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AutowireCapableBeanFactory\\.resolveDependency\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/DependencyDescriptor\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Set\\;Lorg\\/springframework\\/beans\\/TypeConverter\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.MethodInvokingBean\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.MethodInvokingBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.MethodInvokingBean\\.invokeWithTargetException\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ObjectFactoryCreatingFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ObjectFactoryCreatingFactoryBean\\.createInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchFieldException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.FieldRetrievingFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.FieldRetrievingFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.DeprecatedBeanWarner\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ConfigurableListableBeanFactory\\.isAutowireCandidate\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/factory\\/config\\/DependencyDescriptor\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ConfigurableListableBeanFactory\\.getBeanDefinition\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ConfigurableListableBeanFactory\\.preInstantiateSingletons\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.MethodInvokingFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.MethodInvokingFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.SmartInstantiationAwareBeanPostProcessor\\.predictBeanType\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.SmartInstantiationAwareBeanPostProcessor\\.determineCandidateConstructors\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.SmartInstantiationAwareBeanPostProcessor\\.getEarlyBeanReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertiesFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertiesFactoryBean\\.getObject\\:\\(\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertiesFactoryBean\\.createProperties\\:\\(\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertiesFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.DestructionAwareBeanPostProcessor\\.postProcessBeforeDestruction\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ServiceLocatorFactoryBean\\$ServiceLocatorInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ServiceLocatorFactoryBean\\$ServiceLocatorInvocationHandler\\.invokeServiceLocatorMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ServiceLocatorFactoryBean\\$ServiceLocatorInvocationHandler\\.getServiceLocatorMethodReturnType\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertyPlaceholderConfigurer\\$PlaceholderResolvingStringValueResolver\\.resolveStringValue\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.BeanExpressionResolver\\.evaluate\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanExpressionContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertyOverrideConfigurer\\.processProperties\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;Ljava\\/util\\/Properties\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertyOverrideConfigurer\\.processKey\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.PropertyPathFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessorAdapter\\.predictBeanType\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessorAdapter\\.determineCandidateConstructors\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessorAdapter\\.getEarlyBeanReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessorAdapter\\.postProcessBeforeInstantiation\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessorAdapter\\.postProcessAfterInstantiation\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessorAdapter\\.postProcessPropertyValues\\:\\(Lorg\\/springframework\\/beans\\/PropertyValues\\;\\[Ljava\\/beans\\/PropertyDescriptor\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/PropertyValues\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessorAdapter\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.InstantiationAwareBeanPostProcessorAdapter\\.postProcessAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.AbstractFactoryBean\\$EarlySingletonInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ProviderCreatingFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ProviderCreatingFactoryBean\\.createInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ObjectFactoryCreatingFactoryBean\\$TargetBeanObjectFactory\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.config\\.ListFactoryBean\\.createInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.InstantiationStrategy\\.instantiate\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/RootBeanDefinition\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.InstantiationStrategy\\.instantiate\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/RootBeanDefinition\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;Ljava\\/lang\\/reflect\\/Constructor\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.InstantiationStrategy\\.instantiate\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/RootBeanDefinition\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.AbstractBeanDefinitionReader\\.loadBeanDefinitions\\:\\(\\[Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.AbstractBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.AbstractBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Set\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.AbstractBeanDefinitionReader\\.loadBeanDefinitions\\:\\(\\[Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.support.BeanDefinitionValidationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.ChildBeanDefinition\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.CglibSubclassingInstantiationStrategy\\$ReplaceOverrideMethodInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/cglib\\/proxy\\/MethodProxy\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionRegistry\\.registerBeanDefinition\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionRegistry\\.removeBeanDefinition\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionRegistry\\.getBeanDefinition\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.PropertiesBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.PropertiesBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.PropertiesBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.PropertiesBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.PropertiesBeanDefinitionReader\\.registerBeanDefinitions\\:\\(Ljava\\/util\\/ResourceBundle\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.PropertiesBeanDefinitionReader\\.registerBeanDefinitions\\:\\(Ljava\\/util\\/ResourceBundle\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.PropertiesBeanDefinitionReader\\.registerBeanDefinitions\\:\\(Ljava\\/util\\/Map\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.PropertiesBeanDefinitionReader\\.registerBeanDefinitions\\:\\(Ljava\\/util\\/Map\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.PropertiesBeanDefinitionReader\\.registerBeanDefinitions\\:\\(Ljava\\/util\\/Map\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.PropertiesBeanDefinitionReader\\.registerBeanDefinition\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionReader\\.loadBeanDefinitions\\:\\(\\[Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionReader\\.loadBeanDefinitions\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionReader\\.loadBeanDefinitions\\:\\(\\[Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.SimpleBeanDefinitionRegistry\\.registerBeanDefinition\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.SimpleBeanDefinitionRegistry\\.removeBeanDefinition\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.SimpleBeanDefinitionRegistry\\.getBeanDefinition\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.DefaultListableBeanFactory\\$DependencyObjectProvider\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.DefaultListableBeanFactory\\$DependencyObjectProvider\\.getObject\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.DefaultListableBeanFactory\\$DependencyObjectProvider\\.getIfAvailable\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.DefaultListableBeanFactory\\$DependencyObjectProvider\\.getIfUnique\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.DefaultListableBeanFactory\\$DependencyObjectProvider\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.CglibSubclassingInstantiationStrategy\\$ClassLoaderAwareGeneratorStrategy\\.generate\\:\\(Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.AbstractBeanDefinition\\.getBeanClass\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.AbstractBeanDefinition\\.resolveBeanClass\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.support.BeanDefinitionValidationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.AbstractBeanDefinition\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.support.BeanDefinitionValidationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.AbstractBeanDefinition\\.prepareMethodOverrides\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.support.BeanDefinitionValidationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.AbstractBeanDefinition\\.prepareMethodOverride\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/MethodOverride\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.DefaultListableBeanFactory\\$Jsr330DependencyProvider\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.CglibSubclassingInstantiationStrategy\\$LookupOverrideMethodInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/cglib\\/proxy\\/MethodProxy\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.MethodReplacer\\.reimplement\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionRegistryPostProcessor\\.postProcessBeanDefinitionRegistry\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionReaderUtils\\.createBeanDefinition\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/springframework\\/beans\\/factory\\/support\\/AbstractBeanDefinition\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionReaderUtils\\.generateBeanName\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionReaderUtils\\.generateBeanName\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;Z\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionReaderUtils\\.registerBeanDefinition\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinitionHolder\\;Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.BeanDefinitionReaderUtils\\.registerWithGeneratedName\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/AbstractBeanDefinition\\;Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.getBean\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.getBean\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.getBean\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.getBean\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.getBean\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.isSingleton\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.isPrototype\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.isTypeMatch\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.isTypeMatch\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.getType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.getBeansOfType\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.getBeansOfType\\:\\(Ljava\\/lang\\/Class\\;ZZ\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.getBeansWithAnnotation\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.StaticListableBeanFactory\\.findAnnotationOnBean\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.support\\.AutowireUtils\\$ObjectFactoryDelegatingInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.annotation\\.AutowiredAnnotationBeanPostProcessor\\$AutowiredFieldElement\\.inject\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/PropertyValues\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.annotation\\.InjectionMetadata\\$InjectedElement\\.inject\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/PropertyValues\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.annotation\\.InitDestroyAnnotationBeanPostProcessor\\$LifecycleElement\\.invoke\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.annotation\\.AutowiredAnnotationBeanPostProcessor\\$AutowiredMethodElement\\.inject\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/PropertyValues\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.annotation\\.InjectionMetadata\\.inject\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/PropertyValues\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.annotation\\.InitDestroyAnnotationBeanPostProcessor\\$LifecycleMetadata\\.invokeInitMethods\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.annotation\\.InitDestroyAnnotationBeanPostProcessor\\$LifecycleMetadata\\.invokeDestroyMethods\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.annotation\\.RequiredAnnotationBeanPostProcessor\\.postProcessPropertyValues\\:\\(Lorg\\/springframework\\/beans\\/PropertyValues\\;\\[Ljava\\/beans\\/PropertyDescriptor\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/PropertyValues\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.annotation\\.CustomAutowireConfigurer\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactoryAware\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ObjectFactory\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.DisposableBean\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ListableBeanFactory\\.getBeansOfType\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ListableBeanFactory\\.getBeansOfType\\:\\(Ljava\\/lang\\/Class\\;ZZ\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ListableBeanFactory\\.getBeansWithAnnotation\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ListableBeanFactory\\.findAnnotationOnBean\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactory\\.getBean\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactory\\.getBean\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactory\\.getBean\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactory\\.getBean\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactory\\.getBean\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactory\\.isSingleton\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactory\\.isPrototype\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactory\\.isTypeMatch\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactory\\.isTypeMatch\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.BeanFactory\\.getType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ObjectProvider\\.getObject\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ObjectProvider\\.getIfAvailable\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ObjectProvider\\.getIfAvailable\\:\\(Ljava\\/util\\/function\\/Supplier\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ObjectProvider\\.ifAvailable\\:\\(Ljava\\/util\\/function\\/Consumer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ObjectProvider\\.getIfUnique\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ObjectProvider\\.getIfUnique\\:\\(Ljava\\/util\\/function\\/Supplier\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.ObjectProvider\\.ifUnique\\:\\(Ljava\\/util\\/function\\/Consumer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.FactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.XmlBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.XmlBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.XmlBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/xml\\/sax\\/InputSource\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.XmlBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/xml\\/sax\\/InputSource\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.XmlBeanDefinitionReader\\.doLoadBeanDefinitions\\:\\(Lorg\\/xml\\/sax\\/InputSource\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.XmlBeanDefinitionReader\\.doLoadDocument\\:\\(Lorg\\/xml\\/sax\\/InputSource\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/w3c\\/dom\\/Document\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.XmlBeanDefinitionReader\\.registerBeanDefinitions\\:\\(Lorg\\/w3c\\/dom\\/Document\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.BeanDefinitionDocumentReader\\.registerBeanDefinitions\\:\\(Lorg\\/w3c\\/dom\\/Document\\;Lorg\\/springframework\\/beans\\/factory\\/xml\\/XmlReaderContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.BeansDtdResolver\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.DefaultDocumentLoader\\.loadDocument\\:\\(Lorg\\/xml\\/sax\\/InputSource\\;Lorg\\/xml\\/sax\\/EntityResolver\\;Lorg\\/xml\\/sax\\/ErrorHandler\\;IZ\\)Lorg\\/w3c\\/dom\\/Document\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.parsers.ParserConfigurationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.DefaultDocumentLoader\\.createDocumentBuilderFactory\\:\\(IZ\\)Ljavax\\/xml\\/parsers\\/DocumentBuilderFactory\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.parsers.ParserConfigurationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.DefaultDocumentLoader\\.createDocumentBuilder\\:\\(Ljavax\\/xml\\/parsers\\/DocumentBuilderFactory\\;Lorg\\/xml\\/sax\\/EntityResolver\\;Lorg\\/xml\\/sax\\/ErrorHandler\\;\\)Ljavax\\/xml\\/parsers\\/DocumentBuilder\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.XmlBeanFactory\\.\\<init\\>\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.XmlBeanFactory\\.\\<init\\>\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.DocumentLoader\\.loadDocument\\:\\(Lorg\\/xml\\/sax\\/InputSource\\;Lorg\\/xml\\/sax\\/EntityResolver\\;Lorg\\/xml\\/sax\\/ErrorHandler\\;IZ\\)Lorg\\/w3c\\/dom\\/Document\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.BeanDefinitionParserDelegate\\.createBeanDefinition\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/factory\\/support\\/AbstractBeanDefinition\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.BeanDefinitionParserDelegate\\.buildTypedStringValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/TypedStringValue\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.DelegatingEntityResolver\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.ResourceEntityResolver\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.AbstractBeanDefinitionParser\\.resolveId\\:\\(Lorg\\/w3c\\/dom\\/Element\\;Lorg\\/springframework\\/beans\\/factory\\/support\\/AbstractBeanDefinition\\;Lorg\\/springframework\\/beans\\/factory\\/xml\\/ParserContext\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.xml\\.PluggableSchemaResolver\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.InitializingBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.groovy\\.GroovyBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.groovy\\.GroovyBeanDefinitionReader\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.factory\\.groovy\\.GroovyBeanDefinitionReader\\.importBeans\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.ExtendedBeanInfoFactory\\.getBeanInfo\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/beans\\/BeanInfo\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\$PropertyHandler\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\$PropertyHandler\\.setValue\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanWrapperImpl\\.convertForProperty\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.InvalidPropertyException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanWrapperImpl\\.getPropertyDescriptor\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/beans\\/PropertyDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\.setPropertyValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\.setPropertyValue\\:\\(Lorg\\/springframework\\/beans\\/PropertyValue\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\.setPropertyValue\\:\\(Lorg\\/springframework\\/beans\\/AbstractNestablePropertyAccessor\\$PropertyTokenHolder\\;Lorg\\/springframework\\/beans\\/PropertyValue\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\.getPropertyType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\.getPropertyTypeDescriptor\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\.convertIfNecessary\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\.convertForProperty\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\.getPropertyValue\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\.getPropertyValue\\:\\(Lorg\\/springframework\\/beans\\/AbstractNestablePropertyAccessor\\$PropertyTokenHolder\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.AbstractNestablePropertyAccessor\\.getPropertyHandler\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/AbstractNestablePropertyAccessor\\$PropertyHandler\\;"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.ExtendedBeanInfo\\$SimplePropertyDescriptor\\.\\<init\\>\\:\\(Ljava\\/beans\\/PropertyDescriptor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.ExtendedBeanInfo\\$SimplePropertyDescriptor\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeanInstantiationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.instantiate\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeanInstantiationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.instantiateClass\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeanInstantiationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.instantiateClass\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeanInstantiationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.instantiateClass\\:\\(Ljava\\/lang\\/reflect\\/Constructor\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.findMethodWithMinimalParameters\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.findDeclaredMethodWithMinimalParameters\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.findMethodWithMinimalParameters\\:\\(\\[Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.getPropertyDescriptors\\:\\(Ljava\\/lang\\/Class\\;\\)\\[Ljava\\/beans\\/PropertyDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.getPropertyDescriptor\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/beans\\/PropertyDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.findPropertyForMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/beans\\/PropertyDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.findPropertyForMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/beans\\/PropertyDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.copyProperties\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.copyProperties\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.copyProperties\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\.copyProperties\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.DirectFieldAccessor\\$FieldPropertyHandler\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.DirectFieldAccessor\\$FieldPropertyHandler\\.setValue\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.ClassEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.CustomNumberEditor\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.CustomNumberEditor\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/text\\/NumberFormat\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.CustomNumberEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.UUIDEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.PropertiesEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.PathEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.StringArrayPropertyEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.URIEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.URIEditor\\.createURI\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.CustomBooleanEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.TimeZoneEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.CharacterEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.CurrencyEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.CustomCollectionEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.InputStreamEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.FileEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.CustomDateEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.ReaderEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.InputSourceEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.URLEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.CharsetEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.ZoneIdEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.ResourceBundleEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.propertyeditors\\.ClassArrayEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverter\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverter\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.TypeConverter\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/reflect\\/Field\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.ExtendedBeanInfo\\$SimpleIndexedPropertyDescriptor\\.\\<init\\>\\:\\(Ljava\\/beans\\/IndexedPropertyDescriptor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.ExtendedBeanInfo\\$SimpleIndexedPropertyDescriptor\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.ExtendedBeanInfo\\$SimpleIndexedPropertyDescriptor\\.setIndexedReadMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.ExtendedBeanInfo\\$SimpleIndexedPropertyDescriptor\\.setIndexedWriteMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyAccessor\\.getPropertyType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyAccessor\\.getPropertyTypeDescriptor\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyAccessor\\.getPropertyValue\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyAccessor\\.setPropertyValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyAccessor\\.setPropertyValue\\:\\(Lorg\\/springframework\\/beans\\/PropertyValue\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyAccessor\\.setPropertyValues\\:\\(Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyAccessor\\.setPropertyValues\\:\\(Lorg\\/springframework\\/beans\\/PropertyValues\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyAccessor\\.setPropertyValues\\:\\(Lorg\\/springframework\\/beans\\/PropertyValues\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.PropertyAccessor\\.setPropertyValues\\:\\(Lorg\\/springframework\\/beans\\/PropertyValues\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\$KotlinDelegate\\.getPrimaryConstructor\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.springframework\\.beans\\.BeanUtils\\$KotlinDelegate\\.instantiateClass\\:\\(Ljava\\/lang\\/reflect\\/Constructor\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HandlerExecutionChain\\.applyPreHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HandlerExecutionChain\\.applyPostHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HandlerExecutionChain\\.triggerAfterCompletion\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.config\\.AnnotationDrivenBeanDefinitionParser\\$CompositeUriComponentsContributorFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HandlerInterceptor\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HandlerInterceptor\\.postHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HandlerInterceptor\\.afterCompletion\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getMessage\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getMessage\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getMessage\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getMessage\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;Z\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getMessage\\:\\(Lorg\\/springframework\\/context\\/MessageSourceResolvable\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getMessage\\:\\(Lorg\\/springframework\\/context\\/MessageSourceResolvable\\;Z\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getThemeMessage\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getThemeMessage\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getThemeMessage\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getThemeMessage\\:\\(Lorg\\/springframework\\/context\\/MessageSourceResolvable\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getBindStatus\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/servlet\\/support\\/BindStatus\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.RequestContext\\.getBindStatus\\:\\(Ljava\\/lang\\/String\\;Z\\)Lorg\\/springframework\\/web\\/servlet\\/support\\/BindStatus\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.AbstractDispatcherServletInitializer\\.onStartup\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.WebContentGenerator\\.checkRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.WebContentGenerator\\.checkAndPrepare\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.WebContentGenerator\\.checkAndPrepare\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.BindStatus\\.\\<init\\>\\:\\(Lorg\\/springframework\\/web\\/servlet\\/support\\/RequestContext\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.support\\.BindStatus\\.initErrorMessages\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.RequestToViewNameTranslator\\.getViewName\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.AsyncHandlerInterceptor\\.afterConcurrentHandlingStarted\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HttpServletBean\\$ServletConfigPropertyValues\\.\\<init\\>\\:\\(Ljavax\\/servlet\\/ServletConfig\\;Ljava\\/util\\/Set\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleHttpRequestMethodNotSupported\\:\\(Lorg\\/springframework\\/web\\/HttpRequestMethodNotSupportedException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleHttpMediaTypeNotSupported\\:\\(Lorg\\/springframework\\/web\\/HttpMediaTypeNotSupportedException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleHttpMediaTypeNotAcceptable\\:\\(Lorg\\/springframework\\/web\\/HttpMediaTypeNotAcceptableException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleMissingPathVariable\\:\\(Lorg\\/springframework\\/web\\/bind\\/MissingPathVariableException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleMissingServletRequestParameter\\:\\(Lorg\\/springframework\\/web\\/bind\\/MissingServletRequestParameterException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleServletRequestBindingException\\:\\(Lorg\\/springframework\\/web\\/bind\\/ServletRequestBindingException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleConversionNotSupported\\:\\(Lorg\\/springframework\\/beans\\/ConversionNotSupportedException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleTypeMismatch\\:\\(Lorg\\/springframework\\/beans\\/TypeMismatchException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleHttpMessageNotReadable\\:\\(Lorg\\/springframework\\/http\\/converter\\/HttpMessageNotReadableException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleHttpMessageNotWritable\\:\\(Lorg\\/springframework\\/http\\/converter\\/HttpMessageNotWritableException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleMethodArgumentNotValidException\\:\\(Lorg\\/springframework\\/web\\/bind\\/MethodArgumentNotValidException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleMissingServletRequestPartException\\:\\(Lorg\\/springframework\\/web\\/multipart\\/support\\/MissingServletRequestPartException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleBindException\\:\\(Lorg\\/springframework\\/validation\\/BindException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleNoHandlerFoundException\\:\\(Lorg\\/springframework\\/web\\/servlet\\/NoHandlerFoundException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.handleAsyncRequestTimeoutException\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/async\\/AsyncRequestTimeoutException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.support\\.DefaultHandlerExceptionResolver\\.sendServerError\\:\\(Ljava\\/lang\\/Exception\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.annotation\\.ResponseStatusExceptionResolver\\.resolveResponseStatus\\:\\(Lorg\\/springframework\\/web\\/bind\\/annotation\\/ResponseStatus\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Exception\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.annotation\\.ResponseStatusExceptionResolver\\.resolveResponseStatusException\\:\\(Lorg\\/springframework\\/web\\/server\\/ResponseStatusException\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.annotation\\.ResponseStatusExceptionResolver\\.applyStatusAndReason\\:\\(ILjava\\/lang\\/String\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.Controller\\.handleRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.SimpleControllerHandlerAdapter\\.handle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.ServletWrappingController\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.ServletWrappingController\\.handleRequestInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.ServletWrappingController\\.access\\$200\\:\\(Lorg\\/springframework\\/web\\/servlet\\/mvc\\/ServletWrappingController\\;\\)Ljavax\\/servlet\\/ServletContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ResponseBodyEmitterReturnValueHandler\\$StreamingServletServerHttpResponse\\.getBody\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ResponseBodyEmitterReturnValueHandler\\$StreamingServletServerHttpResponse\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ReactiveTypeHandler\\$JsonEmitterSubscriber\\.send\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.StreamingResponseBodyReturnValueHandler\\$StreamingResponseBodyTask\\.call\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.StreamingResponseBodyReturnValueHandler\\$StreamingResponseBodyTask\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletResponseMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletResponseMethodArgumentResolver\\.resolveArgument\\:\\(Ljava\\/lang\\/Class\\;Ljavax\\/servlet\\/ServletResponse\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.AsyncTaskMethodReturnValueHandler\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.UriComponentsBuilderMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletRequestMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletRequestMethodArgumentResolver\\.resolveArgument\\:\\(Ljava\\/lang\\/Class\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletCookieValueMethodArgumentResolver\\.resolveName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.HttpHeadersReturnValueHandler\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.JsonViewRequestBodyAdvice\\.beforeBodyRead\\:\\(Lorg\\/springframework\\/http\\/HttpInputMessage\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/HttpInputMessage\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.SessionAttributeMethodArgumentResolver\\.handleMissingValue\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.AbstractMessageConverterMethodArgumentResolver\\$EmptyBodyCheckingHttpInputMessage\\.\\<init\\>\\:\\(Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.RedirectAttributesMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.RequestAttributeMethodArgumentResolver\\.handleMissingValue\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.PathVariableMethodArgumentResolver\\.resolveName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.PathVariableMethodArgumentResolver\\.handleMissingValue\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.RequestResponseBodyMethodProcessor\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.web.HttpMediaTypeNotSupportedException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.RequestResponseBodyMethodProcessor\\.readWithMessageConverters\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.web.HttpMediaTypeNotAcceptableException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.RequestResponseBodyMethodProcessor\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ViewMethodReturnValueHandler\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.StreamingResponseBodyReturnValueHandler\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ResponseEntityExceptionHandler\\.handleException\\:\\(Ljava\\/lang\\/Exception\\;Lorg\\/springframework\\/web\\/context\\/request\\/WebRequest\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletModelAttributeMethodProcessor\\.createAttribute\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletModelAttributeMethodProcessor\\.createAttributeFromRequestValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletInvocableHandlerMethod\\$ConcurrentResultMethodParameter\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.web.HttpMediaTypeNotAcceptableException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.AbstractMessageConverterMethodProcessor\\.writeWithMessageConverters\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.web.HttpMediaTypeNotAcceptableException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.AbstractMessageConverterMethodProcessor\\.writeWithMessageConverters\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/http\\/server\\/ServletServerHttpRequest\\;Lorg\\/springframework\\/http\\/server\\/ServletServerHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.HttpMediaTypeNotAcceptableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.AbstractMessageConverterMethodProcessor\\.getAcceptableMediaTypes\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.CallableMethodReturnValueHandler\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.RequestResponseBodyAdviceChain\\.beforeBodyRead\\:\\(Lorg\\/springframework\\/http\\/HttpInputMessage\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/HttpInputMessage\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletRequestDataBinderFactory\\.createBinderInstance\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Lorg\\/springframework\\/web\\/bind\\/ServletRequestDataBinder\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletRequestDataBinderFactory\\.createBinderInstance\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Lorg\\/springframework\\/web\\/bind\\/WebDataBinder\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.RequestBodyAdvice\\.beforeBodyRead\\:\\(Lorg\\/springframework\\/http\\/HttpInputMessage\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/HttpInputMessage\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.SseEmitter\\.send\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.SseEmitter\\.send\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.SseEmitter\\.send\\:\\(Lorg\\/springframework\\/web\\/servlet\\/mvc\\/method\\/annotation\\/SseEmitter\\$SseEventBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.web.HttpMediaTypeNotSupportedException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.AbstractMessageConverterMethodArgumentResolver\\.readWithMessageConverters\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.web.HttpMediaTypeNotSupportedException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.AbstractMessageConverterMethodArgumentResolver\\.readWithMessageConverters\\:\\(Lorg\\/springframework\\/http\\/HttpInputMessage\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Ljava\\/lang\\/reflect\\/Type\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ReactiveTypeHandler\\$TextEmitterSubscriber\\.send\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ModelAndViewResolverMethodReturnValueHandler\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.PathVariableMapMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.StreamingResponseBody\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.RequestBodyAdviceAdapter\\.beforeBodyRead\\:\\(Lorg\\/springframework\\/http\\/HttpInputMessage\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/http\\/HttpInputMessage\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletInvocableHandlerMethod\\.invokeAndHandle\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/ServletWebRequest\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ServletInvocableHandlerMethod\\.setResponseStatus\\:\\(Lorg\\/springframework\\/web\\/context\\/request\\/ServletWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.RequestPartMethodArgumentResolver\\.resolveArgument\\:\\(Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;Lorg\\/springframework\\/web\\/bind\\/support\\/WebDataBinderFactory\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ResponseBodyEmitterReturnValueHandler\\$HttpMessageConvertingHandler\\.send\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ResponseBodyEmitterReturnValueHandler\\$HttpMessageConvertingHandler\\.sendInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ViewNameMethodReturnValueHandler\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ReactiveTypeHandler\\$SseEmitterSubscriber\\.send\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ResponseBodyEmitter\\.initialize\\:\\(Lorg\\/springframework\\/web\\/servlet\\/mvc\\/method\\/annotation\\/ResponseBodyEmitter\\$Handler\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ResponseBodyEmitter\\.send\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ResponseBodyEmitter\\.send\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ResponseBodyEmitter\\.sendInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.MvcUriComponentsBuilder\\$ControllerMethodInvocationInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.MatrixVariableMethodArgumentResolver\\.resolveName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.bind.ServletRequestBindingException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.MatrixVariableMethodArgumentResolver\\.handleMissingValue\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ModelAndViewMethodReturnValueHandler\\.handleReturnValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/MethodParameter\\;Lorg\\/springframework\\/web\\/method\\/support\\/ModelAndViewContainer\\;Lorg\\/springframework\\/web\\/context\\/request\\/NativeWebRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.annotation\\.ResponseBodyEmitter\\$Handler\\.send\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/MediaType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.AbstractHandlerMethodAdapter\\.handle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.method\\.AbstractHandlerMethodAdapter\\.handleInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/springframework\\/web\\/method\\/HandlerMethod\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.WebContentInterceptor\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.WebContentInterceptor\\.postHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.WebContentInterceptor\\.afterCompletion\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.ParameterizableViewController\\.handleRequestInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.ServletForwardingController\\.handleRequestInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.AbstractController\\.handleRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.AbstractController\\.handleRequestInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.mvc\\.HttpRequestHandlerAdapter\\.handle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.initServletBean\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.initFrameworkServlet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.service\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.doPost\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.doPut\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.doDelete\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.doOptions\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.doTrace\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.processRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.FrameworkServlet\\.doService\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.theme\\.ThemeChangeInterceptor\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.i18n\\.LocaleChangeInterceptor\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EscapeBodyTag\\.setJavaScriptEscape\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EscapeBodyTag\\.doAfterBody\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EscapeBodyTag\\.readBodyContent\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EscapeBodyTag\\.writeBodyContent\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.ParamTag\\.doEndTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.ArgumentTag\\.doEndTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.NestedPathTag\\.doStartTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.NestedPathTag\\.doCatch\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.UrlTag\\.setJavaScriptEscape\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.UrlTag\\.doStartTagInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.UrlTag\\.doEndTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.UrlTag\\.createUrl\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.UrlTag\\.createQueryString\\:\\(Ljava\\/util\\/List\\;Ljava\\/util\\/Set\\;Z\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.UrlTag\\.replaceUriTemplateParams\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;Ljava\\/util\\/Set\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspTagException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.ArgumentAware\\.addArgument\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EvalTag\\$JspPropertyAccessor\\.canRead\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EvalTag\\$JspPropertyAccessor\\.read\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EvalTag\\$JspPropertyAccessor\\.resolveImplicitVariable\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.HtmlEscapeTag\\.doStartTagInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.HtmlEscapingAwareTag\\.setHtmlEscape\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.BindTag\\.doStartTagInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.BindErrorsTag\\.doStartTagInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.RequestContextAwareTag\\.doStartTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.RequestContextAwareTag\\.doStartTagInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.RequestContextAwareTag\\.doCatch\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EvalTag\\.setJavaScriptEscape\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EvalTag\\.doStartTagInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EvalTag\\.doEndTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.EditorAwareTag\\.getEditor\\:\\(\\)Ljava\\/beans\\/PropertyEditor\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspTagException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.MessageTag\\.addArgument\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.MessageTag\\.setJavaScriptEscape\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.MessageTag\\.doStartTagInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.MessageTag\\.doEndTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException", 
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.MessageTag\\.resolveMessage\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.MessageTag\\.resolveArguments\\:\\(Ljava\\/lang\\/Object\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.MessageTag\\.writeMessage\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.ButtonTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.ButtonTag\\.writeValue\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.ButtonTag\\.doEndTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionsTag\\$OptionsWriter\\.isOptionDisabled\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionsTag\\$OptionsWriter\\.writeCommonAttributes\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionWriter\\.writeOptions\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionWriter\\.renderFromArray\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionWriter\\.renderFromMap\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionWriter\\.renderFromCollection\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionWriter\\.renderFromEnum\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionWriter\\.doRenderFromCollection\\:\\(Ljava\\/util\\/Collection\\;Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionWriter\\.renderOption\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionWriter\\.isOptionDisabled\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionWriter\\.writeCommonAttributes\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.CheckboxTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.CheckboxTag\\.writeTagDetails\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.CheckboxesTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.FormTag\\.getName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.FormTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.FormTag\\.autogenerateId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.FormTag\\.resolveModelAttribute\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.FormTag\\.resolveAction\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.FormTag\\.doEndTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.FormTag\\.writeHiddenFields\\:\\(Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.FormTag\\.resolveCssClass\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionsTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionsTag\\.resolveId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementTag\\.setDynamicAttribute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementTag\\.writeDefaultAttributes\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementTag\\.writeOptionalAttributes\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementTag\\.resolveCssClass\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.LabelTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.LabelTag\\.getName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.LabelTag\\.resolveFor\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.LabelTag\\.autogenerateFor\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.LabelTag\\.doEndTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.SelectTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.SelectTag\\.writeHiddenTagIfNecessary\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.SelectTag\\.isMultiple\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.SelectTag\\.forceMultiple\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.SelectTag\\.doEndTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.RadioButtonTag\\.writeTagDetails\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.HiddenInputTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlInputElementTag\\.writeOptionalAttributes\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.TextareaTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.PasswordInputTag\\.writeValue\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionTag\\.renderDefaultContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionTag\\.renderFromBodyContent\\:\\(Ljavax\\/servlet\\/jsp\\/tagext\\/BodyContent\\;Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionTag\\.exposeAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionTag\\.renderOption\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionTag\\.autogenerateId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionTag\\.getLabelValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.OptionTag\\.resolveValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.InputTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.InputTag\\.writeValue\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractCheckedElementTag\\.renderFromValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractCheckedElementTag\\.renderFromValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractCheckedElementTag\\.isOptionSelected\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractCheckedElementTag\\.renderFromBoolean\\:\\(Ljava\\/lang\\/Boolean\\;Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractCheckedElementTag\\.autogenerateId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractCheckedElementTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractFormTag\\.evaluate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractFormTag\\.writeOptionalAttribute\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractFormTag\\.doStartTagInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractFormTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractSingleCheckedElementTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractSingleCheckedElementTag\\.writeTagDetails\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.TagWriter\\$SafeWriter\\.append\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\$SafeWriter\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractMultiCheckedElementTag\\.resolveId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractMultiCheckedElementTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractMultiCheckedElementTag\\.writeObjectEntry\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractMultiCheckedElementTag\\.writeMapEntry\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\$Entry\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractMultiCheckedElementTag\\.writeElementTag\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;I\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.TagWriter\\.startTag\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.TagWriter\\.writeAttribute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.TagWriter\\.writeOptionalAttributeValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.TagWriter\\.appendValue\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.TagWriter\\.forceBlock\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.TagWriter\\.endTag\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.TagWriter\\.endTag\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.TagWriter\\.closeTagAndMarkAsBlock\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.ErrorsTag\\.autogenerateId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.ErrorsTag\\.getName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.ErrorsTag\\.shouldRender\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.ErrorsTag\\.renderDefaultContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.ErrorsTag\\.exposeAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementBodyTag\\.writeTagContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementBodyTag\\.doEndTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementBodyTag\\.renderFromBodyContent\\:\\(Ljavax\\/servlet\\/jsp\\/tagext\\/BodyContent\\;Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementBodyTag\\.shouldRender\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementBodyTag\\.exposeAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementBodyTag\\.flushBufferedBodyContent\\:\\(Ljavax\\/servlet\\/jsp\\/tagext\\/BodyContent\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementBodyTag\\.renderDefaultContent\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractHtmlElementBodyTag\\.doInitBody\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.getPath\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.writeDefaultAttributes\\:\\(Lorg\\/springframework\\/web\\/servlet\\/tags\\/form\\/TagWriter\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.resolveId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.autogenerateId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.getName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.getBindStatus\\:\\(\\)Lorg\\/springframework\\/web\\/servlet\\/support\\/BindStatus\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.getPropertyPath\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.getBoundValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.getPropertyEditor\\:\\(\\)Ljava\\/beans\\/PropertyEditor\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.getEditor\\:\\(\\)Ljava\\/beans\\/PropertyEditor\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.form\\.AbstractDataBoundFormElementTag\\.convertToDisplayString\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.JspException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.tags\\.TransformTag\\.doStartTagInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HandlerAdapter\\.handle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.ViewResolver\\.resolveViewName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HttpServletBean\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HttpServletBean\\.initBeanWrapper\\:\\(Lorg\\/springframework\\/beans\\/BeanWrapper\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HttpServletBean\\.initServletBean\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.SimpleServletHandlerAdapter\\.handle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.SimpleServletPostProcessor\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.SimpleServletPostProcessor\\.postProcessAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.SimpleServletPostProcessor\\.postProcessBeforeDestruction\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractHandlerMapping\\$PreFlightHandler\\.handleRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.MappedInterceptor\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.MappedInterceptor\\.postHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.MappedInterceptor\\.afterCompletion\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.WebRequestHandlerInterceptorAdapter\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.WebRequestHandlerInterceptorAdapter\\.postHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.WebRequestHandlerInterceptorAdapter\\.afterCompletion\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.UserRoleAuthorizationInterceptor\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.UserRoleAuthorizationInterceptor\\.handleNotAuthorized\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.context.ApplicationContextException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractDetectingUrlHandlerMapping\\.initApplicationContext\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractDetectingUrlHandlerMapping\\.detectHandlers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractHandlerMapping\\$CorsInterceptor\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.HandlerMappingIntrospector\\.getMatchableHandlerMapping\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Lorg\\/springframework\\/web\\/servlet\\/handler\\/MatchableHandlerMapping\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractUrlHandlerMapping\\.getHandlerInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractUrlHandlerMapping\\.lookupHandler\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractUrlHandlerMapping\\.validateHandler\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractUrlHandlerMapping\\.registerHandler\\:\\(\\[Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractUrlHandlerMapping\\.registerHandler\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.HandlerInterceptorAdapter\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.HandlerInterceptorAdapter\\.postHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/web\\/servlet\\/ModelAndView\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.HandlerInterceptorAdapter\\.afterCompletion\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.HandlerInterceptorAdapter\\.afterConcurrentHandlingStarted\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.ConversionServiceExposingInterceptor\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractHandlerMapping\\.initApplicationContext\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractHandlerMapping\\.getHandler\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Lorg\\/springframework\\/web\\/servlet\\/HandlerExecutionChain\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.handler\\.AbstractHandlerMapping\\.getHandlerInternal\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.HandlerMapping\\.getHandler\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Lorg\\/springframework\\/web\\/servlet\\/HandlerExecutionChain\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.AppCacheManifestTransformer\\$LineAggregator\\.add\\:\\(Lorg\\/springframework\\/web\\/servlet\\/resource\\/AppCacheManifestTransformer\\$LineOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.PathResourceResolver\\.getResource\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.PathResourceResolver\\.checkResource\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.PathResourceResolver\\.isResourceUnderLocation\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.DefaultServletHttpRequestHandler\\.handleRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.ResourceUrlEncodingFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.GzipResourceResolver\\$GzippedResource\\.\\<init\\>\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.GzipResourceResolver\\$GzippedResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.GzipResourceResolver\\$GzippedResource\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.GzipResourceResolver\\$GzippedResource\\.getURI\\:\\(\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.GzipResourceResolver\\$GzippedResource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.GzipResourceResolver\\$GzippedResource\\.contentLength\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.GzipResourceResolver\\$GzippedResource\\.lastModified\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.GzipResourceResolver\\$GzippedResource\\.createRelative\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.AppCacheManifestTransformer\\.transform\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;Lorg\\/springframework\\/web\\/servlet\\/resource\\/ResourceTransformerChain\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.AppCacheManifestTransformer\\.getResourceBytes\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.AppCacheManifestTransformer\\.access\\$100\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.TransformedResource\\.lastModified\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.ResourceTransformerChain\\.transform\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.VersionResourceResolver\\$FileNameVersionedResource\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.VersionResourceResolver\\$FileNameVersionedResource\\.getURI\\:\\(\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.VersionResourceResolver\\$FileNameVersionedResource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.VersionResourceResolver\\$FileNameVersionedResource\\.contentLength\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.VersionResourceResolver\\$FileNameVersionedResource\\.lastModified\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.VersionResourceResolver\\$FileNameVersionedResource\\.createRelative\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.VersionResourceResolver\\$FileNameVersionedResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.ResourceUrlProviderExposingInterceptor\\.preHandle\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.CssLinkResourceTransformer\\.transform\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;Lorg\\/springframework\\/web\\/servlet\\/resource\\/ResourceTransformerChain\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.DefaultResourceTransformerChain\\.transform\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.CachingResourceTransformer\\.transform\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;Lorg\\/springframework\\/web\\/servlet\\/resource\\/ResourceTransformerChain\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.resource\\.ResourceTransformer\\.transform\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;Lorg\\/springframework\\/web\\/servlet\\/resource\\/ResourceTransformerChain\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.ContentNegotiatingViewResolver\\.resolveViewName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.ContentNegotiatingViewResolver\\.getCandidateViews\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.ResourceBundleViewResolver\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.ResourceBundleViewResolver\\.loadView\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.ResourceBundleViewResolver\\.initFactory\\:\\(Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;"
 }, 
 {
  "exceptions": [
   "java.util.MissingResourceException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.ResourceBundleViewResolver\\.getBundle\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/util\\/ResourceBundle\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.ResourceBundleViewResolver\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.InternalResourceView\\.renderMergedOutputModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.InternalResourceView\\.exposeHelpers\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.InternalResourceView\\.prepareForRendering\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.XmlViewResolver\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.XmlViewResolver\\.loadView\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.XmlViewResolver\\.initFactory\\:\\(\\)Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.XmlViewResolver\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.AbstractCachingViewResolver\\.resolveViewName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.AbstractCachingViewResolver\\.createView\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.AbstractCachingViewResolver\\.loadView\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.AbstractTemplateView\\.renderMergedOutputModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.AbstractTemplateView\\.renderMergedTemplateModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.xslt\\.XsltViewResolver\\.buildView\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/servlet\\/view\\/AbstractUrlBasedView\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.BeanNameViewResolver\\.resolveViewName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "freemarker.template.TemplateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerConfigurer\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerView\\.initServletContext\\:\\(Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerView\\.autodetectConfiguration\\:\\(\\)Lorg\\/springframework\\/web\\/servlet\\/view\\/freemarker\\/FreeMarkerConfig\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerView\\.checkResource\\:\\(Ljava\\/util\\/Locale\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerView\\.renderMergedTemplateModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerView\\.exposeHelpers\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerView\\.doRender\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerView\\.getTemplate\\:\\(Ljava\\/util\\/Locale\\;\\)Lfreemarker\\/template\\/Template\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerView\\.getTemplate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lfreemarker\\/template\\/Template\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "freemarker.template.TemplateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerView\\.processTemplate\\:\\(Lfreemarker\\/template\\/Template\\;Lfreemarker\\/template\\/SimpleHash\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.freemarker\\.FreeMarkerView\\.access\\$200\\:\\(Lorg\\/springframework\\/web\\/servlet\\/view\\/freemarker\\/FreeMarkerView\\;\\)Ljavax\\/servlet\\/ServletContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.InternalResourceViewResolver\\.buildView\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/servlet\\/view\\/AbstractUrlBasedView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.json\\.AbstractJackson2View\\.renderMergedOutputModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.json\\.AbstractJackson2View\\.writeContent\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.json\\.AbstractJackson2View\\.writePrefix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.json\\.AbstractJackson2View\\.writeSuffix\\:\\(Lcom\\/fasterxml\\/jackson\\/core\\/JsonGenerator\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.AbstractUrlBasedView\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.AbstractUrlBasedView\\.checkResource\\:\\(Ljava\\/util\\/Locale\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.feed\\.AbstractFeedView\\.renderMergedOutputModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.feed\\.AbstractFeedView\\.buildFeedEntries\\:\\(Ljava\\/util\\/Map\\;Lcom\\/rometools\\/rome\\/feed\\/WireFeed\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.feed\\.AbstractAtomFeedView\\.buildFeedEntries\\:\\(Ljava\\/util\\/Map\\;Lcom\\/rometools\\/rome\\/feed\\/atom\\/Feed\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.feed\\.AbstractAtomFeedView\\.buildFeedEntries\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.feed\\.AbstractAtomFeedView\\.buildFeedEntries\\:\\(Ljava\\/util\\/Map\\;Lcom\\/rometools\\/rome\\/feed\\/WireFeed\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.feed\\.AbstractRssFeedView\\.buildFeedEntries\\:\\(Ljava\\/util\\/Map\\;Lcom\\/rometools\\/rome\\/feed\\/rss\\/Channel\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.feed\\.AbstractRssFeedView\\.buildFeedItems\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.feed\\.AbstractRssFeedView\\.buildFeedEntries\\:\\(Ljava\\/util\\/Map\\;Lcom\\/rometools\\/rome\\/feed\\/WireFeed\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractXlsView\\.renderMergedOutputModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractXlsView\\.renderWorkbook\\:\\(Lorg\\/apache\\/poi\\/ss\\/usermodel\\/Workbook\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractXlsView\\.buildExcelDocument\\:\\(Ljava\\/util\\/Map\\;Lorg\\/apache\\/poi\\/ss\\/usermodel\\/Workbook\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractXlsxStreamingView\\.renderWorkbook\\:\\(Lorg\\/apache\\/poi\\/ss\\/usermodel\\/Workbook\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractPdfView\\.renderMergedOutputModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.lowagie.text.DocumentException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractPdfView\\.newWriter\\:\\(Lcom\\/lowagie\\/text\\/Document\\;Ljava\\/io\\/OutputStream\\;\\)Lcom\\/lowagie\\/text\\/pdf\\/PdfWriter\\;"
 }, 
 {
  "exceptions": [
   "com.lowagie.text.DocumentException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractPdfView\\.prepareWriter\\:\\(Ljava\\/util\\/Map\\;Lcom\\/lowagie\\/text\\/pdf\\/PdfWriter\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractPdfView\\.buildPdfDocument\\:\\(Ljava\\/util\\/Map\\;Lcom\\/lowagie\\/text\\/Document\\;Lcom\\/lowagie\\/text\\/pdf\\/PdfWriter\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractPdfStamperView\\.renderMergedOutputModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractPdfStamperView\\.readPdfResource\\:\\(\\)Lcom\\/lowagie\\/text\\/pdf\\/PdfReader\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.document\\.AbstractPdfStamperView\\.mergePdfDocument\\:\\(Ljava\\/util\\/Map\\;Lcom\\/lowagie\\/text\\/pdf\\/PdfStamper\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.AbstractTemplateViewResolver\\.buildView\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/servlet\\/view\\/AbstractUrlBasedView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.UrlBasedViewResolver\\.createView\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.UrlBasedViewResolver\\.loadView\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.UrlBasedViewResolver\\.buildView\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/servlet\\/view\\/AbstractUrlBasedView\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.ViewResolverComposite\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.ViewResolverComposite\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.ViewResolverComposite\\.resolveViewName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/springframework\\/web\\/servlet\\/View\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.JstlView\\.exposeHelpers\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tiles.TilesException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.tiles3\\.SpringBeanPreparerFactory\\.getPreparer\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/web\\/context\\/WebApplicationContext\\;\\)Lorg\\/apache\\/tiles\\/preparer\\/ViewPreparer\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tiles.TilesException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.tiles3\\.TilesConfigurer\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tiles.TilesException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.tiles3\\.TilesConfigurer\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.tiles3\\.TilesView\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.tiles3\\.TilesView\\.checkResource\\:\\(Ljava\\/util\\/Locale\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.tiles3\\.TilesView\\.renderMergedOutputModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tiles.TilesException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.tiles3\\.AbstractSpringPreparerFactory\\.getPreparer\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/web\\/context\\/WebApplicationContext\\;\\)Lorg\\/apache\\/tiles\\/preparer\\/ViewPreparer\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tiles.TilesException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.tiles3\\.SimpleSpringPreparerFactory\\.getPreparer\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/web\\/context\\/WebApplicationContext\\;\\)Lorg\\/apache\\/tiles\\/preparer\\/ViewPreparer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.tiles3\\.TilesViewResolver\\.buildView\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/servlet\\/view\\/tiles3\\/TilesView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.tiles3\\.TilesViewResolver\\.buildView\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/web\\/servlet\\/view\\/AbstractUrlBasedView\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.xml\\.MarshallingView\\.renderMergedOutputModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.xml\\.MarshallingView\\.locateToBeMarshalled\\:\\(Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.groovy\\.GroovyMarkupView\\.autodetectMarkupTemplateEngine\\:\\(\\)Lgroovy\\/text\\/markup\\/MarkupTemplateEngine\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.groovy\\.GroovyMarkupView\\.checkResource\\:\\(Ljava\\/util\\/Locale\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.groovy\\.GroovyMarkupView\\.renderMergedTemplateModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.groovy\\.GroovyMarkupView\\.getTemplate\\:\\(Ljava\\/lang\\/String\\;\\)Lgroovy\\/text\\/Template\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.groovy\\.GroovyMarkupConfigurer\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.groovy\\.GroovyMarkupConfigurer\\.createTemplateEngine\\:\\(\\)Lgroovy\\/text\\/markup\\/MarkupTemplateEngine\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.groovy\\.GroovyMarkupConfigurer\\.createTemplateClassLoader\\:\\(\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.groovy\\.GroovyMarkupConfigurer\\.resolveTemplate\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.view\\.groovy\\.GroovyMarkupConfigurer\\$LocaleTemplateResolver\\.resolveTemplate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.web\\.servlet\\.View\\.render\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.aopalliance\\.intercept\\.ConstructorInterceptor\\.construct\\:\\(Lorg\\/aopalliance\\/intercept\\/ConstructorInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.aopalliance\\.intercept\\.MethodInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.aopalliance\\.intercept\\.Joinpoint\\.proceed\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.config\\.MethodLocatingFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.config\\.MethodLocatingFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.AfterReturningAdvice\\.afterReturning\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.DefaultIntroductionAdvisor\\.validateInterfaces\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.IntroductionInfoSupport\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.DelegatingIntroductionInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.DelegatingIntroductionInterceptor\\.doProceed\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.DelegatePerTargetObjectIntroductionInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.DelegatePerTargetObjectIntroductionInterceptor\\.doProceed\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.AbstractBeanFactoryPointcutAdvisor\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.AopUtils\\.invokeJoinpointUsingReflection\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.regex.PatternSyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.JdkRegexpMethodPointcut\\.initPatternRepresentation\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.regex.PatternSyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.JdkRegexpMethodPointcut\\.initExcludedPatternRepresentation\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.regex.PatternSyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.JdkRegexpMethodPointcut\\.compilePatterns\\:\\(\\[Ljava\\/lang\\/String\\;\\)\\[Ljava\\/util\\/regex\\/Pattern\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.AbstractRegexpMethodPointcut\\.initPatternRepresentation\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.AbstractRegexpMethodPointcut\\.initExcludedPatternRepresentation\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.support\\.AbstractExpressionPointcut\\.onSetExpression\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.TargetSource\\.getTarget\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.TargetSource\\.releaseTarget\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.IntroductionAdvisor\\.validateInterfaces\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AspectJMethodBeforeAdvice\\.before\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AspectJAfterAdvice\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.annotation\\.AspectMetadata\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.annotation\\.AbstractAspectJAdvisorFactory\\.validate\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.annotation\\.AspectJAdvisorFactory\\.validate\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.annotation\\.InstantiationModelAwarePointcutAdvisorImpl\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AspectJAroundAdvice\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AspectJExpressionPointcut\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AspectJAfterReturningAdvice\\.afterReturning\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.MethodInvocationProceedingJoinPoint\\.proceed\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.MethodInvocationProceedingJoinPoint\\.proceed\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AbstractAspectJAdvice\\.invokeAdviceMethod\\:\\(Lorg\\/aspectj\\/weaver\\/tools\\/JoinPointMatch\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AbstractAspectJAdvice\\.invokeAdviceMethod\\:\\(Lorg\\/aspectj\\/lang\\/JoinPoint\\;Lorg\\/aspectj\\/weaver\\/tools\\/JoinPointMatch\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AbstractAspectJAdvice\\.invokeAdviceMethodWithGivenArgs\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AbstractAspectJAdvice\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AspectJAfterThrowingAdvice\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.aspectj.bridge.AbortException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.aspectj\\.AspectJWeaverMessageHandler\\.handleMessage\\:\\(Lorg\\/aspectj\\/bridge\\/IMessage\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.DebugInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.AbstractTraceInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.AbstractTraceInterceptor\\.invokeUnderTrace\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Lorg\\/apache\\/commons\\/logging\\/Log\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.ConcurrencyThrottleInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.ExposeBeanNameAdvisors\\$ExposeBeanNameInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.PerformanceMonitorInterceptor\\.invokeUnderTrace\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Lorg\\/apache\\/commons\\/logging\\/Log\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.ExposeBeanNameAdvisors\\.getBeanName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.ExposeBeanNameAdvisors\\.getBeanName\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.CustomizableTraceInterceptor\\.setEnterMessage\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.CustomizableTraceInterceptor\\.invokeUnderTrace\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Lorg\\/apache\\/commons\\/logging\\/Log\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.CustomizableTraceInterceptor\\.checkForInvalidPlaceholders\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.JamonPerformanceMonitorInterceptor\\.invokeUnderTrace\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Lorg\\/apache\\/commons\\/logging\\/Log\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.SimpleTraceInterceptor\\.invokeUnderTrace\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Lorg\\/apache\\/commons\\/logging\\/Log\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.ExposeInvocationInterceptor\\.currentInvocation\\:\\(\\)Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.ExposeInvocationInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.interceptor\\.ExposeBeanNameAdvisors\\$ExposeBeanNameIntroduction\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.AopContext\\.currentProxy\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.Advised\\.addAdvisor\\:\\(Lorg\\/springframework\\/aop\\/Advisor\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.Advised\\.addAdvisor\\:\\(ILorg\\/springframework\\/aop\\/Advisor\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.Advised\\.removeAdvisor\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.Advised\\.replaceAdvisor\\:\\(Lorg\\/springframework\\/aop\\/Advisor\\;Lorg\\/springframework\\/aop\\/Advisor\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.Advised\\.addAdvice\\:\\(Lorg\\/aopalliance\\/aop\\/Advice\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.Advised\\.addAdvice\\:\\(ILorg\\/aopalliance\\/aop\\/Advice\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.AdvisedSupport\\.addAdvisor\\:\\(ILorg\\/springframework\\/aop\\/Advisor\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.AdvisedSupport\\.removeAdvisor\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.AdvisedSupport\\.replaceAdvisor\\:\\(Lorg\\/springframework\\/aop\\/Advisor\\;Lorg\\/springframework\\/aop\\/Advisor\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.AdvisedSupport\\.addAdvisorInternal\\:\\(ILorg\\/springframework\\/aop\\/Advisor\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.AdvisedSupport\\.addAdvice\\:\\(Lorg\\/aopalliance\\/aop\\/Advice\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.AdvisedSupport\\.addAdvice\\:\\(ILorg\\/aopalliance\\/aop\\/Advice\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.AdvisedSupport\\.removeAdvice\\:\\(Lorg\\/aopalliance\\/aop\\/Advice\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.AdvisedSupport\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.AopProxyFactory\\.createAopProxy\\:\\(Lorg\\/springframework\\/aop\\/framework\\/AdvisedSupport\\;\\)Lorg\\/springframework\\/aop\\/framework\\/AopProxy\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.autoproxy\\.AbstractAutoProxyCreator\\.determineCandidateConstructors\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.autoproxy\\.AbstractAutoProxyCreator\\.getEarlyBeanReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.autoproxy\\.AbstractAutoProxyCreator\\.postProcessBeforeInstantiation\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.autoproxy\\.AbstractAutoProxyCreator\\.postProcessAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.autoproxy\\.AbstractAutoProxyCreator\\.getAdvicesAndAdvisorsForBean\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/aop\\/TargetSource\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.ReflectiveMethodInvocation\\.proceed\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.ReflectiveMethodInvocation\\.invokeJoinpoint\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.adapter.UnknownAdviceTypeException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.adapter\\.DefaultAdvisorAdapterRegistry\\.wrap\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/aop\\/Advisor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.adapter.UnknownAdviceTypeException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.adapter\\.DefaultAdvisorAdapterRegistry\\.getInterceptors\\:\\(Lorg\\/springframework\\/aop\\/Advisor\\;\\)\\[Lorg\\/aopalliance\\/intercept\\/MethodInterceptor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.adapter\\.AfterReturningAdviceInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.adapter\\.AdvisorAdapterRegistrationManager\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.adapter\\.AdvisorAdapterRegistrationManager\\.postProcessAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.adapter\\.MethodBeforeAdviceInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.adapter.UnknownAdviceTypeException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.adapter\\.AdvisorAdapterRegistry\\.wrap\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/aop\\/Advisor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.adapter.UnknownAdviceTypeException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.adapter\\.AdvisorAdapterRegistry\\.getInterceptors\\:\\(Lorg\\/springframework\\/aop\\/Advisor\\;\\)\\[Lorg\\/aopalliance\\/intercept\\/MethodInterceptor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.adapter\\.ThrowsAdviceInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.adapter\\.ThrowsAdviceInterceptor\\.invokeHandlerMethod\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\$DynamicUnadvisedExposedInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/cglib\\/proxy\\/MethodProxy\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.ProxyFactoryBean\\.setProxyInterfaces\\:\\(\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.ProxyFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException", 
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.ProxyFactoryBean\\.initializeAdvisorChain\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.ProxyFactoryBean\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\$StaticUnadvisedInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/cglib\\/proxy\\/MethodProxy\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\$AdvisedDispatcher\\.loadObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\$ClassLoaderAwareUndeclaredThrowableStrategy\\.generate\\:\\(Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\$StaticUnadvisedExposedInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/cglib\\/proxy\\/MethodProxy\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\$FixedChainStaticTargetInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/cglib\\/proxy\\/MethodProxy\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\$DynamicUnadvisedInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/cglib\\/proxy\\/MethodProxy\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.DefaultAopProxyFactory\\.createAopProxy\\:\\(Lorg\\/springframework\\/aop\\/framework\\/AdvisedSupport\\;\\)Lorg\\/springframework\\/aop\\/framework\\/AopProxy\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\$CglibMethodInvocation\\.invokeJoinpoint\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\$DynamicAdvisedInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/cglib\\/proxy\\/MethodProxy\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\.\\<init\\>\\:\\(Lorg\\/springframework\\/aop\\/framework\\/AdvisedSupport\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.CglibAopProxy\\.getCallbacks\\:\\(Ljava\\/lang\\/Class\\;\\)\\[Lorg\\/springframework\\/cglib\\/proxy\\/Callback\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.aop.framework.AopConfigException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.JdkDynamicAopProxy\\.\\<init\\>\\:\\(Lorg\\/springframework\\/aop\\/framework\\/AdvisedSupport\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.framework\\.JdkDynamicAopProxy\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.PoolingConfig\\.getActiveCount\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.PoolingConfig\\.getIdleCount\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.SimpleBeanTargetSource\\.getTarget\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.CommonsPool2TargetSource\\.getTarget\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.CommonsPool2TargetSource\\.releaseTarget\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.CommonsPool2TargetSource\\.getActiveCount\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.CommonsPool2TargetSource\\.getIdleCount\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.CommonsPool2TargetSource\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.CommonsPool2TargetSource\\.makeObject\\:\\(\\)Lorg\\/apache\\/commons\\/pool2\\/PooledObject\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.CommonsPool2TargetSource\\.destroyObject\\:\\(Lorg\\/apache\\/commons\\/pool2\\/PooledObject\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.CommonsPool2TargetSource\\.activateObject\\:\\(Lorg\\/apache\\/commons\\/pool2\\/PooledObject\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.CommonsPool2TargetSource\\.passivateObject\\:\\(Lorg\\/apache\\/commons\\/pool2\\/PooledObject\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.ThreadLocalTargetSource\\.getTarget\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.LazyInitTargetSource\\.getTarget\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractBeanFactoryBasedTargetSource\\.releaseTarget\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractPoolingTargetSource\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractPoolingTargetSource\\.createPool\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractPoolingTargetSource\\.getTarget\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractPoolingTargetSource\\.releaseTarget\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractPrototypeBasedTargetSource\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractPrototypeBasedTargetSource\\.newPrototypeInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractPrototypeBasedTargetSource\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractPrototypeBasedTargetSource\\.writeReplace\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.PrototypeTargetSource\\.getTarget\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.HotSwappableTargetSource\\.swap\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractLazyCreationTargetSource\\.getTarget\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractLazyCreationTargetSource\\.releaseTarget\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.target\\.AbstractLazyCreationTargetSource\\.createObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.aop\\.MethodBeforeAdvice\\.before\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.instrument\\.classloading\\.ResourceOverridingShadowingClassLoader\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.instrument\\.classloading\\.weblogic\\.WebLogicClassPreProcessorAdapter\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.IllegalClassFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.instrument\\.classloading\\.InstrumentationLoadTimeWeaver\\$FilteringClassFileTransformer\\.transform\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.instrument\\.classloading\\.websphere\\.WebSphereClassPreDefinePlugin\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.instrument\\.classloading\\.websphere\\.WebSphereClassPreDefinePlugin\\.transform\\:\\(Ljava\\/lang\\/String\\;\\[BLjava\\/security\\/CodeSource\\;Ljava\\/lang\\/ClassLoader\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.instrument\\.classloading\\.ShadowingClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.instrument\\.classloading\\.ShadowingClassLoader\\.doLoadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.instrument\\.classloading\\.ShadowingClassLoader\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.config\\.TaskExecutorFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.support\\.ScheduledMethodRunnable\\.\\<init\\>\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.support\\.CronSequenceGenerator\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.support\\.MethodInvokingRunnable\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.support\\.MethodInvokingRunnable\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.annotation\\.AsyncResult\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.annotation\\.AsyncResult\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.concurrent\\.ScheduledExecutorFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.concurrent\\.ThreadPoolTaskScheduler\\$DelegatingErrorHandlingCallable\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.concurrent\\.DefaultManagedTaskScheduler\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.concurrent\\.ReschedulingRunnable\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.concurrent\\.ReschedulingRunnable\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.concurrent\\.ThreadPoolTaskExecutor\\.getThreadPoolExecutor\\:\\(\\)Ljava\\/util\\/concurrent\\/ThreadPoolExecutor\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.concurrent\\.DefaultManagedTaskExecutor\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.concurrent\\.ThreadPoolExecutorFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.concurrent\\.DefaultManagedAwareThreadFactory\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.scheduling\\.concurrent\\.ForkJoinPoolFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.MissingResourceException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ResourceBundleMessageSource\\.doGetBundle\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/util\\/ResourceBundle\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ResourceBundleMessageSource\\.loadBundle\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/util\\/ResourceBundle\\;"
 }, 
 {
  "exceptions": [
   "java.util.MissingResourceException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ResourceBundleMessageSource\\.getMessageFormat\\:\\(Ljava\\/util\\/ResourceBundle\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/text\\/MessageFormat\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ContextTypeMatchClassLoader\\$ContextOverridingClassLoader\\.loadClassForOverriding\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ApplicationObjectSupport\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ApplicationObjectSupport\\.initApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ApplicationObjectSupport\\.initApplicationContext\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ApplicationObjectSupport\\.getApplicationContext\\:\\(\\)Lorg\\/springframework\\/context\\/ApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ApplicationObjectSupport\\.getMessageSourceAccessor\\:\\(\\)Lorg\\/springframework\\/context\\/support\\/MessageSourceAccessor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.StaticApplicationContext\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.StaticApplicationContext\\.\\<init\\>\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.StaticApplicationContext\\.registerSingleton\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.StaticApplicationContext\\.registerSingleton\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/beans\\/MutablePropertyValues\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.StaticApplicationContext\\.registerPrototype\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.StaticApplicationContext\\.registerPrototype\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/beans\\/MutablePropertyValues\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.FileSystemXmlApplicationContext\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.FileSystemXmlApplicationContext\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.FileSystemXmlApplicationContext\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.FileSystemXmlApplicationContext\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.FileSystemXmlApplicationContext\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;ZLorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.AbstractXmlApplicationContext\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/DefaultListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.AbstractXmlApplicationContext\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/beans\\/factory\\/xml\\/XmlBeanDefinitionReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.DelegatingMessageSource\\.getMessage\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.DelegatingMessageSource\\.getMessage\\:\\(Lorg\\/springframework\\/context\\/MessageSourceResolvable\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.AbstractMessageSource\\.getMessage\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.AbstractMessageSource\\.getMessage\\:\\(Lorg\\/springframework\\/context\\/MessageSourceResolvable\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ConversionServiceFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ClassPathXmlApplicationContext\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ClassPathXmlApplicationContext\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ClassPathXmlApplicationContext\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ClassPathXmlApplicationContext\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ClassPathXmlApplicationContext\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;ZLorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ClassPathXmlApplicationContext\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ClassPathXmlApplicationContext\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ClassPathXmlApplicationContext\\.\\<init\\>\\:\\(\\[Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ContextTypeMatchClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.MessageSourceAccessor\\.getMessage\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.MessageSourceAccessor\\.getMessage\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.MessageSourceAccessor\\.getMessage\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.MessageSourceAccessor\\.getMessage\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.MessageSourceAccessor\\.getMessage\\:\\(Lorg\\/springframework\\/context\\/MessageSourceResolvable\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.MessageSourceAccessor\\.getMessage\\:\\(Lorg\\/springframework\\/context\\/MessageSourceResolvable\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.AbstractRefreshableApplicationContext\\.refreshBeanFactory\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.AbstractRefreshableApplicationContext\\.loadBeanDefinitions\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/DefaultListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.ReloadableResourceBundleMessageSource\\.loadProperties\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.GenericApplicationContext\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)\\[Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.GenericApplicationContext\\.refreshBeanFactory\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.GenericApplicationContext\\.getAutowireCapableBeanFactory\\:\\(\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/AutowireCapableBeanFactory\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.BeanDefinitionStoreException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.GenericApplicationContext\\.registerBeanDefinition\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.GenericApplicationContext\\.removeBeanDefinition\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.support\\.GenericApplicationContext\\.getBeanDefinition\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ComponentScanBeanDefinitionParser\\.createTypeFilter\\:\\(Lorg\\/w3c\\/dom\\/Element\\;Ljava\\/lang\\/ClassLoader\\;Lorg\\/springframework\\/beans\\/factory\\/xml\\/ParserContext\\;\\)Lorg\\/springframework\\/core\\/type\\/filter\\/TypeFilter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ClassPathBeanDefinitionScanner\\.checkCandidate\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanDefinition\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassParser\\$SourceClass\\.loadClass\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassParser\\$SourceClass\\.isAssignable\\:\\(Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassParser\\$SourceClass\\.asConfigClass\\:\\(Lorg\\/springframework\\/context\\/annotation\\/ConfigurationClass\\;\\)Lorg\\/springframework\\/context\\/annotation\\/ConfigurationClass\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassParser\\$SourceClass\\.getMemberClasses\\:\\(\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassParser\\$SourceClass\\.getSuperClass\\:\\(\\)Lorg\\/springframework\\/context\\/annotation\\/ConfigurationClassParser\\$SourceClass\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassParser\\$SourceClass\\.getInterfaces\\:\\(\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassParser\\$SourceClass\\.getAnnotations\\:\\(\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassParser\\$SourceClass\\.getAnnotationAttributes\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassParser\\$SourceClass\\.getRelated\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/context\\/annotation\\/ConfigurationClassParser\\$SourceClass\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassEnhancer\\$BeanFactoryAwareGeneratorStrategy\\.transform\\:\\(Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;\\)Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassEnhancer\\$BeanFactoryAwareGeneratorStrategy\\.generate\\:\\(Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ConfigurationClassEnhancer\\$BeanFactoryAwareMethodInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/cglib\\/proxy\\/MethodProxy\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.annotation\\.ClassPathScanningCandidateComponentProvider\\.isCandidateComponent\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.weaving\\.LoadTimeWeaverAwareProcessor\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.IllegalClassFormatException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.weaving\\.AspectJWeavingEnabler\\$AspectJClassBypassingClassFileTransformer\\.transform\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.weaving\\.AspectJWeavingEnabler\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.event\\.EventPublicationInterceptor\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.event\\.EventPublicationInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.ConfigurableApplicationContext\\.refresh\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.ConfigurableApplicationContext\\.getBeanFactory\\:\\(\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.ApplicationContext\\.getAutowireCapableBeanFactory\\:\\(\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/AutowireCapableBeanFactory\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.MessageSource\\.getMessage\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.MessageSource\\.getMessage\\:\\(Lorg\\/springframework\\/context\\/MessageSourceResolvable\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.MapAccessor\\.canRead\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.MapAccessor\\.read\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.MapAccessor\\.canWrite\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.MapAccessor\\.write\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.EnvironmentAccessor\\.canRead\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.EnvironmentAccessor\\.read\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.EnvironmentAccessor\\.canWrite\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.EnvironmentAccessor\\.write\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.BeanFactoryResolver\\.resolve\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.BeanExpressionContextAccessor\\.canRead\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.BeanExpressionContextAccessor\\.read\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.BeanExpressionContextAccessor\\.canWrite\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.BeanExpressionContextAccessor\\.write\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.BeanFactoryAccessor\\.canRead\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.BeanFactoryAccessor\\.read\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.BeanFactoryAccessor\\.canWrite\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.BeanFactoryAccessor\\.write\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.expression\\.StandardBeanExpressionResolver\\.evaluate\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/beans\\/factory\\/config\\/BeanExpressionContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.context\\.ApplicationContextAware\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiObjectLocator\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiObjectLocator\\.lookup\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.getBean\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.getBean\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.getBean\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.getBean\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.getBean\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.isSingleton\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.isPrototype\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.isTypeMatch\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.isTypeMatch\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.getType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.doGetSingleton\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.support\\.SimpleJndiBeanFactory\\.doGetType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiObjectFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiObjectFactoryBean\\.lookupWithFallback\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiTemplateEditor\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiLocatorDelegate\\.lookup\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiLocatorDelegate\\.lookup\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiLocatorSupport\\.lookup\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiLocatorSupport\\.lookup\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiObjectTargetSource\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiCallback\\.doInContext\\:\\(Ljavax\\/naming\\/Context\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiObjectFactoryBean\\$JndiContextExposingInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiObjectFactoryBean\\$JndiObjectProxyFactory\\.createJndiObjectProxy\\:\\(Lorg\\/springframework\\/jndi\\/JndiObjectFactoryBean\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.jndi\\.JndiObjectFactoryBean\\$JndiObjectProxyFactory\\.access\\$000\\:\\(Lorg\\/springframework\\/jndi\\/JndiObjectFactoryBean\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.support\\.RemoteInvocationResult\\.recreate\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.support\\.RemoteInvocationBasedAccessor\\.recreateRemoteInvocationResult\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.support\\.RemoteInvocationExecutor\\.invoke\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.support\\.RemoteInvocationTraceInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.support\\.RemoteInvocationBasedExporter\\.invoke\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.support\\.RemoteInvocation\\.addAttribute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/Serializable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.support\\.RemoteInvocation\\.invoke\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.support\\.RemoteExporter\\.checkService\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.support\\.RemoteExporter\\.checkServiceInterface\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.support\\.DefaultRemoteInvocationExecutor\\.invoke\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.remoting.RemoteLookupFailureException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiClientInterceptor\\.prepare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.remoting.RemoteLookupFailureException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiClientInterceptor\\.lookupStub\\:\\(\\)Ljava\\/rmi\\/Remote\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.remoting.RemoteLookupFailureException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiClientInterceptor\\.getStub\\:\\(\\)Ljava\\/rmi\\/Remote\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiClientInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiClientInterceptor\\.handleRemoteConnectFailure\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiClientInterceptor\\.refreshAndRetry\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiClientInterceptor\\.doInvoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Ljava\\/rmi\\/Remote\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiClientInterceptor\\.doInvoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Lorg\\/springframework\\/remoting\\/rmi\\/RmiInvocationHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiClientInterceptor\\$DummyURLStreamHandler\\.openConnection\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiInvocationHandler\\.getTargetInterfaceName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiInvocationHandler\\.invoke\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiRegistryFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiRegistryFactoryBean\\.getRegistry\\:\\(Ljava\\/lang\\/String\\;ILjava\\/rmi\\/server\\/RMIClientSocketFactory\\;Ljava\\/rmi\\/server\\/RMIServerSocketFactory\\;\\)Ljava\\/rmi\\/registry\\/Registry\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiRegistryFactoryBean\\.getRegistry\\:\\(ILjava\\/rmi\\/server\\/RMIClientSocketFactory\\;Ljava\\/rmi\\/server\\/RMIServerSocketFactory\\;\\)Ljava\\/rmi\\/registry\\/Registry\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiRegistryFactoryBean\\.getRegistry\\:\\(I\\)Ljava\\/rmi\\/registry\\/Registry\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiRegistryFactoryBean\\.testRegistry\\:\\(Ljava\\/rmi\\/registry\\/Registry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiRegistryFactoryBean\\.getObject\\:\\(\\)Ljava\\/rmi\\/registry\\/Registry\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiRegistryFactoryBean\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiRegistryFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiServiceExporter\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiServiceExporter\\.prepare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiServiceExporter\\.getRegistry\\:\\(Ljava\\/lang\\/String\\;ILjava\\/rmi\\/server\\/RMIClientSocketFactory\\;Ljava\\/rmi\\/server\\/RMIServerSocketFactory\\;\\)Ljava\\/rmi\\/registry\\/Registry\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiServiceExporter\\.getRegistry\\:\\(ILjava\\/rmi\\/server\\/RMIClientSocketFactory\\;Ljava\\/rmi\\/server\\/RMIServerSocketFactory\\;\\)Ljava\\/rmi\\/registry\\/Registry\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiServiceExporter\\.getRegistry\\:\\(I\\)Ljava\\/rmi\\/registry\\/Registry\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiServiceExporter\\.testRegistry\\:\\(Ljava\\/rmi\\/registry\\/Registry\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiServiceExporter\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RemoteInvocationSerializingExporter\\.createObjectInputStream\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/ObjectInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RemoteInvocationSerializingExporter\\.doReadRemoteInvocation\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RemoteInvocationSerializingExporter\\.createObjectOutputStream\\:\\(Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/ObjectOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RemoteInvocationSerializingExporter\\.doWriteRemoteInvocationResult\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocationResult\\;Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiServiceExporter\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiServiceExporter\\.prepare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiServiceExporter\\.rebind\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiServiceExporter\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiServiceExporter\\.invokePortableRemoteObject\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.CodebaseAwareObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.CodebaseAwareObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.CodebaseAwareObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/ClassLoader\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.CodebaseAwareObjectInputStream\\.resolveFallbackIfPossible\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassNotFoundException\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.CodebaseAwareObjectInputStream\\.getFallbackClassLoader\\:\\(\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiClientInterceptor\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.remoting.RemoteLookupFailureException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiClientInterceptor\\.prepare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.remoting.RemoteLookupFailureException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiClientInterceptor\\.lookupStub\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "org.springframework.remoting.RemoteLookupFailureException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiClientInterceptor\\.getStub\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiClientInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiClientInterceptor\\.handleRemoteConnectFailure\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiClientInterceptor\\.refreshAndRetry\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiClientInterceptor\\.doInvoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiClientInterceptor\\.doInvoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Lorg\\/springframework\\/remoting\\/rmi\\/RmiInvocationHandler\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiBasedExporter\\.invoke\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.rmi.RemoteException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiInvocationWrapper\\.invoke\\:\\(Lorg\\/springframework\\/remoting\\/support\\/RemoteInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.JndiRmiProxyFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.remoting\\.rmi\\.RmiClientInterceptorUtils\\.invokeRemoteMethod\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.support\\.ResourceScriptSource\\.getScriptAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.support\\.StandardScriptFactory\\.getScriptedObject\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.support\\.StandardScriptFactory\\.getScriptedObjectType\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.ScriptFactory\\.getScriptedObject\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.ScriptFactory\\.getScriptedObjectType\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.bsh\\.BshScriptFactory\\.getScriptedObject\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.bsh\\.BshScriptFactory\\.getScriptedObjectType\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.bsh\\.BshScriptUtils\\$BshObjectInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "bsh.EvalError"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.bsh\\.BshScriptUtils\\.createBshObject\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "bsh.EvalError"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.bsh\\.BshScriptUtils\\.createBshObject\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "bsh.EvalError"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.bsh\\.BshScriptUtils\\.createBshObject\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "bsh.EvalError"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.bsh\\.BshScriptUtils\\.determineBshObjectType\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "bsh.EvalError"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.bsh\\.BshScriptUtils\\.evaluateBshScript\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.ScriptEvaluator\\.evaluate\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.ScriptEvaluator\\.evaluate\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.ScriptSource\\.getScriptAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.groovy\\.GroovyScriptFactory\\.getScriptedObject\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.groovy\\.GroovyScriptFactory\\.getScriptedObjectType\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.scripting.ScriptCompilationException"
  ], 
  "methodRegex": "org\\.springframework\\.scripting\\.groovy\\.GroovyScriptFactory\\.executeScript\\:\\(Lorg\\/springframework\\/scripting\\/ScriptSource\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.validation\\.Errors\\.popNestedPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.validation\\.DataBinder\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.validation\\.DataBinder\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/core\\/MethodParameter\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.TypeMismatchException"
  ], 
  "methodRegex": "org\\.springframework\\.validation\\.DataBinder\\.convertIfNecessary\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/reflect\\/Field\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.validation.BindException"
  ], 
  "methodRegex": "org\\.springframework\\.validation\\.DataBinder\\.close\\:\\(\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.validation\\.beanvalidation\\.MethodValidationInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.validation\\.beanvalidation\\.BeanValidationPostProcessor\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.validation\\.beanvalidation\\.BeanValidationPostProcessor\\.postProcessAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.validation\\.BindException\\.popNestedPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.validation\\.AbstractErrors\\.popNestedPath\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.MBeanServerNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.WebSphereMBeanServerFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.WebSphereMBeanServerFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.NotificationListenerHolder\\.getResolvedObjectNames\\:\\(\\)\\[Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanServerConnectionFactoryBean\\.setServiceUrl\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanServerConnectionFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanServerConnectionFactoryBean\\.connect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanServerConnectionFactoryBean\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanServerConnectionFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.ObjectNameManager\\.getInstance\\:\\(Ljava\\/lang\\/Object\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.ObjectNameManager\\.getInstance\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.ObjectNameManager\\.getInstance\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.ObjectNameManager\\.getInstance\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Hashtable\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.MBeanServerNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanServerFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.MBeanServerNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanServerFactoryBean\\.locateMBeanServer\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/MBeanServer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanServerFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanServerConnectionFactoryBean\\$MBeanServerConnectionLazyInitTargetSource\\.createObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.MBeanServerNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.JmxUtils\\.locateMBeanServer\\:\\(\\)Ljavax\\/management\\/MBeanServer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.MBeanServerNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.JmxUtils\\.locateMBeanServer\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/MBeanServer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.JmxUtils\\.parameterInfoToTypes\\:\\(\\[Ljavax\\/management\\/MBeanParameterInfo\\;\\)\\[Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.JmxUtils\\.parameterInfoToTypes\\:\\(\\[Ljavax\\/management\\/MBeanParameterInfo\\;Ljava\\/lang\\/ClassLoader\\;\\)\\[Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.JmxUtils\\.appendIdentityToObjectName\\:\\(Ljavax\\/management\\/ObjectName\\;Ljava\\/lang\\/Object\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanRegistrationSupport\\.doRegister\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/management\\/ObjectName\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.MBeanServerConnectionFactoryBean\\$JMXConnectorLazyInitTargetSource\\.createObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.ConnectorServerFactoryBean\\.setObjectName\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.JMException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.ConnectorServerFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.ConnectorServerFactoryBean\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.support\\.ConnectorServerFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.MBeanExportException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.MBeanExportOperations\\.registerManagedResource\\:\\(Ljava\\/lang\\/Object\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.MBeanExportException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.MBeanExportOperations\\.registerManagedResource\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/management\\/ObjectName\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.metadata\\.JmxAttributeSource\\.getManagedResource\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedResource\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.metadata\\.JmxAttributeSource\\.getManagedAttribute\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedAttribute\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.metadata\\.JmxAttributeSource\\.getManagedMetric\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedMetric\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.metadata\\.JmxAttributeSource\\.getManagedOperation\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedOperation\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.metadata\\.JmxAttributeSource\\.getManagedOperationParameters\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)\\[Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedOperationParameter\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.metadata\\.JmxAttributeSource\\.getManagedNotifications\\:\\(Ljava\\/lang\\/Class\\;\\)\\[Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedNotification\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.annotation\\.AnnotationJmxAttributeSource\\.getManagedResource\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedResource\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.annotation\\.AnnotationJmxAttributeSource\\.getManagedAttribute\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedAttribute\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.annotation\\.AnnotationJmxAttributeSource\\.getManagedMetric\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedMetric\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.annotation\\.AnnotationJmxAttributeSource\\.getManagedOperation\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedOperation\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.annotation\\.AnnotationJmxAttributeSource\\.getManagedOperationParameters\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)\\[Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedOperationParameter\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.metadata.InvalidMetadataException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.annotation\\.AnnotationJmxAttributeSource\\.getManagedNotifications\\:\\(Ljava\\/lang\\/Class\\;\\)\\[Lorg\\/springframework\\/jmx\\/export\\/metadata\\/ManagedNotification\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.AbstractMBeanInfoAssembler\\.getMBeanInfo\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/modelmbean\\/ModelMBeanInfo\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.AbstractMBeanInfoAssembler\\.checkManagedBean\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.AbstractMBeanInfoAssembler\\.getClassName\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.AbstractMBeanInfoAssembler\\.getDescription\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.AbstractMBeanInfoAssembler\\.populateMBeanDescriptor\\:\\(Ljavax\\/management\\/Descriptor\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.AbstractMBeanInfoAssembler\\.getConstructorInfo\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)\\[Ljavax\\/management\\/modelmbean\\/ModelMBeanConstructorInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.AbstractMBeanInfoAssembler\\.getNotificationInfo\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)\\[Ljavax\\/management\\/modelmbean\\/ModelMBeanNotificationInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.AbstractMBeanInfoAssembler\\.getAttributeInfo\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)\\[Ljavax\\/management\\/modelmbean\\/ModelMBeanAttributeInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.AbstractMBeanInfoAssembler\\.getOperationInfo\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)\\[Ljavax\\/management\\/modelmbean\\/ModelMBeanOperationInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.AbstractReflectiveMBeanInfoAssembler\\.getAttributeInfo\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)\\[Ljavax\\/management\\/modelmbean\\/ModelMBeanAttributeInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.MBeanInfoAssembler\\.getMBeanInfo\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/modelmbean\\/ModelMBeanInfo\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.assembler\\.MetadataMBeanInfoAssembler\\.checkManagedBean\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.naming\\.SelfNaming\\.getObjectName\\:\\(\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.naming\\.IdentityNamingStrategy\\.getObjectName\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.naming\\.KeyNamingStrategy\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.naming\\.KeyNamingStrategy\\.getObjectName\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.naming\\.ObjectNamingStrategy\\.getObjectName\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.naming\\.MetadataNamingStrategy\\.getObjectName\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.export.notification.UnableToSendNotificationException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.notification\\.NotificationPublisher\\.sendNotification\\:\\(Ljavax\\/management\\/Notification\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException", 
   "javax.management.RuntimeOperationsException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.SpringModelMBean\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException", 
   "javax.management.RuntimeOperationsException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.SpringModelMBean\\.\\<init\\>\\:\\(Ljavax\\/management\\/modelmbean\\/ModelMBeanInfo\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException", 
   "javax.management.InstanceNotFoundException", 
   "javax.management.modelmbean.InvalidTargetObjectTypeException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.SpringModelMBean\\.setManagedResource\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.SpringModelMBean\\.invoke\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.SpringModelMBean\\.getAttribute\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.InvalidAttributeValueException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.export\\.SpringModelMBean\\.setAttribute\\:\\(Ljavax\\/management\\/Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.MBeanServerNotFoundException", 
   "org.springframework.jmx.access.MBeanInfoRetrievalException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanProxyFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.NotificationListenerRegistrar\\.setServiceUrl\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanClientInterceptor\\.setServiceUrl\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanClientInterceptor\\.setObjectName\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.access.MBeanInfoRetrievalException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanClientInterceptor\\.retrieveMBeanInfo\\:\\(Ljavax\\/management\\/MBeanServerConnection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanClientInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanClientInterceptor\\.handleConnectFailure\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanClientInterceptor\\.doInvoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanClientInterceptor\\.invokeAttribute\\:\\(Ljava\\/beans\\/PropertyDescriptor\\;Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.JMException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanClientInterceptor\\.invokeOperation\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanClientInterceptor\\.convertDataArrayToTargetArray\\:\\(\\[Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.MBeanClientInterceptor\\.convertDataArrayToTargetCollection\\:\\(\\[Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.jmx.MBeanServerNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.jmx\\.access\\.ConnectorDelegate\\.connect\\:\\(Ljavax\\/management\\/remote\\/JMXServiceURL\\;Ljava\\/util\\/Map\\;Ljava\\/lang\\/String\\;\\)Ljavax\\/management\\/MBeanServerConnection\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.cache.interceptor.CacheOperationInvoker$ThrowableWrapper"
  ], 
  "methodRegex": "org\\.springframework\\.cache\\.interceptor\\.CacheOperationInvoker\\.invoke\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cache\\.concurrent\\.ConcurrentMapCacheFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.support\\.FormattingConversionServiceFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.support\\.FormatterPropertyEditorAdapter\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.LocalDateParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/joda\\/time\\/LocalDate\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.LocalDateParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.DurationFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/joda\\/time\\/Duration\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.DurationFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.MonthDayFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/joda\\/time\\/MonthDay\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.MonthDayFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.PeriodFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/joda\\/time\\/Period\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.PeriodFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.DateTimeParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/joda\\/time\\/DateTime\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.DateTimeParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.YearMonthFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/joda\\/time\\/YearMonth\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.YearMonthFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.LocalTimeParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/joda\\/time\\/LocalTime\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.LocalTimeParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.LocalDateTimeParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Lorg\\/joda\\/time\\/LocalDateTime\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.LocalDateTimeParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.joda\\.DateTimeFormatterFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.MonthFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/time\\/Month\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.MonthFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.DurationFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/time\\/Duration\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.DurationFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.MonthDayFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/time\\/MonthDay\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.MonthDayFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.PeriodFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/time\\/Period\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.PeriodFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.InstantFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/time\\/Instant\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.InstantFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.YearMonthFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/time\\/YearMonth\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.YearMonthFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.YearFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/time\\/Year\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.YearFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.TemporalAccessorParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/time\\/temporal\\/TemporalAccessor\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.TemporalAccessorParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.standard\\.DateTimeFormatterFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.DateFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.datetime\\.DateFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.Parser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.AbstractNumberFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.AbstractNumberFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.money\\.Jsr354NumberFormatAnnotationFormatterFactory\\$NumberDecoratingFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljavax\\/money\\/MonetaryAmount\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.money\\.Jsr354NumberFormatAnnotationFormatterFactory\\$NumberDecoratingFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.money\\.CurrencyUnitFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.money\\.MonetaryAmountFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.money\\.Jsr354NumberFormatAnnotationFormatterFactory\\$PatternDecoratingFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljavax\\/money\\/MonetaryAmount\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.money\\.Jsr354NumberFormatAnnotationFormatterFactory\\$PatternDecoratingFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.CurrencyStyleFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/math\\/BigDecimal\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.CurrencyStyleFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.format\\.number\\.CurrencyStyleFormatter\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractSlsbInvokerInterceptor\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractSlsbInvokerInterceptor\\.refreshHome\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.ejb.access.EjbAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractSlsbInvokerInterceptor\\.getCreateMethod\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractSlsbInvokerInterceptor\\.getHome\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractSlsbInvokerInterceptor\\.invoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractSlsbInvokerInterceptor\\.invokeInContext\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractSlsbInvokerInterceptor\\.create\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.SimpleRemoteStatelessSessionProxyFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.LocalStatelessSessionProxyFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.ejb.access.EjbAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractRemoteSlsbInvokerInterceptor\\.getCreateMethod\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractRemoteSlsbInvokerInterceptor\\.invokeInContext\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractRemoteSlsbInvokerInterceptor\\.handleRemoteConnectFailure\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;Ljava\\/lang\\/Exception\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractRemoteSlsbInvokerInterceptor\\.refreshAndRetry\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractRemoteSlsbInvokerInterceptor\\.doInvoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.AbstractRemoteSlsbInvokerInterceptor\\.newSessionBeanInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.LocalSlsbInvokerInterceptor\\.invokeInContext\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.ejb.access.EjbAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.LocalSlsbInvokerInterceptor\\.getCreateMethod\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.LocalSlsbInvokerInterceptor\\.getSessionBeanInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.LocalSlsbInvokerInterceptor\\.newSessionBeanInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.SimpleRemoteSlsbInvokerInterceptor\\.doInvoke\\:\\(Lorg\\/aopalliance\\/intercept\\/MethodInvocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.SimpleRemoteSlsbInvokerInterceptor\\.getSessionBeanInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.ejb\\.access\\.SimpleRemoteSlsbInvokerInterceptor\\.refreshHome\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.MethodExecutor\\.execute\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.ConstructorExecutor\\.execute\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.OperatorOverloader\\.overridesOperation\\:\\(Lorg\\/springframework\\/expression\\/Operation\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.OperatorOverloader\\.operate\\:\\(Lorg\\/springframework\\/expression\\/Operation\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValue\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValueType\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValueType\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValueTypeDescriptor\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValueTypeDescriptor\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.isWritable\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.LiteralExpression\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.TemplateAwareExpressionParser\\.parseExpression\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/Expression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.TemplateAwareExpressionParser\\.parseExpression\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/expression\\/ParserContext\\;\\)Lorg\\/springframework\\/expression\\/Expression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.TemplateAwareExpressionParser\\.parseTemplate\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/expression\\/ParserContext\\;\\)Lorg\\/springframework\\/expression\\/Expression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.TemplateAwareExpressionParser\\.parseExpressions\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/expression\\/ParserContext\\;\\)\\[Lorg\\/springframework\\/expression\\/Expression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.TemplateAwareExpressionParser\\.skipToCorrectEndSuffix\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.TemplateAwareExpressionParser\\.doParseExpression\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/expression\\/ParserContext\\;\\)Lorg\\/springframework\\/expression\\/Expression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValueType\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValueType\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValueTypeDescriptor\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValueTypeDescriptor\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.isWritable\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.common\\.CompositeStringExpression\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.TypeLocator\\.findType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValue\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValueType\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValueType\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValueType\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValueType\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValueTypeDescriptor\\:\\(\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValueTypeDescriptor\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValueTypeDescriptor\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.getValueTypeDescriptor\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.isWritable\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.Expression\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.ConstructorResolver\\.resolve\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;\\)Lorg\\/springframework\\/expression\\/ConstructorExecutor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.BeanResolver\\.resolve\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.TypeComparator\\.compare\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.ExpressionParser\\.parseExpression\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/Expression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.ExpressionParser\\.parseExpression\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/expression\\/ParserContext\\;\\)Lorg\\/springframework\\/expression\\/Expression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.StandardTypeComparator\\.compare\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.DataBindingMethodResolver\\.resolve\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;\\)Lorg\\/springframework\\/expression\\/MethodExecutor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.ReflectionHelper\\.convertAllArguments\\:\\(Lorg\\/springframework\\/expression\\/TypeConverter\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.ReflectionHelper\\.convertArguments\\:\\(Lorg\\/springframework\\/expression\\/TypeConverter\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Executable\\;Ljava\\/lang\\/Integer\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.ReflectiveMethodExecutor\\.execute\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.StandardEvaluationContext\\.registerMethodFilter\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/expression\\/MethodFilter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.ReflectiveConstructorExecutor\\.execute\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.StandardOperatorOverloader\\.overridesOperation\\:\\(Lorg\\/springframework\\/expression\\/Operation\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.StandardOperatorOverloader\\.operate\\:\\(Lorg\\/springframework\\/expression\\/Operation\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.StandardTypeLocator\\.findType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.ReflectivePropertyAccessor\\$OptimalPropertyAccessor\\.canRead\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.support\\.ReflectivePropertyAccessor\\$OptimalPropertyAccessor\\.read\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ExpressionState\\.findType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ExpressionState\\.convertValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ExpressionState\\.convertValue\\:\\(Lorg\\/springframework\\/expression\\/TypedValue\\;Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ExpressionState\\.operate\\:\\(Lorg\\/springframework\\/expression\\/Operation\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValue\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValueType\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValueType\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValueType\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValueType\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValueTypeDescriptor\\:\\(\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValueTypeDescriptor\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValueTypeDescriptor\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.getValueTypeDescriptor\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/core\\/convert\\/TypeDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.isWritable\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpression\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpressionParser\\.parseRaw\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/spel\\/standard\\/SpelExpression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpressionParser\\.doParseExpression\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/expression\\/ParserContext\\;\\)Lorg\\/springframework\\/expression\\/spel\\/standard\\/SpelExpression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.SpelExpressionParser\\.doParseExpression\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/expression\\/ParserContext\\;\\)Lorg\\/springframework\\/expression\\/Expression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.InternalSpelExpressionParser\\.doParseExpression\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/expression\\/ParserContext\\;\\)Lorg\\/springframework\\/expression\\/spel\\/standard\\/SpelExpression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.standard\\.InternalSpelExpressionParser\\.doParseExpression\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/expression\\/ParserContext\\;\\)Lorg\\/springframework\\/expression\\/Expression\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.SpelNode\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.SpelNode\\.getTypedValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.SpelNode\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.SpelNode\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OperatorPower\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpInc\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpGE\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpGE\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.SpelNodeImpl\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.SpelNodeImpl\\.getTypedValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.SpelNodeImpl\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.SpelNodeImpl\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.SpelNodeImpl\\.getValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.SpelNodeImpl\\.getValueRef\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/ast\\/ValueRef\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.SpelNodeImpl\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.TypeReference\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OperatorNot\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OperatorNot\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.MethodReference\\.getValueRef\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/ast\\/ValueRef\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.MethodReference\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.MethodReference\\.findAccessorForMethod\\:\\(Ljava\\/util\\/List\\;Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Lorg\\/springframework\\/expression\\/MethodExecutor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.FunctionReference\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.FunctionReference\\.executeFunctionJLRMethod\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.FunctionReference\\.getArguments\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OperatorMatches\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OperatorMatches\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.InlineMap\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpMinus\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Indexer\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Indexer\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Indexer\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Indexer\\.getValueRef\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/ast\\/ValueRef\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Indexer\\.setArrayElement\\:\\(Lorg\\/springframework\\/expression\\/TypeConverter\\;Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Indexer\\.accessArrayElement\\:\\(Ljava\\/lang\\/Object\\;I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Indexer\\.checkAccess\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Indexer\\.access\\$000\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ast\\/Indexer\\;Ljava\\/lang\\/Object\\;I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Indexer\\.access\\$100\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ast\\/Indexer\\;Lorg\\/springframework\\/expression\\/TypeConverter\\;Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpLT\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpLT\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpDivide\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Assign\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OperatorMatches\\$AccessCount\\.check\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Projection\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Projection\\.getValueRef\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/ast\\/ValueRef\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Ternary\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OperatorInstanceof\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OperatorInstanceof\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.VariableReference\\.getValueRef\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/ast\\/ValueRef\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.VariableReference\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.VariableReference\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.VariableReference\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpLE\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpLE\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Elvis\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpPlus\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpGT\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpGT\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpModulus\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Selection\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Selection\\.getValueRef\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/ast\\/ValueRef\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.CompoundExpression\\.getValueRef\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/ast\\/ValueRef\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.CompoundExpression\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.CompoundExpression\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.CompoundExpression\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpNE\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpNE\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OperatorBetween\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OperatorBetween\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.BeanReference\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.QualifiedIdentifier\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.ConstructorReference\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.ConstructorReference\\.createNewInstance\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.ConstructorReference\\.findExecutorForConstructor\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/ConstructorExecutor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.ConstructorReference\\.createArray\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.PropertyOrFieldReference\\.getValueRef\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/ast\\/ValueRef\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.PropertyOrFieldReference\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.PropertyOrFieldReference\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/TypedValue\\;Lorg\\/springframework\\/expression\\/EvaluationContext\\;Z\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.PropertyOrFieldReference\\.setValue\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.PropertyOrFieldReference\\.isWritable\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.PropertyOrFieldReference\\.readProperty\\:\\(Lorg\\/springframework\\/expression\\/TypedValue\\;Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.PropertyOrFieldReference\\.writeProperty\\:\\(Lorg\\/springframework\\/expression\\/TypedValue\\;Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.PropertyOrFieldReference\\.isWritableProperty\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/expression\\/TypedValue\\;Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.PropertyOrFieldReference\\.access\\$000\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ast\\/PropertyOrFieldReference\\;Lorg\\/springframework\\/expression\\/TypedValue\\;Lorg\\/springframework\\/expression\\/EvaluationContext\\;Z\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.PropertyOrFieldReference\\.access\\$300\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ast\\/PropertyOrFieldReference\\;Lorg\\/springframework\\/expression\\/TypedValue\\;Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.spel.SpelEvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.Literal\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpMultiply\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpEQ\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpEQ\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpOr\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/spel\\/support\\/BooleanTypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpOr\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpDec\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.ast\\.OpAnd\\.getValueInternal\\:\\(Lorg\\/springframework\\/expression\\/spel\\/ExpressionState\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.EvaluationException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.spel\\.CompiledExpression\\.getValue\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/expression\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.MethodResolver\\.resolve\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;\\)Lorg\\/springframework\\/expression\\/MethodExecutor\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.PropertyAccessor\\.canRead\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.PropertyAccessor\\.read\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/expression\\/TypedValue\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.PropertyAccessor\\.canWrite\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.expression.AccessException"
  ], 
  "methodRegex": "org\\.springframework\\.expression\\.PropertyAccessor\\.write\\:\\(Lorg\\/springframework\\/expression\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.ClientAuth\\.secureRequest\\:\\(Ljavax\\/security\\/auth\\/message\\/MessageInfo\\;Ljavax\\/security\\/auth\\/Subject\\;\\)Ljavax\\/security\\/auth\\/message\\/AuthStatus\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.ClientAuth\\.validateResponse\\:\\(Ljavax\\/security\\/auth\\/message\\/MessageInfo\\;Ljavax\\/security\\/auth\\/Subject\\;Ljavax\\/security\\/auth\\/Subject\\;\\)Ljavax\\/security\\/auth\\/message\\/AuthStatus\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.ClientAuth\\.cleanSubject\\:\\(Ljavax\\/security\\/auth\\/message\\/MessageInfo\\;Ljavax\\/security\\/auth\\/Subject\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.ServerAuth\\.validateRequest\\:\\(Ljavax\\/security\\/auth\\/message\\/MessageInfo\\;Ljavax\\/security\\/auth\\/Subject\\;Ljavax\\/security\\/auth\\/Subject\\;\\)Ljavax\\/security\\/auth\\/message\\/AuthStatus\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.ServerAuth\\.secureResponse\\:\\(Ljavax\\/security\\/auth\\/message\\/MessageInfo\\;Ljavax\\/security\\/auth\\/Subject\\;\\)Ljavax\\/security\\/auth\\/message\\/AuthStatus\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.ServerAuth\\.cleanSubject\\:\\(Ljavax\\/security\\/auth\\/message\\/MessageInfo\\;Ljavax\\/security\\/auth\\/Subject\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ReflectiveOperationException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.config\\.AuthConfigFactory\\$1\\.run\\:\\(\\)Ljavax\\/security\\/auth\\/message\\/config\\/AuthConfigFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.config\\.AuthConfigFactory\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.config\\.AuthConfigProvider\\.getClientAuthConfig\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavax\\/security\\/auth\\/callback\\/CallbackHandler\\;\\)Ljavax\\/security\\/auth\\/message\\/config\\/ClientAuthConfig\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.config\\.AuthConfigProvider\\.getServerAuthConfig\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavax\\/security\\/auth\\/callback\\/CallbackHandler\\;\\)Ljavax\\/security\\/auth\\/message\\/config\\/ServerAuthConfig\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.config\\.ClientAuthConfig\\.getAuthContext\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/security\\/auth\\/Subject\\;Ljava\\/util\\/Map\\;\\)Ljavax\\/security\\/auth\\/message\\/config\\/ClientAuthContext\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.config\\.ServerAuthConfig\\.getAuthContext\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/security\\/auth\\/Subject\\;Ljava\\/util\\/Map\\;\\)Ljavax\\/security\\/auth\\/message\\/config\\/ServerAuthContext\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.module\\.ClientAuthModule\\.initialize\\:\\(Ljavax\\/security\\/auth\\/message\\/MessagePolicy\\;Ljavax\\/security\\/auth\\/message\\/MessagePolicy\\;Ljavax\\/security\\/auth\\/callback\\/CallbackHandler\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "javax\\.security\\.auth\\.message\\.module\\.ServerAuthModule\\.initialize\\:\\(Ljavax\\/security\\/auth\\/message\\/MessagePolicy\\;Ljavax\\/security\\/auth\\/message\\/MessagePolicy\\;Ljavax\\/security\\/auth\\/callback\\/CallbackHandler\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.AsyncContext\\.createListener\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/AsyncListener\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.AsyncListener\\.onComplete\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.AsyncListener\\.onTimeout\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.AsyncListener\\.onError\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.AsyncListener\\.onStartAsync\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.Filter\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.Filter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.FilterChain\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.GenericFilter\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.GenericFilter\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.GenericServlet\\.init\\:\\(Ljavax\\/servlet\\/ServletConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.GenericServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.GenericServlet\\.service\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ReadListener\\.onDataAvailable\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ReadListener\\.onAllDataRead\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.RequestDispatcher\\.forward\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.RequestDispatcher\\.include\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.Servlet\\.init\\:\\(Ljavax\\/servlet\\/ServletConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.Servlet\\.service\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletContainerInitializer\\.onStartup\\:\\(Ljava\\/util\\/Set\\;Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletContext\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletContext\\.getServlet\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletContext\\.createServlet\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletContext\\.createFilter\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletContext\\.createListener\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/EventListener\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletInputStream\\.readLine\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.print\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.print\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.print\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.print\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.print\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.print\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.print\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.println\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.println\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.println\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.println\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.println\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.println\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.println\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletOutputStream\\.println\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletRequest\\.setCharacterEncoding\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletRequest\\.getInputStream\\:\\(\\)Ljavax\\/servlet\\/ServletInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletRequest\\.getReader\\:\\(\\)Ljava\\/io\\/BufferedReader\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletRequest\\.startAsync\\:\\(\\)Ljavax\\/servlet\\/AsyncContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletRequest\\.startAsync\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)Ljavax\\/servlet\\/AsyncContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletRequestWrapper\\.setCharacterEncoding\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletRequestWrapper\\.getInputStream\\:\\(\\)Ljavax\\/servlet\\/ServletInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletRequestWrapper\\.getReader\\:\\(\\)Ljava\\/io\\/BufferedReader\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletRequestWrapper\\.startAsync\\:\\(\\)Ljavax\\/servlet\\/AsyncContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletRequestWrapper\\.startAsync\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)Ljavax\\/servlet\\/AsyncContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletResponse\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletResponse\\.getWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletResponse\\.flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletResponseWrapper\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletResponseWrapper\\.getWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.ServletResponseWrapper\\.flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.WriteListener\\.onWritePossible\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServlet\\.doHead\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServlet\\.doPost\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServlet\\.doPut\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServlet\\.doDelete\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServlet\\.doOptions\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServlet\\.doTrace\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServlet\\.service\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServlet\\.service\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequest\\.authenticate\\:\\(Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequest\\.login\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequest\\.logout\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequest\\.getParts\\:\\(\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequest\\.getPart\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/servlet\\/http\\/Part\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequest\\.upgrade\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/http\\/HttpUpgradeHandler\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequestWrapper\\.authenticate\\:\\(Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequestWrapper\\.login\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequestWrapper\\.logout\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequestWrapper\\.getParts\\:\\(\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequestWrapper\\.getPart\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/servlet\\/http\\/Part\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletRequestWrapper\\.upgrade\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/http\\/HttpUpgradeHandler\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletResponse\\.sendError\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletResponse\\.sendError\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletResponse\\.sendRedirect\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletResponseWrapper\\.sendError\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletResponseWrapper\\.sendError\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.HttpServletResponseWrapper\\.sendRedirect\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.NoBodyOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.NoBodyResponse\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.NoBodyResponse\\.getWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.Part\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.Part\\.write\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.Part\\.delete\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.WebConnection\\.getInputStream\\:\\(\\)Ljavax\\/servlet\\/ServletInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.servlet\\.http\\.WebConnection\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.AsyncDispatcher\\.dispatch\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Authenticator\\.authenticate\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Authenticator\\.login\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/connector\\/Request\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Lifecycle\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Lifecycle\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Lifecycle\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Lifecycle\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Manager\\.findSession\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Manager\\.load\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Manager\\.unload\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Realm\\.hasResourcePermission\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\[Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/SecurityConstraint\\;Lorg\\/apache\\/catalina\\/Context\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Realm\\.hasUserDataPermission\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\[Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/SecurityConstraint\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Store\\.getSize\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Store\\.keys\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Store\\.load\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Store\\.remove\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Store\\.clear\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Store\\.save\\:\\(Lorg\\/apache\\/catalina\\/Session\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.TomcatPrincipal\\.logout\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.UserDatabase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.UserDatabase\\.open\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.UserDatabase\\.save\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Valve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Wrapper\\.getServletMethods\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Wrapper\\.allocate\\:\\(\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Wrapper\\.deallocate\\:\\(Ljavax\\/servlet\\/Servlet\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Wrapper\\.load\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.Wrapper\\.unload\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.AuthenticatorBase\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.AuthenticatorBase\\.authenticate\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.AuthenticatorBase\\.getJaspicState\\:\\(Ljavax\\/security\\/auth\\/message\\/config\\/AuthConfigProvider\\;Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;Z\\)Lorg\\/apache\\/catalina\\/authenticator\\/AuthenticatorBase\\$JaspicState\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.AuthenticatorBase\\.doAuthenticate\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.AuthenticatorBase\\.getRequestCertificates\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;\\)\\[Ljava\\/security\\/cert\\/X509Certificate\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.AuthenticatorBase\\.login\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/connector\\/Request\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.AuthenticatorBase\\.doLogin\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/security\\/Principal\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.AuthenticatorBase\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.AuthenticatorBase\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.BasicAuthenticator\\$BasicCredentials\\.\\<init\\>\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/ByteChunk\\;Ljava\\/nio\\/charset\\/Charset\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.BasicAuthenticator\\$BasicCredentials\\.parseMethod\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.BasicAuthenticator\\$BasicCredentials\\.parseBase64\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.BasicAuthenticator\\$BasicCredentials\\.parseCredentials\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.BasicAuthenticator\\.doAuthenticate\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.DigestAuthenticator\\.doAuthenticate\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.DigestAuthenticator\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.FormAuthenticator\\.doAuthenticate\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.FormAuthenticator\\.forwardToLoginPage\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/LoginConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.FormAuthenticator\\.forwardToErrorPage\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/LoginConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.FormAuthenticator\\.restoreRequest\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/Session\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.FormAuthenticator\\.saveRequest\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/Session\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.NonLoginAuthenticator\\.doAuthenticate\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SSLAuthenticator\\.doAuthenticate\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SingleSignOn\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SingleSignOn\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SingleSignOn\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SingleSignOnEntry\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SingleSignOnEntry\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SpnegoAuthenticator\\$1\\.run\\:\\(\\)Lorg\\/ietf\\/jgss\\/GSSCredential\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SpnegoAuthenticator\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.ietf.jgss.GSSException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SpnegoAuthenticator\\$AcceptAction\\.run\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SpnegoAuthenticator\\$AcceptAction\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SpnegoAuthenticator\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.SpnegoAuthenticator\\.doAuthenticate\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.jaspic\\.AuthConfigFactoryImpl\\.createAuthConfigProvider\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Ljavax\\/security\\/auth\\/message\\/config\\/AuthConfigProvider\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.security.auth.callback.UnsupportedCallbackException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.jaspic\\.CallbackHandlerImpl\\.handle\\:\\(\\[Ljavax\\/security\\/auth\\/callback\\/Callback\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.jaspic\\.PersistentProviderRegistrations\\.writeOptional\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.jaspic\\.SimpleAuthConfigProvider\\.getClientAuthConfig\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavax\\/security\\/auth\\/callback\\/CallbackHandler\\;\\)Ljavax\\/security\\/auth\\/message\\/config\\/ClientAuthConfig\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.jaspic\\.SimpleAuthConfigProvider\\.getServerAuthConfig\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavax\\/security\\/auth\\/callback\\/CallbackHandler\\;\\)Ljavax\\/security\\/auth\\/message\\/config\\/ServerAuthConfig\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.jaspic\\.SimpleServerAuthConfig\\.getAuthContext\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/security\\/auth\\/Subject\\;Ljava\\/util\\/Map\\;\\)Ljavax\\/security\\/auth\\/message\\/config\\/ServerAuthContext\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.jaspic\\.SimpleServerAuthContext\\.validateRequest\\:\\(Ljavax\\/security\\/auth\\/message\\/MessageInfo\\;Ljavax\\/security\\/auth\\/Subject\\;Ljavax\\/security\\/auth\\/Subject\\;\\)Ljavax\\/security\\/auth\\/message\\/AuthStatus\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.jaspic\\.SimpleServerAuthContext\\.secureResponse\\:\\(Ljavax\\/security\\/auth\\/message\\/MessageInfo\\;Ljavax\\/security\\/auth\\/Subject\\;\\)Ljavax\\/security\\/auth\\/message\\/AuthStatus\\;"
 }, 
 {
  "exceptions": [
   "javax.security.auth.message.AuthException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.authenticator\\.jaspic\\.SimpleServerAuthContext\\.cleanSubject\\:\\(Ljavax\\/security\\/auth\\/message\\/MessageInfo\\;Ljavax\\/security\\/auth\\/Subject\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Connector\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Connector\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Connector\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Connector\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteAdapter\\.asyncDispatch\\:\\(Lorg\\/apache\\/coyote\\/Request\\;Lorg\\/apache\\/coyote\\/Response\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketEvent\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteAdapter\\.service\\:\\(Lorg\\/apache\\/coyote\\/Request\\;Lorg\\/apache\\/coyote\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteAdapter\\.prepare\\:\\(Lorg\\/apache\\/coyote\\/Request\\;Lorg\\/apache\\/coyote\\/Response\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteAdapter\\.postParseRequest\\:\\(Lorg\\/apache\\/coyote\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/coyote\\/Response\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteAdapter\\.convertURI\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/MessageBytes\\;Lorg\\/apache\\/catalina\\/connector\\/Request\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\$PrivilegedAvailable\\.run\\:\\(\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\$PrivilegedAvailable\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\$PrivilegedClose\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\$PrivilegedClose\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\$PrivilegedRead\\.run\\:\\(\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\$PrivilegedRead\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\$PrivilegedReadArray\\.run\\:\\(\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\$PrivilegedReadArray\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\$PrivilegedReadBuffer\\.run\\:\\(\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\$PrivilegedReadBuffer\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\.read\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteOutputStream\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteOutputStream\\.write\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteReader\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteReader\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteReader\\.read\\:\\(\\[C\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteReader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteReader\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteReader\\.ready\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteReader\\.mark\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteReader\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteReader\\.readLine\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.CoyoteWriter\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\$PrivilegedCreateConverter\\.run\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/buf\\/B2CConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\$PrivilegedCreateConverter\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.realReadBytes\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.readByte\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.read\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.realReadChars\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.read\\:\\(\\[C\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.ready\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.mark\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.checkConverter\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.createConverter\\:\\(Ljava\\/nio\\/charset\\/Charset\\;\\)Lorg\\/apache\\/tomcat\\/util\\/buf\\/B2CConverter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.checkByteBufferEof\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.InputBuffer\\.checkCharBufferEof\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\$PrivilegedCreateConverter\\.run\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/buf\\/C2BConverter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\$PrivilegedCreateConverter\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.doFlush\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.realWriteBytes\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.write\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.writeBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.writeBytes\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.writeByte\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.realWriteChars\\:\\(Ljava\\/nio\\/CharBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.write\\:\\(\\[C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.write\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.write\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.checkConverter\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.createConverter\\:\\(Ljava\\/nio\\/charset\\/Charset\\;\\)Lorg\\/apache\\/tomcat\\/util\\/buf\\/C2BConverter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.append\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.append\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.append\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.appendByteArray\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.appendByteBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.flushByteBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.OutputBuffer\\.flushCharBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.createInputStream\\:\\(\\)Ljavax\\/servlet\\/ServletInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.finishRequest\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.getInputStream\\:\\(\\)Ljavax\\/servlet\\/ServletInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.getReader\\:\\(\\)Ljava\\/io\\/BufferedReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.setCharacterEncoding\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.upgrade\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/http\\/HttpUpgradeHandler\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.authenticate\\:\\(Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.login\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.logout\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.getParts\\:\\(\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.getPart\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/servlet\\/http\\/Part\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.readPostBody\\:\\(\\[BI\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Request\\.readChunkedPostBody\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.setCharacterEncoding\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.getInputStream\\:\\(\\)Ljavax\\/servlet\\/ServletInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.getReader\\:\\(\\)Ljava\\/io\\/BufferedReader\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.startAsync\\:\\(\\)Ljavax\\/servlet\\/AsyncContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.startAsync\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)Ljavax\\/servlet\\/AsyncContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.authenticate\\:\\(Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.login\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.logout\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException", 
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.getParts\\:\\(\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException", 
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.getPart\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/servlet\\/http\\/Part\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.RequestFacade\\.upgrade\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/http\\/HttpUpgradeHandler\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\$PrivilgedEncodeUrl\\.run\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/buf\\/CharChunk\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\$PrivilgedEncodeUrl\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\.finishResponse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\.getReporter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\.flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\.getWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\.sendAcknowledgement\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\.sendError\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\.sendError\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\.sendRedirect\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.Response\\.sendRedirect\\:\\(Ljava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.ResponseFacade\\$FlushBufferPrivilegedAction\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.ResponseFacade\\$FlushBufferPrivilegedAction\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.ResponseFacade\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.ResponseFacade\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.ResponseFacade\\.getWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.ResponseFacade\\.flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.ResponseFacade\\.sendError\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.ResponseFacade\\.sendError\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.connector\\.ResponseFacade\\.sendRedirect\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContext\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContext\\.addFilter\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/Filter\\;\\)Ljavax\\/servlet\\/FilterRegistration\\$Dynamic\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContext\\.createFilter\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContext\\.addServlet\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/Servlet\\;Ljava\\/util\\/Map\\;\\)Ljavax\\/servlet\\/ServletRegistration\\$Dynamic\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContext\\.createServlet\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContext\\.createListener\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/EventListener\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContextFacade\\$PrivilegedExecuteMethod\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContextFacade\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContextFacade\\.getServlet\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContextFacade\\.createFilter\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContextFacade\\.createServlet\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContextFacade\\.createListener\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/EventListener\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContextFacade\\.invokeMethod\\:\\(Lorg\\/apache\\/catalina\\/core\\/ApplicationContext\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.security.PrivilegedActionException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContextFacade\\.executeMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Lorg\\/apache\\/catalina\\/core\\/ApplicationContext\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationContextFacade\\.handleException\\:\\(Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\$PrivilegedDispatch\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\$PrivilegedDispatch\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\$PrivilegedForward\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\$PrivilegedForward\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\$PrivilegedInclude\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\$PrivilegedInclude\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.forward\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.doForward\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.processRequest\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Lorg\\/apache\\/catalina\\/core\\/ApplicationDispatcher\\$State\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.include\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.doInclude\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.dispatch\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.doDispatch\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.invoke\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Lorg\\/apache\\/catalina\\/core\\/ApplicationDispatcher\\$State\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.checkSameObjects\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.access\\$000\\:\\(Lorg\\/apache\\/catalina\\/core\\/ApplicationDispatcher\\;Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.access\\$100\\:\\(Lorg\\/apache\\/catalina\\/core\\/ApplicationDispatcher\\;Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationDispatcher\\.access\\$200\\:\\(Lorg\\/apache\\/catalina\\/core\\/ApplicationDispatcher\\;Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationFilterChain\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationFilterChain\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationFilterChain\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationFilterChain\\.internalDoFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationFilterChain\\.access\\$000\\:\\(Lorg\\/apache\\/catalina\\/core\\/ApplicationFilterChain\\;Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassCastException", 
   "java.lang.ReflectiveOperationException", 
   "javax.servlet.ServletException", 
   "javax.naming.NamingException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationFilterConfig\\.\\<init\\>\\:\\(Lorg\\/apache\\/catalina\\/Context\\;Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/FilterDef\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassCastException", 
   "java.lang.ReflectiveOperationException", 
   "javax.servlet.ServletException", 
   "javax.naming.NamingException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationFilterConfig\\.getFilter\\:\\(\\)Ljavax\\/servlet\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationFilterConfig\\.initFilter\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationFilterConfig\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationHttpResponse\\.sendError\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationHttpResponse\\.sendError\\:\\(ILjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationHttpResponse\\.sendRedirect\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationPart\\.delete\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationPart\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationPart\\.write\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ApplicationPart\\.getString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.AprLifecycleListener\\.terminateAPR\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.AprLifecycleListener\\.initializeSSL\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.AsyncContextImpl\\.createListener\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/AsyncListener\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.AsyncContextImpl\\.doInternalDispatch\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.AsyncListenerWrapper\\.fireOnStartAsync\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.AsyncListenerWrapper\\.fireOnComplete\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.AsyncListenerWrapper\\.fireOnTimeout\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.AsyncListenerWrapper\\.fireOnError\\:\\(Ljavax\\/servlet\\/AsyncEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ContainerBase\\$StartChild\\.call\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ContainerBase\\$StartChild\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ContainerBase\\$StopChild\\.call\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ContainerBase\\$StopChild\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ContainerBase\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ContainerBase\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ContainerBase\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.ContainerBase\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\$PrivilegedLoadClass\\.run\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\$PrivilegedLoadClass\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException", 
   "java.lang.InstantiationException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException", 
   "java.lang.InstantiationException", 
   "java.lang.ClassNotFoundException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "javax.naming.NamingException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.InstantiationException", 
   "java.lang.ClassNotFoundException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.destroyInstance\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.postConstruct\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.preDestroy\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.populateAnnotationsCache\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.processAnnotations\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.loadClassMaybePrivileged\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.lookupFieldResource\\:\\(Ljavax\\/naming\\/Context\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Field\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.DefaultInstanceManager\\.lookupMethodResource\\:\\(Ljavax\\/naming\\/Context\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.NamingContextListener\\.createNamingContext\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.NamingContextListener\\.createObjectName\\:\\(Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/ContextResource\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.NamingContextListener\\.createSubcontexts\\:\\(Ljavax\\/naming\\/Context\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\$NoPluggabilityServletContext\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\$NoPluggabilityServletContext\\.getServlet\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\$NoPluggabilityServletContext\\.createServlet\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\$NoPluggabilityServletContext\\.createFilter\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/servlet\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\$NoPluggabilityServletContext\\.createListener\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/EventListener\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\.resourcesStart\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\.resetContext\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.ListenerNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\.removeNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;Ljavax\\/management\\/NotificationFilter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\.addNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;Ljavax\\/management\\/NotificationFilter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.ListenerNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContext\\.removeNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardContextValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardEngine\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardEngine\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardEngineValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardHost\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardHost\\.getValveNames\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardHostValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardPipeline\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardPipeline\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.InstanceNotFoundException", 
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardServer\\.storeConfig\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.InstanceNotFoundException", 
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardServer\\.storeContext\\:\\(Lorg\\/apache\\/catalina\\/Context\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardServer\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardServer\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardServer\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardServer\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardService\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardService\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardService\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardService\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardThreadExecutor\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardThreadExecutor\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardThreadExecutor\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardThreadExecutor\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.getServletMethods\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.allocate\\:\\(\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.deallocate\\:\\(Ljavax\\/servlet\\/Servlet\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.load\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.loadServlet\\:\\(\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.initServlet\\:\\(Ljavax\\/servlet\\/Servlet\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.unload\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.ListenerNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.removeNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;Ljavax\\/management\\/NotificationFilter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.addNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;Ljavax\\/management\\/NotificationFilter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.ListenerNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapper\\.removeNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapperValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.core\\.StandardWrapperValve\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.deploy\\.NamingResourcesImpl\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.deploy\\.NamingResourcesImpl\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.deploy\\.NamingResourcesImpl\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.deploy\\.NamingResourcesImpl\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.AddDefaultCharsetFilter\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.AddDefaultCharsetFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.CorsFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.CorsFilter\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.CorsFilter\\.handleSimpleCORS\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.CorsFilter\\.handlePreflightCORS\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.CorsFilter\\.handleNonCORS\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.CorsFilter\\.parseAndStore\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.CorsFilter\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.CsrfPreventionFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.CsrfPreventionFilterBase\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XHttpServletResponse\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XHttpServletResponse\\.getWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XPrintWriter\\.append\\:\\(C\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XPrintWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XPrintWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XPrintWriter\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XPrintWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XPrintWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.print\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.print\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.print\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.print\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.print\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.print\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.print\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.println\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.println\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.println\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.println\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.println\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.println\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.println\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.println\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\$XServletOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.ExpiresFilter\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.FailedRequestFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.FilterBase\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.HttpHeaderSecurityFilter\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.HttpHeaderSecurityFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RemoteAddrFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RemoteCIDRFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RemoteCIDRFilter\\.sendErrorWhenNotHttp\\:\\(Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RemoteHostFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RemoteIpFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RemoteIpFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RemoteIpFilter\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RemoteIpFilter\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RequestDumperFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RequestDumperFilter\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RequestFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RequestFilter\\.process\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RequestFilter\\.sendErrorWhenNotHttp\\:\\(Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.RestCsrfPreventionFilter\\$StateChangingRequest\\.apply\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.SessionInitializerFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.SetCharacterEncodingFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.filters\\.WebdavFixFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.JdbcLeakPrevention\\.clearJdbcDriverRegistrations\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappClassLoaderBase\\.findClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappClassLoaderBase\\.findResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappClassLoaderBase\\.loadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappClassLoaderBase\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappClassLoaderBase\\.checkStateForClassLoading\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappClassLoaderBase\\.checkStateForResourceLoading\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappClassLoaderBase\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappClassLoaderBase\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.NoSuchFieldException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappClassLoaderBase\\.checkThreadLocalMapForLeaks\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Field\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ReflectiveOperationException", 
   "java.lang.SecurityException", 
   "java.lang.ClassCastException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappClassLoaderBase\\.clearCache\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappLoader\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappLoader\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.loader\\.WebappLoader\\.createClassLoader\\:\\(\\)Lorg\\/apache\\/catalina\\/loader\\/WebappClassLoaderBase\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.HTMLManagerServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.HTMLManagerServlet\\.doPost\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.HTMLManagerServlet\\.list\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tomcat\\/util\\/res\\/StringManager\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.HTMLManagerServlet\\.sslConnectorCiphers\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.HTMLManagerServlet\\.sslConnectorCerts\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.HTMLManagerServlet\\.sslConnectorTrustedCerts\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.HTMLManagerServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.HTMLManagerServlet\\.doSessions\\:\\(Lorg\\/apache\\/catalina\\/util\\/ContextName\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/tomcat\\/util\\/res\\/StringManager\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.HTMLManagerServlet\\.displaySessionsListPage\\:\\(Lorg\\/apache\\/catalina\\/util\\/ContextName\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/tomcat\\/util\\/res\\/StringManager\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.HTMLManagerServlet\\.displaySessionDetailPage\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/catalina\\/util\\/ContextName\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tomcat\\/util\\/res\\/StringManager\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.JMXProxyServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.JMXProxyServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.OperationsException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.JMXProxyServlet\\.setAttributeInternal\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.OperationsException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.JMXProxyServlet\\.invokeOperationInternal\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.ManagerServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.ManagerServlet\\.doPut\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.ManagerServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.ManagerServlet\\.isDeployed\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.ManagerServlet\\.check\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.ManagerServlet\\.isServiced\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.ManagerServlet\\.addServiced\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.ManagerServlet\\.removeServiced\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.ManagerServlet\\.uploadWar\\:\\(Ljava\\/io\\/PrintWriter\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljava\\/io\\/File\\;Lorg\\/apache\\/tomcat\\/util\\/res\\/StringManager\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.StatusManagerServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.StatusManagerServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.StatusTransformer\\.writeVMState\\:\\(Ljava\\/io\\/PrintWriter\\;I\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.StatusTransformer\\.writeConnectorState\\:\\(Ljava\\/io\\/PrintWriter\\;Ljavax\\/management\\/ObjectName\\;Ljava\\/lang\\/String\\;Ljavax\\/management\\/MBeanServer\\;Ljava\\/util\\/Vector\\;Ljava\\/util\\/Vector\\;I\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.StatusTransformer\\.writeProcessorState\\:\\(Ljava\\/io\\/PrintWriter\\;Ljavax\\/management\\/ObjectName\\;Ljavax\\/management\\/MBeanServer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.StatusTransformer\\.writeDetailedState\\:\\(Ljava\\/io\\/PrintWriter\\;Ljavax\\/management\\/MBeanServer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.StatusTransformer\\.writeContext\\:\\(Ljava\\/io\\/PrintWriter\\;Ljavax\\/management\\/ObjectName\\;Ljavax\\/management\\/MBeanServer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.StatusTransformer\\.writeManager\\:\\(Ljava\\/io\\/PrintWriter\\;Ljavax\\/management\\/ObjectName\\;Ljavax\\/management\\/MBeanServer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.StatusTransformer\\.writeJspMonitor\\:\\(Ljava\\/io\\/PrintWriter\\;Ljava\\/util\\/Set\\;Ljavax\\/management\\/MBeanServer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.StatusTransformer\\.writeWrapper\\:\\(Ljava\\/io\\/PrintWriter\\;Ljavax\\/management\\/ObjectName\\;Ljavax\\/management\\/MBeanServer\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.host\\.HTMLHostManagerServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.host\\.HTMLHostManagerServlet\\.doPost\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.host\\.HTMLHostManagerServlet\\.list\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/tomcat\\/util\\/res\\/StringManager\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.host\\.HostManagerServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.manager\\.host\\.HostManagerServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mapper\\.Mapper\\.map\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/MessageBytes\\;Lorg\\/apache\\/tomcat\\/util\\/buf\\/MessageBytes\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/mapper\\/MappingData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mapper\\.Mapper\\.map\\:\\(Lorg\\/apache\\/catalina\\/Context\\;Lorg\\/apache\\/tomcat\\/util\\/buf\\/MessageBytes\\;Lorg\\/apache\\/catalina\\/mapper\\/MappingData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mapper\\.Mapper\\.internalMap\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/CharChunk\\;Lorg\\/apache\\/tomcat\\/util\\/buf\\/CharChunk\\;Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/mapper\\/MappingData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mapper\\.Mapper\\.internalMapWrapper\\:\\(Lorg\\/apache\\/catalina\\/mapper\\/Mapper\\$ContextVersion\\;Lorg\\/apache\\/tomcat\\/util\\/buf\\/CharChunk\\;Lorg\\/apache\\/catalina\\/mapper\\/MappingData\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mapper\\.MapperListener\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mapper\\.MapperListener\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.BaseCatalinaMBean\\.doGetManagedResource\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.BaseCatalinaMBean\\.newInstance\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ConnectorMBean\\.getAttribute\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ConnectorMBean\\.setAttribute\\:\\(Ljavax\\/management\\/Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContainerMBean\\.addChild\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContainerMBean\\.removeChild\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContainerMBean\\.addValve\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContainerMBean\\.removeValve\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContainerMBean\\.addLifecycleListener\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContainerMBean\\.removeLifecycleListeners\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContainerMBean\\.findLifecycleListenerNames\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContainerMBean\\.findContainerListenerNames\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextEnvironmentMBean\\.setAttribute\\:\\(Ljavax\\/management\\/Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextMBean\\.findApplicationParameters\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextMBean\\.findConstraints\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextMBean\\.findErrorPage\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextMBean\\.findErrorPage\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextMBean\\.findErrorPage\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextMBean\\.findErrorPages\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextMBean\\.findFilterDef\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextMBean\\.findFilterDefs\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextMBean\\.findFilterMaps\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextResourceLinkMBean\\.getAttribute\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextResourceLinkMBean\\.setAttribute\\:\\(Ljavax\\/management\\/Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextResourceMBean\\.getAttribute\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ContextResourceMBean\\.setAttribute\\:\\(Ljavax\\/management\\/Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.GlobalResourcesLifecycleListener\\.createMBeans\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/naming\\/Context\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.GlobalResourcesLifecycleListener\\.createMBeans\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/UserDatabase\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.getParentContainerFromParent\\:\\(Ljavax\\/management\\/ObjectName\\;\\)Lorg\\/apache\\/catalina\\/Container\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.getParentContainerFromChild\\:\\(Ljavax\\/management\\/ObjectName\\;\\)Lorg\\/apache\\/catalina\\/Container\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.getService\\:\\(Ljavax\\/management\\/ObjectName\\;\\)Lorg\\/apache\\/catalina\\/Service\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createAjpConnector\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createDataSourceRealm\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.addRealmToParent\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/Realm\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createHttpConnector\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createConnector\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;IZZ\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createHttpsConnector\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createJDBCRealm\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createJNDIRealm\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createMemoryRealm\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createStandardContext\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createStandardContext\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZZ\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createStandardHost\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZZZZ\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createStandardServiceEngine\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createStandardManager\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createUserDatabaseRealm\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createValve\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.createWebappLoader\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.removeConnector\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.removeContext\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.removeHost\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.removeLoader\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.removeManager\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.removeRealm\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.removeService\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanFactory\\.removeValve\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createMBean\\:\\(Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/ContextEnvironment\\;\\)Ljavax\\/management\\/DynamicMBean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createMBean\\:\\(Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/ContextResource\\;\\)Ljavax\\/management\\/DynamicMBean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createMBean\\:\\(Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/ContextResourceLink\\;\\)Ljavax\\/management\\/DynamicMBean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createMBean\\:\\(Lorg\\/apache\\/catalina\\/Group\\;\\)Ljavax\\/management\\/DynamicMBean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createMBean\\:\\(Lorg\\/apache\\/catalina\\/Role\\;\\)Ljavax\\/management\\/DynamicMBean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createMBean\\:\\(Lorg\\/apache\\/catalina\\/User\\;\\)Ljavax\\/management\\/DynamicMBean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createMBean\\:\\(Lorg\\/apache\\/catalina\\/UserDatabase\\;\\)Ljavax\\/management\\/DynamicMBean\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createObjectName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/ContextEnvironment\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createObjectName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/ContextResource\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createObjectName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/ContextResourceLink\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createObjectName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/Group\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createObjectName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/Loader\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createObjectName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/Role\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createObjectName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/User\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.createObjectName\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/UserDatabase\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.destroyMBean\\:\\(Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/ContextEnvironment\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.destroyMBean\\:\\(Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/ContextResource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.destroyMBean\\:\\(Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/ContextResourceLink\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.destroyMBean\\:\\(Lorg\\/apache\\/catalina\\/Group\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.destroyMBean\\:\\(Lorg\\/apache\\/catalina\\/Role\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.destroyMBean\\:\\(Lorg\\/apache\\/catalina\\/User\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.MBeanUtils\\.destroyMBeanUserDatabase\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.NamingResourcesMBean\\.addEnvironment\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.NamingResourcesMBean\\.addResource\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.NamingResourcesMBean\\.addResourceLink\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ServiceMBean\\.addConnector\\:\\(Ljava\\/lang\\/String\\;IZZ\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ServiceMBean\\.addExecutor\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ServiceMBean\\.findConnectors\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ServiceMBean\\.findExecutors\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.mbeans\\.ServiceMBean\\.getExecutor\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.CombinedRealm\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.CombinedRealm\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.CombinedRealm\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.DataSourceRealm\\.credentials\\:\\(Ljava\\/sql\\/Connection\\;Ljava\\/lang\\/String\\;\\)Ljava\\/sql\\/PreparedStatement\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.DataSourceRealm\\.roles\\:\\(Ljava\\/sql\\/Connection\\;Ljava\\/lang\\/String\\;\\)Ljava\\/sql\\/PreparedStatement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.DataSourceRealm\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.DigestCredentialHandlerBase\\.setAlgorithm\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.GenericPrincipal\\.logout\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.security.auth.callback.UnsupportedCallbackException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JAASCallbackHandler\\.handle\\:\\(\\[Ljavax\\/security\\/auth\\/callback\\/Callback\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.security.auth.login.LoginException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JAASMemoryLoginModule\\.abort\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.security.auth.login.LoginException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JAASMemoryLoginModule\\.commit\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.security.auth.login.LoginException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JAASMemoryLoginModule\\.login\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.security.auth.login.LoginException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JAASMemoryLoginModule\\.logout\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JAASRealm\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JDBCRealm\\.credentials\\:\\(Ljava\\/sql\\/Connection\\;Ljava\\/lang\\/String\\;\\)Ljava\\/sql\\/PreparedStatement\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JDBCRealm\\.open\\:\\(\\)Ljava\\/sql\\/Connection\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JDBCRealm\\.roles\\:\\(Ljava\\/sql\\/Connection\\;Ljava\\/lang\\/String\\;\\)Ljava\\/sql\\/PreparedStatement\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JDBCRealm\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JDBCRealm\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ReflectiveOperationException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.constructInstance\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.authenticate\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/security\\/Principal\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.getUser\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.getUser\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.getUser\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.getUserByPattern\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.getUserByPattern\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;I\\)Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.getUserBySearch\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.checkCredentials\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.compareCredentials\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.bindAsUser\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.userCredentialsAdd\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.userCredentialsRemove\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.getRoles\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.searchAsUser\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Lorg\\/apache\\/catalina\\/realm\\/JNDIRealm\\$User\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljavax\\/naming\\/directory\\/SearchControls\\;Z\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.getAttributeValue\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/naming\\/directory\\/Attributes\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.addAttributeValues\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/naming\\/directory\\/Attributes\\;Ljava\\/util\\/ArrayList\\;\\)Ljava\\/util\\/ArrayList\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.getPrincipal\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Ljava\\/lang\\/String\\;Lorg\\/ietf\\/jgss\\/GSSCredential\\;\\)Ljava\\/security\\/Principal\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.open\\:\\(\\)Ljavax\\/naming\\/directory\\/DirContext\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.createDirContext\\:\\(Ljava\\/util\\/Hashtable\\;\\)Ljavax\\/naming\\/directory\\/DirContext\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.createTlsDirContext\\:\\(Ljava\\/util\\/Hashtable\\;\\)Ljavax\\/naming\\/directory\\/DirContext\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.JNDIRealm\\.getDistinguishedName\\:\\(Ljavax\\/naming\\/directory\\/DirContext\\;Ljava\\/lang\\/String\\;Ljavax\\/naming\\/directory\\/SearchResult\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.LockOutRealm\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.MemoryRealm\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.MemoryUserRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.MessageDigestCredentialHandler\\.setAlgorithm\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.RealmBase\\.hasResourcePermission\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\[Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/SecurityConstraint\\;Lorg\\/apache\\/catalina\\/Context\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.RealmBase\\.hasUserDataPermission\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\[Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/SecurityConstraint\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.RealmBase\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.RealmBase\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.RealmBase\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.RealmBase\\.getDigestCharset\\:\\(\\)Ljava\\/nio\\/charset\\/Charset\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.RealmBase\\.createUsernameRetriever\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/realm\\/X509UsernameRetriever\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.SecretKeyCredentialHandler\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.SecretKeyCredentialHandler\\.setAlgorithm\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.UserDatabaseRealm\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.realm\\.UserDatabaseRealm\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.securityClassLoad\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.securityClassLoad\\:\\(Ljava\\/lang\\/ClassLoader\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.loadCorePackage\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.loadLoaderPackage\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.loadRealmPackage\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.loadServletsPackage\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.loadSessionPackage\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.loadUtilPackage\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.loadCoyotePackage\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.loadJavaxPackage\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.loadConnectorPackage\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityClassLoad\\.loadTomcatPackage\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityUtil\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityUtil\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityUtil\\.doAsPrivilege\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/Servlet\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityUtil\\.doAsPrivilege\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/Servlet\\;\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityUtil\\.doAsPrivilege\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/Servlet\\;\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/security\\/Principal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityUtil\\.doAsPrivilege\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityUtil\\.doAsPrivilege\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/Filter\\;\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityUtil\\.doAsPrivilege\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/Filter\\;\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/security\\/Principal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityUtil\\.execute\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/security\\/Principal\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.security\\.SecurityUtil\\.createMethodAndCacheIt\\:\\(\\[Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\$CGIEnvironment\\.\\<init\\>\\:\\(Lorg\\/apache\\/catalina\\/servlets\\/CGIServlet\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\$CGIEnvironment\\.setupFromRequest\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\$CGIEnvironment\\.setCGIEnvironment\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\$CGIRunner\\.hashToStringArray\\:\\(Ljava\\/util\\/Hashtable\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\$CGIRunner\\.run\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\$HTTPHeaderInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\.init\\:\\(Ljavax\\/servlet\\/ServletConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\.printServletEnvironment\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\.doPost\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\.setStatus\\:\\(Ljavax\\/servlet\\/http\\/HttpServletResponse\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.CGIServlet\\.access\\$1100\\:\\(Lorg\\/apache\\/catalina\\/servlets\\/CGIServlet\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\$SecureEntityResolver\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\$SecureEntityResolver\\.getExternalSubset\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\$SecureEntityResolver\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.service\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.doHead\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.doOptions\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.sendNotAllowed\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.doPost\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.doPut\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.executePartialPut\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Lorg\\/apache\\/catalina\\/servlets\\/DefaultServlet\\$Range\\;Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.doDelete\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.checkIfHeaders\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/catalina\\/WebResource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.serveResource\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;ZLjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.processBom\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/nio\\/charset\\/Charset\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.skip\\:\\(Ljava\\/io\\/InputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.doDirectoryRedirect\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.parseContentRange\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Lorg\\/apache\\/catalina\\/servlets\\/DefaultServlet\\$Range\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.parseRange\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/catalina\\/WebResource\\;\\)Ljava\\/util\\/ArrayList\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.render\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/WebResource\\;Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.renderXml\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/WebResource\\;Ljavax\\/xml\\/transform\\/Source\\;Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.renderHtml\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/WebResource\\;Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.findXsltSource\\:\\(Lorg\\/apache\\/catalina\\/WebResource\\;\\)Ljavax\\/xml\\/transform\\/Source\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.checkIfMatch\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/catalina\\/WebResource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.checkIfNoneMatch\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/catalina\\/WebResource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.checkIfUnmodifiedSince\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/catalina\\/WebResource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljavax\\/servlet\\/ServletOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/PrintWriter\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.copy\\:\\(Lorg\\/apache\\/catalina\\/WebResource\\;Ljavax\\/servlet\\/ServletOutputStream\\;Lorg\\/apache\\/catalina\\/servlets\\/DefaultServlet\\$Range\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.DefaultServlet\\.copy\\:\\(Lorg\\/apache\\/catalina\\/WebResource\\;Ljavax\\/servlet\\/ServletOutputStream\\;Ljava\\/util\\/Iterator\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.getDocumentBuilder\\:\\(\\)Ljavax\\/xml\\/parsers\\/DocumentBuilder\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.service\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.checkIfHeaders\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Lorg\\/apache\\/catalina\\/WebResource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.doOptions\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.doPropfind\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.doProppatch\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.doMkcol\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.doDelete\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.doPut\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.doCopy\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.doMove\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.doLock\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.doUnlock\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.copyResource\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.deleteResource\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.deleteResource\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.servlets\\.WebdavServlet\\.sendReport\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/util\\/Hashtable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.FileStore\\.getSize\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.FileStore\\.clear\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.FileStore\\.keys\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.FileStore\\.load\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.FileStore\\.remove\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.FileStore\\.save\\:\\(Lorg\\/apache\\/catalina\\/Session\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.FileStore\\.directory\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.FileStore\\.file\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.expiredKeys\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.keys\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.keys\\:\\(Z\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.getSize\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.load\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.remove\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.remove\\:\\(Ljava\\/lang\\/String\\;Ljava\\/sql\\/Connection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.clear\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.save\\:\\(Lorg\\/apache\\/catalina\\/Session\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.open\\:\\(\\)Ljava\\/sql\\/Connection\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.JDBCStore\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.util.regex.PatternSyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.ManagerBase\\.setSessionAttributeNameFilter\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.regex.PatternSyntaxException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.ManagerBase\\.setSessionAttributeValueClassNameFilter\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.ManagerBase\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.ManagerBase\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.ManagerBase\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.ManagerBase\\.findSession\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\$PrivilegedStoreClear\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\$PrivilegedStoreClear\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\$PrivilegedStoreKeys\\.run\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\$PrivilegedStoreKeys\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\$PrivilegedStoreLoad\\.run\\:\\(\\)Lorg\\/apache\\/catalina\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\$PrivilegedStoreLoad\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\$PrivilegedStoreRemove\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\$PrivilegedStoreRemove\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\$PrivilegedStoreSave\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\$PrivilegedStoreSave\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\.findSession\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\.swapIn\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\.loadSessionFromStore\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\.securedStoreLoad\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\.swapOut\\:\\(Lorg\\/apache\\/catalina\\/Session\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\.writeSession\\:\\(Lorg\\/apache\\/catalina\\/Session\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.PersistentManagerBase\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardManager\\$PrivilegedDoLoad\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardManager\\$PrivilegedDoLoad\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardManager\\$PrivilegedDoUnload\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardManager\\$PrivilegedDoUnload\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardManager\\.load\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardManager\\.doLoad\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardManager\\.unload\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardManager\\.doUnload\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardManager\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardManager\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardSession\\.readObjectData\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardSession\\.writeObjectData\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardSession\\.doReadObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StandardSession\\.doWriteObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StoreBase\\.expiredKeys\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StoreBase\\.getObjectInputStream\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/ObjectInputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StoreBase\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.session\\.StoreBase\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.ExpressionParseTree\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/ssi\\/SSIMediator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.ExpressionParseTree\\.parseExpression\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.ResponseIncludeWrapper\\.flushOutputStreamOrWriter\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.ResponseIncludeWrapper\\.getWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.ResponseIncludeWrapper\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.ssi.SSIStopProcessingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSICommand\\.process\\:\\(Lorg\\/apache\\/catalina\\/ssi\\/SSIMediator\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/PrintWriter\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.ssi.SSIStopProcessingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIConditional\\.process\\:\\(Lorg\\/apache\\/catalina\\/ssi\\/SSIMediator\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/PrintWriter\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.ssi.SSIStopProcessingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIConditional\\.evaluateArguments\\:\\(\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/ssi\\/SSIMediator\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIExternalResolver\\.getFileSize\\:\\(Ljava\\/lang\\/String\\;Z\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIExternalResolver\\.getFileLastModified\\:\\(Ljava\\/lang\\/String\\;Z\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIExternalResolver\\.getFileText\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIFilter\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIMediator\\.getFileSize\\:\\(Ljava\\/lang\\/String\\;Z\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIMediator\\.getFileLastModified\\:\\(Ljava\\/lang\\/String\\;Z\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIMediator\\.getFileText\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIProcessor\\.process\\:\\(Ljava\\/io\\/Reader\\;JLjava\\/io\\/PrintWriter\\;\\)J"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServlet\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServlet\\.doGet\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServlet\\.doPost\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServlet\\.requestHandler\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServlet\\.processSSI\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServletExternalResolver\\.getAbsolutePath\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServletExternalResolver\\.getServletContextAndPathFromNonVirtualPath\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/ssi\\/SSIServletExternalResolver\\$ServletContextAndPath\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServletExternalResolver\\.getServletContextAndPathFromVirtualPath\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/catalina\\/ssi\\/SSIServletExternalResolver\\$ServletContextAndPath\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServletExternalResolver\\.getServletContextAndPath\\:\\(Ljava\\/lang\\/String\\;Z\\)Lorg\\/apache\\/catalina\\/ssi\\/SSIServletExternalResolver\\$ServletContextAndPath\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServletExternalResolver\\.getURLConnection\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServletExternalResolver\\.getFileLastModified\\:\\(Ljava\\/lang\\/String\\;Z\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServletExternalResolver\\.getFileSize\\:\\(Ljava\\/lang\\/String\\;Z\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSIServletExternalResolver\\.getFileText\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.ssi.SSIStopProcessingException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.ssi\\.SSISet\\.process\\:\\(Lorg\\/apache\\/catalina\\/ssi\\/SSIMediator\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;Ljava\\/io\\/PrintWriter\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.createClassLoader\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.load\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.getServer\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.init\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.stopServer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.stopServer\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.setAwait\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Bootstrap\\.getAwait\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.CertificateCreateRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.CertificateCreateRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ClassLoaderFactory\\.createClassLoader\\:\\(\\[Ljava\\/io\\/File\\;\\[Ljava\\/io\\/File\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ClassLoaderFactory\\.createClassLoader\\:\\(Ljava\\/util\\/List\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ClassLoaderFactory\\.validateFile\\:\\(Ljava\\/io\\/File\\;Lorg\\/apache\\/catalina\\/startup\\/ClassLoaderFactory\\$RepositoryType\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ClassLoaderFactory\\.buildClassLoaderUrl\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ClassLoaderFactory\\.buildClassLoaderUrl\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ConnectorCreateRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ConnectorCreateRule\\.setExecutor\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Connector\\;Lorg\\/apache\\/catalina\\/Executor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ConnectorCreateRule\\.setSSLImplementationName\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Connector\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ConnectorCreateRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ContextConfig\\.fixDocBase\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ContextConfig\\.processAnnotationsStream\\:\\(Ljava\\/io\\/InputStream\\;Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/WebXml\\;ZLjava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.CopyParentClassLoaderRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ExpandWar\\.expand\\:\\(Lorg\\/apache\\/catalina\\/Host\\;Ljava\\/net\\/URL\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ExpandWar\\.validate\\:\\(Lorg\\/apache\\/catalina\\/Host\\;Ljava\\/net\\/URL\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.ExpandWar\\.expand\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.FailedContext\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.FailedContext\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.LifecycleListenerRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.SetAllPropertiesRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.SetContextPropertiesRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.SetNextNamingRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.SetParentClassLoaderRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Tomcat\\$ExistingStandardWrapper\\.loadServlet\\:\\(\\)Ljavax\\/servlet\\/Servlet\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Tomcat\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Tomcat\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Tomcat\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.Tomcat\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.WebappServiceLoader\\.load\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.WebappServiceLoader\\.parseConfigFile\\:\\(Ljava\\/util\\/LinkedHashSet\\;Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.startup\\.WebappServiceLoader\\.loadServices\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/LinkedHashSet\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.users\\.MemoryUserDatabase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.users\\.MemoryUserDatabase\\.open\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.users\\.MemoryUserDatabase\\.save\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.users\\.MemoryUserDatabaseFactory\\.getObjectInstance\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Context\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.CustomObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.CustomObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/ClassLoader\\;Lorg\\/apache\\/juli\\/logging\\/Log\\;Ljava\\/util\\/regex\\/Pattern\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.CustomObjectInputStream\\.resolveClass\\:\\(Ljava\\/io\\/ObjectStreamClass\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.CustomObjectInputStream\\.resolveProxyClass\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.Extension\\.isNewer\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.ExtensionValidator\\.validateApplication\\:\\(Lorg\\/apache\\/catalina\\/WebResourceRoot\\;Lorg\\/apache\\/catalina\\/Context\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.ExtensionValidator\\.addSystemResource\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.ExtensionValidator\\.getManifest\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/util\\/jar\\/Manifest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.IOTools\\.flow\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/io\\/Writer\\;\\[C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.IOTools\\.flow\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.IOTools\\.flow\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.setState\\:\\(Lorg\\/apache\\/catalina\\/LifecycleState\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.setState\\:\\(Lorg\\/apache\\/catalina\\/LifecycleState\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.setStateInternal\\:\\(Lorg\\/apache\\/catalina\\/LifecycleState\\;Ljava\\/lang\\/Object\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.invalidTransition\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleBase\\.handleSubClassException\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleMBeanBase\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleMBeanBase\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleMBeanBase\\.preDeregister\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.LifecycleMBeanBase\\.preRegister\\:\\(Ljavax\\/management\\/MBeanServer\\;Ljavax\\/management\\/ObjectName\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.SessionIdGeneratorBase\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.SessionIdGeneratorBase\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.SessionIdGeneratorBase\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.SessionIdGeneratorBase\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.util\\.XMLWriter\\.sendData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.AbstractAccessLogValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.AbstractAccessLogValve\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.AbstractAccessLogValve\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.AccessLogValve\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.AccessLogValve\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.CrawlerSessionManagerValve\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.CrawlerSessionManagerValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ErrorReportValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ExtendedAccessLogValve\\$PatternTokenizer\\.getToken\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ExtendedAccessLogValve\\$PatternTokenizer\\.getParameter\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ExtendedAccessLogValve\\$PatternTokenizer\\.getWhiteSpaces\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ExtendedAccessLogValve\\$PatternTokenizer\\.getRemains\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ExtendedAccessLogValve\\.getLogElement\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/valves\\/ExtendedAccessLogValve\\$PatternTokenizer\\;\\)Lorg\\/apache\\/catalina\\/valves\\/AbstractAccessLogValve\\$AccessLogElement\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ExtendedAccessLogValve\\.getClientToServerElement\\:\\(Lorg\\/apache\\/catalina\\/valves\\/ExtendedAccessLogValve\\$PatternTokenizer\\;\\)Lorg\\/apache\\/catalina\\/valves\\/AbstractAccessLogValve\\$AccessLogElement\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ExtendedAccessLogValve\\.getServerToClientElement\\:\\(Lorg\\/apache\\/catalina\\/valves\\/ExtendedAccessLogValve\\$PatternTokenizer\\;\\)Lorg\\/apache\\/catalina\\/valves\\/AbstractAccessLogValve\\$AccessLogElement\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ExtendedAccessLogValve\\.getProxyElement\\:\\(Lorg\\/apache\\/catalina\\/valves\\/ExtendedAccessLogValve\\$PatternTokenizer\\;\\)Lorg\\/apache\\/catalina\\/valves\\/AbstractAccessLogValve\\$AccessLogElement\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ExtendedAccessLogValve\\.getXParameterElement\\:\\(Lorg\\/apache\\/catalina\\/valves\\/ExtendedAccessLogValve\\$PatternTokenizer\\;\\)Lorg\\/apache\\/catalina\\/valves\\/AbstractAccessLogValve\\$AccessLogElement\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.JDBCAccessLogValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.JDBCAccessLogValve\\.open\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.JDBCAccessLogValve\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.JDBCAccessLogValve\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.LoadBalancerDrainingValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.PersistentValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.RemoteAddrValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.RemoteCIDRValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.RemoteHostValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.RemoteIpValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.RequestFilterValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.RequestFilterValve\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.RequestFilterValve\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.RequestFilterValve\\.process\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.RequestFilterValve\\.denyRequest\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.SSLValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.SemaphoreValve\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.SemaphoreValve\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.SemaphoreValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.SemaphoreValve\\.permitDenied\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.StuckThreadDetectionValve\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.StuckThreadDetectionValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ValveBase\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ValveBase\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.ValveBase\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.rewrite\\.RewriteValve\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.rewrite\\.RewriteValve\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.rewrite\\.RewriteValve\\.setConfiguration\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.rewrite\\.RewriteValve\\.parse\\:\\(Ljava\\/io\\/BufferedReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.rewrite\\.RewriteValve\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.valves\\.rewrite\\.RewriteValve\\.invoke\\:\\(Lorg\\/apache\\/catalina\\/connector\\/Request\\;Lorg\\/apache\\/catalina\\/connector\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractArchiveResource\\$JarInputStreamWrapper\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractArchiveResource\\$JarInputStreamWrapper\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractArchiveResource\\$JarInputStreamWrapper\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractArchiveResource\\$JarInputStreamWrapper\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractArchiveResource\\$JarInputStreamWrapper\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractArchiveResource\\$JarInputStreamWrapper\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractArchiveResource\\$JarInputStreamWrapper\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractArchiveResourceSet\\.openJarFile\\:\\(\\)Ljava\\/util\\/jar\\/JarFile\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractFileResourceSet\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractResourceSet\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractResourceSet\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractResourceSet\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractSingleArchiveResourceSet\\.\\<init\\>\\:\\(Lorg\\/apache\\/catalina\\/WebResourceRoot\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.AbstractSingleArchiveResourceSet\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.ClasspathURLStreamHandler\\.openConnection\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.DirResourceSet\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.EmptyResourceSet\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.EmptyResourceSet\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.EmptyResourceSet\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.EmptyResourceSet\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.ExtractingRoot\\.processWebInfLib\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.ExtractingRoot\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.JarResourceSet\\.\\<init\\>\\:\\(Lorg\\/apache\\/catalina\\/WebResourceRoot\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.JarWarResourceSet\\.\\<init\\>\\:\\(Lorg\\/apache\\/catalina\\/WebResourceRoot\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.JarWarResourceSet\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.StandardRoot\\.processWebInfLib\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.StandardRoot\\.initInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.StandardRoot\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.StandardRoot\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.catalina.LifecycleException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.StandardRoot\\.destroyInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.TomcatJarInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.TrackedInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.TrackedInputStream\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.TrackedInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.TrackedInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.TrackedInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.TrackedInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.TrackedInputStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.WarResourceSet\\.\\<init\\>\\:\\(Lorg\\/apache\\/catalina\\/WebResourceRoot\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.war\\.Handler\\.openConnection\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.war\\.WarURLConnection\\.\\<init\\>\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.war\\.WarURLConnection\\.connect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.war\\.WarURLConnection\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.catalina\\.webresources\\.war\\.WarURLConnection\\.getPermission\\:\\(\\)Ljava\\/security\\/Permission\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProcessor\\.prepareResponse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProcessor\\.finishResponse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProcessor\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProcessor\\.sslReHandShake\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProcessor\\.flushBufferedWrite\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProcessorLight\\.process\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketWrapperBase\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketEvent\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/AbstractEndpoint\\$Handler\\$SocketState\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProcessorLight\\.service\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketWrapperBase\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/AbstractEndpoint\\$Handler\\$SocketState\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProtocol\\.preRegister\\:\\(Ljavax\\/management\\/MBeanServer\\;Ljavax\\/management\\/ObjectName\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProtocol\\.preDeregister\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MalformedObjectNameException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProtocol\\.createObjectName\\:\\(\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProtocol\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProtocol\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProtocol\\.pause\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProtocol\\.resume\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProtocol\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.AbstractProtocol\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.Adapter\\.service\\:\\(Lorg\\/apache\\/coyote\\/Request\\;Lorg\\/apache\\/coyote\\/Response\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.Adapter\\.prepare\\:\\(Lorg\\/apache\\/coyote\\/Request\\;Lorg\\/apache\\/coyote\\/Response\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.Adapter\\.asyncDispatch\\:\\(Lorg\\/apache\\/coyote\\/Request\\;Lorg\\/apache\\/coyote\\/Response\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketEvent\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.InputBuffer\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.OutputBuffer\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.Processor\\.process\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketWrapperBase\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketEvent\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/AbstractEndpoint\\$Handler\\$SocketState\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ProtocolHandler\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ProtocolHandler\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ProtocolHandler\\.pause\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ProtocolHandler\\.resume\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ProtocolHandler\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ProtocolHandler\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.Request\\.getCharset\\:\\(\\)Ljava\\/nio\\/charset\\/Charset\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.Request\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.Response\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.Response\\.setCharacterEncoding\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.Response\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.Response\\.onWritePossible\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\$SocketInputBuffer\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\$SocketOutputBuffer\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.flushBufferedWrite\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.service\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketWrapperBase\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/AbstractEndpoint\\$Handler\\$SocketState\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.receive\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.readMessage\\:\\(Lorg\\/apache\\/coyote\\/ajp\\/AjpMessage\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.refillReadBuffer\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.prepareResponse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.finishResponse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.read\\:\\(\\[BIIZ\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.writeData\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.ajp\\.AjpProcessor\\.access\\$600\\:\\(Lorg\\/apache\\/coyote\\/ajp\\/AjpProcessor\\;Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.AbstractHttp11Protocol\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11InputBuffer\\$SocketInputBuffer\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11InputBuffer\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11InputBuffer\\.parseRequestLine\\:\\(ZII\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11InputBuffer\\.parseHeaders\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11InputBuffer\\.endRequest\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11InputBuffer\\.fill\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11InputBuffer\\.parseHeader\\:\\(\\)Lorg\\/apache\\/coyote\\/http11\\/Http11InputBuffer\\$HeaderParseStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11InputBuffer\\.skipLine\\:\\(\\)Lorg\\/apache\\/coyote\\/http11\\/Http11InputBuffer\\$HeaderParseStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11InputBuffer\\.access\\$300\\:\\(Lorg\\/apache\\/coyote\\/http11\\/Http11InputBuffer\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11OutputBuffer\\$SocketOutputBuffer\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11OutputBuffer\\$SocketOutputBuffer\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11OutputBuffer\\$SocketOutputBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11OutputBuffer\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11OutputBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11OutputBuffer\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11OutputBuffer\\.sendAck\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11OutputBuffer\\.commit\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11OutputBuffer\\.flushBuffer\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11Processor\\.service\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketWrapperBase\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/AbstractEndpoint\\$Handler\\$SocketState\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11Processor\\.cloneRequest\\:\\(Lorg\\/apache\\/coyote\\/Request\\;\\)Lorg\\/apache\\/coyote\\/Request\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11Processor\\.prepareResponse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11Processor\\.flushBufferedWrite\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11Processor\\.finishResponse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11Processor\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.Http11Processor\\.sslReHandShake\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.HttpOutputBuffer\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.HttpOutputBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.InputFilter\\.end\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.BufferedInputFilter\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.BufferedInputFilter\\.end\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedInputFilter\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedInputFilter\\.end\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedInputFilter\\.readBytes\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedInputFilter\\.parseChunkHeader\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedInputFilter\\.parseCRLF\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedInputFilter\\.parseEndChunk\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedInputFilter\\.parseHeader\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedInputFilter\\.throwIOException\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedInputFilter\\.throwEOFException\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedInputFilter\\.checkError\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedOutputFilter\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedOutputFilter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.ChunkedOutputFilter\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.GzipOutputFilter\\$FakeOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.GzipOutputFilter\\$FakeOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.GzipOutputFilter\\$FakeOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.GzipOutputFilter\\$FakeOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.GzipOutputFilter\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.GzipOutputFilter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.GzipOutputFilter\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.IdentityInputFilter\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.IdentityInputFilter\\.end\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.IdentityOutputFilter\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.IdentityOutputFilter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.IdentityOutputFilter\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.SavedRequestInputFilter\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.SavedRequestInputFilter\\.end\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.VoidInputFilter\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.VoidInputFilter\\.end\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.VoidOutputFilter\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.VoidOutputFilter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.filters\\.VoidOutputFilter\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeProcessorBase\\.service\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketWrapperBase\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/AbstractEndpoint\\$Handler\\$SocketState\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeProcessorExternal\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeProcessorExternal\\.getInputStream\\:\\(\\)Ljavax\\/servlet\\/ServletInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeProcessorExternal\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeProcessorInternal\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeProcessorInternal\\.getInputStream\\:\\(\\)Ljavax\\/servlet\\/ServletInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeProcessorInternal\\.getOutputStream\\:\\(\\)Ljavax\\/servlet\\/ServletOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletInputStream\\.readLine\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletInputStream\\.readInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletOutputStream\\.flushInternal\\:\\(ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http11\\.upgrade\\.UpgradeServletOutputStream\\.writeInternal\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.AbstractStream\\.incrementWindowSize\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.ConnectionSettingsBase\\.set\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Setting\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.ConnectionSettingsBase\\.validateHeaderTableSize\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.ConnectionSettingsBase\\.validateEnablePush\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.ConnectionSettingsBase\\.validateInitialWindowSize\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.ConnectionSettingsBase\\.validateMaxFrameSize\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.ConnectionSettingsBase\\.throwException\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/coyote\\/http2\\/Http2Error\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.ConnectionSettingsLocal\\.throwException\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/coyote\\/http2\\/Http2Error\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.ConnectionSettingsRemote\\.throwException\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/coyote\\/http2\\/Http2Error\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HPackHuffman\\.decode\\:\\(Ljava\\/nio\\/ByteBuffer\\;ILjava\\/lang\\/StringBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.StreamException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HeaderSink\\.validateHeaders\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Hpack\\.decodeInteger\\:\\(Ljava\\/nio\\/ByteBuffer\\;I\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\$HeaderEmitter\\.emitHeader\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.StreamException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\$HeaderEmitter\\.validateHeaders\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\.decode\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\.handleMaxMemorySizeChange\\:\\(Ljava\\/nio\\/ByteBuffer\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\.readHeaderName\\:\\(Ljava\\/nio\\/ByteBuffer\\;I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\.readHpackString\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\.readHuffmanString\\:\\(ILjava\\/nio\\/ByteBuffer\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\.handleIndexedHeaderName\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\.handleIndex\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\.getRealIndex\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\.addStaticTableEntry\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.HpackDecoder\\.emitHeader\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncParser\\.readFrame\\:\\(ZLorg\\/apache\\/coyote\\/http2\\/FrameType\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncParser\\.handleAsyncException\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\$AsyncHeaderFrameBuffers\\.endFrame\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\$AsyncHeaderFrameBuffers\\.endHeaders\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\$AsyncPingManager\\.sendPing\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\$AsyncPingManager\\.receivePing\\:\\(\\[BZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.sendStreamReset\\:\\(Lorg\\/apache\\/coyote\\/http2\\/StreamException\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.writeGoAwayFrame\\:\\(IJ\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.writeHeaders\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Stream\\;ILorg\\/apache\\/tomcat\\/util\\/http\\/MimeHeaders\\;ZI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.writeBody\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Stream\\;Ljava\\/nio\\/ByteBuffer\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.writeWindowUpdate\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Stream\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.settingsEnd\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.handleAsyncException\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.processWrites\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.swallowed\\:\\(ILorg\\/apache\\/coyote\\/http2\\/FrameType\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.incrementWindowSize\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.pingReceive\\:\\(\\[BZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.setting\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Setting\\;J\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.reset\\:\\(IJ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.headersEnd\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.reprioritise\\:\\(IIZI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.headersStart\\:\\(IZ\\)Lorg\\/apache\\/coyote\\/http2\\/HpackDecoder\\$HeaderEmitter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.swallowedPadding\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.receivedEndOfStream\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.endRequestBodyFrame\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.startRequestBodyFrame\\:\\(II\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.fill\\:\\(Z\\[BII\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2AsyncUpgradeHandler\\.access\\$300\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Http2AsyncUpgradeHandler\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2OutputBuffer\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2OutputBuffer\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2OutputBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Input\\.fill\\:\\(Z\\[BII\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Input\\.fill\\:\\(Z\\[B\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Input\\.fill\\:\\(ZLjava\\/nio\\/ByteBuffer\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.startRequestBodyFrame\\:\\(II\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.endRequestBodyFrame\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.receivedEndOfStream\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.swallowedPadding\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.headersStart\\:\\(IZ\\)Lorg\\/apache\\/coyote\\/http2\\/HpackDecoder\\$HeaderEmitter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.headersEnd\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.reprioritise\\:\\(IIZI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.reset\\:\\(IJ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.setting\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Setting\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.settingsEnd\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.pingReceive\\:\\(\\[BZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.incrementWindowSize\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\$Output\\.swallowed\\:\\(ILorg\\/apache\\/coyote\\/http2\\/FrameType\\;II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readFrame\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readFrame\\:\\(ZLorg\\/apache\\/coyote\\/http2\\/FrameType\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readDataFrame\\:\\(IIILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readHeadersFrame\\:\\(IIILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readPriorityFrame\\:\\(ILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readRstFrame\\:\\(ILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readSettingsFrame\\:\\(IILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readPushPromiseFrame\\:\\(ILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readPingFrame\\:\\(ILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readGoawayFrame\\:\\(ILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readWindowUpdateFrame\\:\\(ILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readContinuationFrame\\:\\(IIILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readHeaderPayload\\:\\(IILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readUnknownFrame\\:\\(ILorg\\/apache\\/coyote\\/http2\\/FrameType\\;IILjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.swallow\\:\\(IIZLjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.onHeadersComplete\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.validateFrame\\:\\(Lorg\\/apache\\/coyote\\/http2\\/FrameType\\;Lorg\\/apache\\/coyote\\/http2\\/FrameType\\;III\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2Parser\\.readConnectionPreface\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\$DefaultHeaderFrameBuffers\\.endFrame\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\$HeaderFrameBuffers\\.endFrame\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\$HeaderFrameBuffers\\.endHeaders\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.checkPauseState\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.sendStreamReset\\:\\(Lorg\\/apache\\/coyote\\/http2\\/StreamException\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.writeGoAwayFrame\\:\\(IJ\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.writeHeaders\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Stream\\;ILorg\\/apache\\/tomcat\\/util\\/http\\/MimeHeaders\\;ZI\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.doWriteHeaders\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Stream\\;ILorg\\/apache\\/tomcat\\/util\\/http\\/MimeHeaders\\;ZI\\)Lorg\\/apache\\/coyote\\/http2\\/Http2UpgradeHandler\\$HeaderFrameBuffers\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.writeBody\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Stream\\;Ljava\\/nio\\/ByteBuffer\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.handleAppInitiatedIOException\\:\\(Ljava\\/io\\/IOException\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.writeWindowUpdate\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Stream\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.processWrites\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.reserveWindowSize\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Stream\\;IZ\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.incrementWindowSize\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.getStream\\:\\(IZ\\)Lorg\\/apache\\/coyote\\/http2\\/Stream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.createRemoteStream\\:\\(I\\)Lorg\\/apache\\/coyote\\/http2\\/Stream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.push\\:\\(Lorg\\/apache\\/coyote\\/Request\\;Lorg\\/apache\\/coyote\\/http2\\/Stream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.fill\\:\\(Z\\[BII\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.startRequestBodyFrame\\:\\(II\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.endRequestBodyFrame\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.receivedEndOfStream\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.swallowedPadding\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.headersStart\\:\\(IZ\\)Lorg\\/apache\\/coyote\\/http2\\/HpackDecoder\\$HeaderEmitter\\;"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.closeIdleStreams\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.reprioritise\\:\\(IIZI\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.headersEnd\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.reset\\:\\(IJ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.setting\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Setting\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.settingsEnd\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.pingReceive\\:\\(\\[BZ\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.incrementWindowSize\\:\\(II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Http2UpgradeHandler\\.swallowed\\:\\(ILorg\\/apache\\/coyote\\/http2\\/FrameType\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\$PrivilegedPush\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\$PrivilegedPush\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\$StreamInputBuffer\\.doRead\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/ApplicationBufferHandler\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\$StreamOutputBuffer\\.doWrite\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\$StreamOutputBuffer\\.flush\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\$StreamOutputBuffer\\.flush\\:\\(ZZ\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\$StreamOutputBuffer\\.end\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\$StreamOutputBuffer\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\$StreamOutputBuffer\\.writeFromBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.checkState\\:\\(Lorg\\/apache\\/coyote\\/http2\\/FrameType\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.incrementWindowSize\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.reserveWindowSize\\:\\(IZ\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.HpackException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.emitHeader\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.StreamException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.validateHeaders\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.receivedEndOfHeaders\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.writeHeaders\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.writeTrailers\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.writeAck\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.receivedStartOfHeaders\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.receivedData\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.ConnectionException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.receivedEndOfStream\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.flush\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.push\\:\\(Lorg\\/apache\\/coyote\\/Request\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.Stream\\.push\\:\\(Lorg\\/apache\\/coyote\\/http2\\/Http2UpgradeHandler\\;Lorg\\/apache\\/coyote\\/Request\\;Lorg\\/apache\\/coyote\\/http2\\/Stream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.StreamProcessor\\.prepareResponse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.StreamProcessor\\.finishResponse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.StreamProcessor\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.StreamProcessor\\.service\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketWrapperBase\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/AbstractEndpoint\\$Handler\\$SocketState\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.StreamProcessor\\.flushBufferedWrite\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.coyote.http2.Http2Exception"
  ], 
  "methodRegex": "org\\.apache\\.coyote\\.http2\\.StreamStateMachine\\.checkFrameType\\:\\(Lorg\\/apache\\/coyote\\/http2\\/FrameType\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.juli\\.ClassLoaderLogManager\\.readConfiguration\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.juli\\.ClassLoaderLogManager\\.readConfiguration\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.juli\\.ClassLoaderLogManager\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.juli\\.ClassLoaderLogManager\\.readConfiguration\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.juli\\.ClassLoaderLogManager\\.readConfiguration\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.juli.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.juli\\.logging\\.LogFactory\\.getInstance\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/juli\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.juli.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.juli\\.logging\\.LogFactory\\.getInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/juli\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.juli.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.juli\\.logging\\.LogFactory\\.getFactory\\:\\(\\)Lorg\\/apache\\/juli\\/logging\\/LogFactory\\;"
 }, 
 {
  "exceptions": [
   "org.apache.juli.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.juli\\.logging\\.LogFactory\\.getLog\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/apache\\/juli\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "org.apache.juli.logging.LogConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.juli\\.logging\\.LogFactory\\.getLog\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/juli\\/logging\\/Log\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.ContextBindings\\.bindThread\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.ContextBindings\\.getThread\\:\\(\\)Ljavax\\/naming\\/Context\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.ContextBindings\\.getThreadName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.ContextBindings\\.bindClassLoader\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.ContextBindings\\.getClassLoader\\:\\(\\)Ljavax\\/naming\\/Context\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.ContextBindings\\.getClassLoaderName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NameParserImpl\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/Name\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.lookup\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.lookup\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.bind\\:\\(Ljavax\\/naming\\/Name\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.bind\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.rebind\\:\\(Ljavax\\/naming\\/Name\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.rebind\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.unbind\\:\\(Ljavax\\/naming\\/Name\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.unbind\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.rename\\:\\(Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Name\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.rename\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.list\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.list\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.listBindings\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.listBindings\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.destroySubcontext\\:\\(Ljavax\\/naming\\/Name\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.destroySubcontext\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.createSubcontext\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/Context\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.createSubcontext\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/Context\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.lookupLink\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.lookupLink\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.getNameParser\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/NameParser\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.getNameParser\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/NameParser\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.composeName\\:\\(Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/Name\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.getNameInNamespace\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.lookup\\:\\(Ljavax\\/naming\\/Name\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.bind\\:\\(Ljavax\\/naming\\/Name\\;Ljava\\/lang\\/Object\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContext\\.checkWritable\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContextBindingsEnumeration\\.next\\:\\(\\)Ljavax\\/naming\\/Binding\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContextBindingsEnumeration\\.hasMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContextBindingsEnumeration\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContextBindingsEnumeration\\.nextElementInternal\\:\\(\\)Ljavax\\/naming\\/Binding\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContextBindingsEnumeration\\.next\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContextEnumeration\\.next\\:\\(\\)Ljavax\\/naming\\/NameClassPair\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContextEnumeration\\.hasMore\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContextEnumeration\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.NamingContextEnumeration\\.next\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.lookup\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.lookup\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.bind\\:\\(Ljavax\\/naming\\/Name\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.bind\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.rebind\\:\\(Ljavax\\/naming\\/Name\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.rebind\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.unbind\\:\\(Ljavax\\/naming\\/Name\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.unbind\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.rename\\:\\(Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Name\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.rename\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.list\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.list\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.listBindings\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.listBindings\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.destroySubcontext\\:\\(Ljavax\\/naming\\/Name\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.destroySubcontext\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.createSubcontext\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/Context\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.createSubcontext\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/Context\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.lookupLink\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.lookupLink\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.getNameParser\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/NameParser\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.getNameParser\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/NameParser\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.composeName\\:\\(Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/Name\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.composeName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.addToEnvironment\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.removeFromEnvironment\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.getEnvironment\\:\\(\\)Ljava\\/util\\/Hashtable\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.getNameInNamespace\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.getBoundContext\\:\\(\\)Ljavax\\/naming\\/Context\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.parseName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.SelectorContext\\.parseName\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/Name\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.BeanFactory\\.getObjectInstance\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Context\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.DataSourceLinkFactory\\$DataSourceHandler\\.\\<init\\>\\:\\(Ljavax\\/sql\\/DataSource\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.DataSourceLinkFactory\\$DataSourceHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.sql.SQLException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.DataSourceLinkFactory\\$DataSourceHandler\\.unwrap\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.DataSourceLinkFactory\\.getObjectInstance\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Context\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.DataSourceLinkFactory\\.wrapDataSource\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.EjbFactory\\.getDefaultFactory\\:\\(Ljavax\\/naming\\/Reference\\;\\)Ljavax\\/naming\\/spi\\/ObjectFactory\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.EjbFactory\\.getLinked\\:\\(Ljavax\\/naming\\/Reference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.FactoryBase\\.getObjectInstance\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Context\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.FactoryBase\\.getDefaultFactory\\:\\(Ljavax\\/naming\\/Reference\\;\\)Ljavax\\/naming\\/spi\\/ObjectFactory\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.FactoryBase\\.getLinked\\:\\(Ljavax\\/naming\\/Reference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.LookupFactory\\.getObjectInstance\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Context\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.MailSessionFactory\\.getObjectInstance\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Context\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.OpenEjbFactory\\.getObjectInstance\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Context\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.ResourceFactory\\.getDefaultFactory\\:\\(Ljavax\\/naming\\/Reference\\;\\)Ljavax\\/naming\\/spi\\/ObjectFactory\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.ResourceLinkFactory\\.getObjectInstance\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Context\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.factory\\.SendMailFactory\\.getObjectInstance\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Context\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.java\\.javaURLContextFactory\\.getObjectInstance\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Context\\;Ljava\\/util\\/Hashtable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.naming\\.java\\.javaURLContextFactory\\.getInitialContext\\:\\(Ljava\\/util\\/Hashtable\\;\\)Ljavax\\/naming\\/Context\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException", 
   "java.lang.InstantiationException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.InstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException", 
   "java.lang.InstantiationException", 
   "java.lang.ClassNotFoundException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.InstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException", 
   "java.lang.InstantiationException", 
   "java.lang.ClassNotFoundException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.NoSuchMethodException", 
   "java.lang.SecurityException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.InstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.InstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.InstanceManager\\.destroyInstance\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.Jar\\.getInputStream\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.Jar\\.getLastModified\\:\\(Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.Jar\\.getEntryInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.Jar\\.getManifest\\:\\(\\)Ljava\\/util\\/jar\\/Manifest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.Jar\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.JarScannerCallback\\.scan\\:\\(Lorg\\/apache\\/tomcat\\/Jar\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.JarScannerCallback\\.scan\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.JarScannerCallback\\.scanWebInfClasses\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException", 
   "java.lang.InstantiationException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.SimpleInstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException", 
   "java.lang.InstantiationException", 
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.SimpleInstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException", 
   "java.lang.InstantiationException", 
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.SimpleInstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.SimpleInstanceManager\\.newInstance\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.SimpleInstanceManager\\.destroyInstance\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Address\\.info\\:\\(Ljava\\/lang\\/String\\;IIIJ\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Address\\.get\\:\\(IJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Directory\\.open\\:\\(Ljava\\/lang\\/String\\;J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.File\\.open\\:\\(Ljava\\/lang\\/String\\;IIJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.File\\.mktemp\\:\\(Ljava\\/lang\\/String\\;IJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.File\\.seek\\:\\(JIJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.File\\.getc\\:\\(J\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.File\\.pipeTimeoutGet\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.File\\.dup\\:\\(JJJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Global\\.create\\:\\(Ljava\\/lang\\/String\\;IJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Global\\.childInit\\:\\(Ljava\\/lang\\/String\\;J\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Library\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Library\\.initialize\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Local\\.create\\:\\(Ljava\\/lang\\/String\\;J\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Local\\.accept\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Lock\\.create\\:\\(Ljava\\/lang\\/String\\;IJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Lock\\.childInit\\:\\(Ljava\\/lang\\/String\\;J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Mmap\\.create\\:\\(JJJIJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Mmap\\.dup\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Mmap\\.offset\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Poll\\.create\\:\\(IJIJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Procattr\\.create\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Registry\\.create\\:\\(ILjava\\/lang\\/String\\;IJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Registry\\.open\\:\\(ILjava\\/lang\\/String\\;IJ\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Registry\\.getValueI\\:\\(JLjava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Registry\\.getValueJ\\:\\(JLjava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Registry\\.getValueS\\:\\(JLjava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Registry\\.getValueA\\:\\(JLjava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Registry\\.getValueB\\:\\(JLjava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Registry\\.enumKeys\\:\\(J\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Registry\\.enumValues\\:\\(J\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSL\\.fipsModeGet\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSL\\.fipsModeSet\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSL\\.newBIO\\:\\(JLorg\\/apache\\/tomcat\\/jni\\/BIOCallback\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSL\\.setCipherSuites\\:\\(JLjava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLConf\\.make\\:\\(JI\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLConf\\.check\\:\\(JLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLConf\\.apply\\:\\(JLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLContext\\.make\\:\\(JII\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLContext\\.setCipherSuite\\:\\(JLjava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLContext\\.setCARevocation\\:\\(JLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLContext\\.setCertificate\\:\\(JLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;I\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLContext\\.setCACertificate\\:\\(JLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLContext\\.setTmpDH\\:\\(JLjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLContext\\.setTmpECDHByCurveName\\:\\(JLjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLSocket\\.attach\\:\\(JJ\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLSocket\\.getInfoB\\:\\(JI\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLSocket\\.getInfoS\\:\\(JI\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.SSLSocket\\.getInfoI\\:\\(JI\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Shm\\.create\\:\\(JLjava\\/lang\\/String\\;J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Shm\\.attach\\:\\(Ljava\\/lang\\/String\\;J\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Socket\\.create\\:\\(IIIJ\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Socket\\.acceptx\\:\\(JJ\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Socket\\.accept\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Socket\\.optGet\\:\\(JI\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Socket\\.timeoutGet\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.Socket\\.pool\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.User\\.uidCurrent\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.User\\.gidCurrent\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.User\\.uid\\:\\(Ljava\\/lang\\/String\\;J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.User\\.usergid\\:\\(Ljava\\/lang\\/String\\;J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.User\\.gid\\:\\(Ljava\\/lang\\/String\\;J\\)J"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.User\\.username\\:\\(JJ\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.User\\.groupname\\:\\(JJ\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.jni.Error"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.jni\\.User\\.homepath\\:\\(Ljava\\/lang\\/String\\;J\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.IntrospectionUtils\\.callMethod1\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.IntrospectionUtils\\.callMethodN\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.AnnotationEntry\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInput\\;Lorg\\/apache\\/tomcat\\/util\\/bcel\\/classfile\\/ConstantPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.Annotations\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInput\\;Lorg\\/apache\\/tomcat\\/util\\/bcel\\/classfile\\/ConstantPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ClassParser\\.parse\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/bcel\\/classfile\\/JavaClass\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ClassParser\\.readAttributes\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ClassParser\\.readClassInfo\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ClassParser\\.readConstantPool\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ClassParser\\.readFields\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ClassParser\\.readID\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ClassParser\\.readInterfaces\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ClassParser\\.readMethods\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ClassParser\\.readVersion\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.Constant\\.readConstant\\:\\(Ljava\\/io\\/DataInput\\;\\)Lorg\\/apache\\/tomcat\\/util\\/bcel\\/classfile\\/Constant\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ConstantClass\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ConstantDouble\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ConstantFloat\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ConstantInteger\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ConstantLong\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ConstantPool\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.bcel.classfile.ClassFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ConstantPool\\.getConstant\\:\\(IB\\)Lorg\\/apache\\/tomcat\\/util\\/bcel\\/classfile\\/Constant\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ConstantUtf8\\.getInstance\\:\\(Ljava\\/io\\/DataInput\\;\\)Lorg\\/apache\\/tomcat\\/util\\/bcel\\/classfile\\/ConstantUtf8\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ElementValue\\.readElementValue\\:\\(Ljava\\/io\\/DataInput\\;Lorg\\/apache\\/tomcat\\/util\\/bcel\\/classfile\\/ConstantPool\\;\\)Lorg\\/apache\\/tomcat\\/util\\/bcel\\/classfile\\/ElementValue\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.ElementValuePair\\.\\<init\\>\\:\\(Ljava\\/io\\/DataInput\\;Lorg\\/apache\\/tomcat\\/util\\/bcel\\/classfile\\/ConstantPool\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.Utility\\.skipFully\\:\\(Ljava\\/io\\/DataInput\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.Utility\\.swallowFieldOrMethod\\:\\(Ljava\\/io\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.bcel\\.classfile\\.Utility\\.swallowAttribute\\:\\(Ljava\\/io\\/DataInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.Ascii\\.parseLong\\:\\(\\[BII\\)J"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.B2CConverter\\.getCharset\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/nio\\/charset\\/Charset\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.B2CConverter\\.convert\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/ByteChunk\\;Lorg\\/apache\\/tomcat\\/util\\/buf\\/CharChunk\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.B2CConverter\\.convert\\:\\(Ljava\\/nio\\/ByteBuffer\\;Ljava\\/nio\\/CharBuffer\\;Lorg\\/apache\\/tomcat\\/util\\/buf\\/ByteChunk\\$ByteInputChannel\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\$ByteInputChannel\\.realReadBytes\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\$ByteOutputChannel\\.realWriteBytes\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\$ByteOutputChannel\\.realWriteBytes\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.append\\:\\(B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.append\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/ByteChunk\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.append\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.append\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.substract\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.subtract\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.substractB\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.subtractB\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.substract\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.subtract\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.substract\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.subtract\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.checkEof\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.ByteChunk\\.flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.C2BConverter\\.convert\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/CharChunk\\;Lorg\\/apache\\/tomcat\\/util\\/buf\\/ByteChunk\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.C2BConverter\\.convert\\:\\(Ljava\\/nio\\/CharBuffer\\;Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\$CharInputChannel\\.realReadChars\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\$CharOutputChannel\\.realWriteChars\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.append\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.append\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/CharChunk\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.append\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.append\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.append\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.substract\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.subtract\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.substract\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.subtract\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.checkEof\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.CharChunk\\.flushBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.MessageBytes\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.MessageBytes\\.duplicate\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/MessageBytes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UDecoder\\.convert\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/ByteChunk\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UDecoder\\.convert\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/CharChunk\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UDecoder\\.convert\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/MessageBytes\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UEncoder\\.encodeURL\\:\\(Ljava\\/lang\\/String\\;II\\)Lorg\\/apache\\/tomcat\\/util\\/buf\\/CharChunk\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UEncoder\\.urlEncode\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/CharChunk\\;Lorg\\/apache\\/tomcat\\/util\\/buf\\/ByteChunk\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UriUtil\\.buildJarUrl\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UriUtil\\.buildJarUrl\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UriUtil\\.buildJarUrl\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UriUtil\\.buildJarUrl\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UriUtil\\.buildJarSafeUrl\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.buf\\.UriUtil\\.warToJar\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.compat\\.Jre9Compat\\.disableCachingForJarUrlConnections\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.compat\\.Jre9Compat\\.jarFileNewInstance\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/jar\\/JarFile\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.compat\\.JreCompat\\.disableCachingForJarUrlConnections\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.compat\\.JreCompat\\.jarFileNewInstance\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/jar\\/JarFile\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.compat\\.JreCompat\\.jarFileNewInstance\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/jar\\/JarFile\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.LocalResolver\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.LocalResolver\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.LocalResolver\\.getExternalSubset\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.XmlErrorHandler\\.error\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.XmlErrorHandler\\.fatalError\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.XmlErrorHandler\\.warning\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.tagplugin\\.TagPluginParser\\.parse\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.tld\\.ImplicitTldRuleSet\\$ElementNotAllowedRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.tld\\.TldParser\\.parse\\:\\(Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/tld\\/TldResourcePath\\;\\)Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/tld\\/TaglibXml\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.tld\\.TldResourcePath\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.tld\\.TldResourcePath\\.openJar\\:\\(\\)Lorg\\/apache\\/tomcat\\/Jar\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.tld\\.TldRuleSet\\$GenericBooleanRule\\.body\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.tld\\.TldRuleSet\\$ScriptVariableRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.tld\\.TldRuleSet\\$ScriptVariableRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.tld\\.TldRuleSet\\$TagAttributeRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.tld\\.TldRuleSet\\$TagAttributeRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.AbsoluteOrderingRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.CallMethodMultiRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.FragmentJarScannerCallback\\.scan\\:\\(Lorg\\/apache\\/tomcat\\/Jar\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.FragmentJarScannerCallback\\.scan\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.IgnoreAnnotationsRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.LifecycleCallbackRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.MappedNameRule\\.body\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.NameRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.NameRule\\.body\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.RelativeOrderingRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.ServiceQnameRule\\.body\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.ServletDefCreateRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.ServletDefCreateRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.SetAuthConstraintRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.SetDenyUncoveredHttpMethodsRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.SetDistributableRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.SetJspConfig\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.SetLoginConfig\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.SetOverrideRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.SetPublicIdRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.SetSessionConfig\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.SoapHeaderRule\\.body\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.TaglibLocationRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.VersionRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.descriptor\\.web\\.WebXmlParser\\.parseWebXml\\:\\(Ljava\\/net\\/URL\\;Lorg\\/apache\\/tomcat\\/util\\/descriptor\\/web\\/WebXml\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.AbstractObjectCreationFactory\\.createObject\\:\\(Lorg\\/xml\\/sax\\/Attributes\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.EmptyStackException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.ArrayStack\\.peek\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.EmptyStackException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.ArrayStack\\.peek\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.EmptyStackException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.ArrayStack\\.pop\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.CallMethodRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.CallMethodRule\\.body\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.CallMethodRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.CallMethodRule\\.finish\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.CallParamRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.CallParamRule\\.body\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXNotRecognizedException", 
   "org.xml.sax.SAXNotSupportedException", 
   "javax.xml.parsers.ParserConfigurationException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.getFactory\\:\\(\\)Ljavax\\/xml\\/parsers\\/SAXParserFactory\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.parsers.ParserConfigurationException", 
   "org.xml.sax.SAXNotRecognizedException", 
   "org.xml.sax.SAXNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.setFeature\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXNotRecognizedException", 
   "org.xml.sax.SAXNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.getProperty\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.getXMLReader\\:\\(\\)Lorg\\/xml\\/sax\\/XMLReader\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.characters\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.endDocument\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.endElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.endPrefixMapping\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.ignorableWhitespace\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.processingInstruction\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.skippedEntity\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.startDocument\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.startElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.startPrefixMapping\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.startDTD\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.error\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.fatalError\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.warning\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.parse\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.parse\\:\\(Lorg\\/xml\\/sax\\/InputSource\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Digester\\.parse\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.FactoryCreateRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.FactoryCreateRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.FactoryCreateRule\\.finish\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.ObjectCreateRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.ObjectCreateRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.ObjectCreationFactory\\.createObject\\:\\(Lorg\\/xml\\/sax\\/Attributes\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Rule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Rule\\.body\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Rule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.Rule\\.finish\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.SetNextRule\\.end\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.digester\\.SetPropertiesRule\\.begin\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.file\\.ConfigFileLoader\\.getInputStream\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.ConcurrentDateFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.MimeHeaders\\.duplicate\\:\\(Lorg\\/apache\\/tomcat\\/util\\/http\\/MimeHeaders\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.Parameters\\.addParameter\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.Parameters\\.urlDecode\\:\\(Lorg\\/apache\\/tomcat\\/util\\/buf\\/ByteChunk\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ByteArrayOutputStream\\.write\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ByteArrayOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ByteArrayOutputStream\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.DeferredFileOutputStream\\.getStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.DeferredFileOutputStream\\.thresholdReached\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.DeferredFileOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileItem\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileItem\\.getString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileItem\\.write\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileItem\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileItemIterator\\.hasNext\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileItemIterator\\.next\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/http\\/fileupload\\/FileItemStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileItemStream\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\$FileItemIteratorImpl\\$1\\.raiseError\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\$FileItemIteratorImpl\\$FileItemStreamImpl\\$1\\.raiseError\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\$FileItemIteratorImpl\\$FileItemStreamImpl\\.\\<init\\>\\:\\(Lorg\\/apache\\/tomcat\\/util\\/http\\/fileupload\\/FileUploadBase\\$FileItemIteratorImpl\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;ZJ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\$FileItemIteratorImpl\\$FileItemStreamImpl\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\$FileItemIteratorImpl\\$FileItemStreamImpl\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\$FileItemIteratorImpl\\.\\<init\\>\\:\\(Lorg\\/apache\\/tomcat\\/util\\/http\\/fileupload\\/FileUploadBase\\;Lorg\\/apache\\/tomcat\\/util\\/http\\/fileupload\\/RequestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\$FileItemIteratorImpl\\.findNextItem\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\$FileItemIteratorImpl\\.hasNext\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\$FileItemIteratorImpl\\.next\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/http\\/fileupload\\/FileItemStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\.getItemIterator\\:\\(Lorg\\/apache\\/tomcat\\/util\\/http\\/fileupload\\/RequestContext\\;\\)Lorg\\/apache\\/tomcat\\/util\\/http\\/fileupload\\/FileItemIterator\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\.parseRequest\\:\\(Lorg\\/apache\\/tomcat\\/util\\/http\\/fileupload\\/RequestContext\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUploadBase\\.parseParameterMap\\:\\(Lorg\\/apache\\/tomcat\\/util\\/http\\/fileupload\\/RequestContext\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUtils\\.deleteDirectory\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUtils\\.cleanDirectory\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUtils\\.forceDelete\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUtils\\.forceDeleteOnExit\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUtils\\.deleteDirectoryOnExit\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUtils\\.cleanDirectoryOnExit\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUtils\\.forceMkdir\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUtils\\.forceMkdirParent\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.FileUtils\\.isSymlink\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.IOUtils\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.IOUtils\\.copyLarge\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.IOUtils\\.read\\:\\(Ljava\\/io\\/InputStream\\;\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.IOUtils\\.readFully\\:\\(Ljava\\/io\\/InputStream\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.IOUtils\\.readFully\\:\\(Ljava\\/io\\/InputStream\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\$ItemInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\$ItemInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\$ItemInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\$ItemInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\$ItemInputStream\\.close\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\$ItemInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\$ItemInputStream\\.makeAvailable\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\.readByte\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileUploadIOException", 
   "org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\.readBoundary\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.MultipartStream$IllegalBoundaryException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\.setBoundary\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadBase$FileUploadIOException", 
   "org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\.readHeaders\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\.readBodyData\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.MultipartStream$MalformedStreamException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\.discardBodyData\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.MultipartStream\\.skipPreamble\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.RequestContext\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ThresholdingOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ThresholdingOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ThresholdingOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ThresholdingOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ThresholdingOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ThresholdingOutputStream\\.checkThreshold\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ThresholdingOutputStream\\.getStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.ThresholdingOutputStream\\.thresholdReached\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.disk\\.DiskFileItem\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.disk\\.DiskFileItem\\.getString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.disk\\.DiskFileItem\\.write\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.disk\\.DiskFileItem\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.servlet\\.ServletFileUpload\\.parseParameterMap\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.FileUploadException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.servlet\\.ServletFileUpload\\.getItemIterator\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;\\)Lorg\\/apache\\/tomcat\\/util\\/http\\/fileupload\\/FileItemIterator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.servlet\\.ServletRequestContext\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.Closeable\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.Closeable\\.isClosed\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.LimitedInputStream\\.raiseError\\:\\(JJ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.LimitedInputStream\\.checkLimit\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.LimitedInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.LimitedInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.LimitedInputStream\\.isClosed\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.LimitedInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.Streams\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Z\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.Streams\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Z\\[B\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.Streams\\.asString\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.Streams\\.asString\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.mime\\.MimeUtility\\.decodeText\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.util.http.fileupload.util.mime.ParseException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.mime\\.MimeUtility\\.decodeWord\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.mime\\.QuotedPrintableDecoder\\.decode\\:\\(\\[BLjava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.fileupload\\.util\\.mime\\.QuotedPrintableDecoder\\.hexToBinary\\:\\(B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.AcceptLanguage\\.parse\\:\\(Ljava\\/io\\/StringReader\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.Authorization\\.parseAuthorizationDigest\\:\\(Ljava\\/io\\/StringReader\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.Host\\$MessageBytesReader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.Host\\$MessageBytesReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.Host\\$MessageBytesReader\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.Host\\$MessageBytesReader\\.mark\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.Host\\$MessageBytesReader\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.skipLws\\:\\(Ljava\\/io\\/Reader\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.skipConstant\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tomcat\\/util\\/http\\/parser\\/SkipResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.readToken\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.readQuotedString\\:\\(Ljava\\/io\\/Reader\\;Z\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.readTokenOrQuotedString\\:\\(Ljava\\/io\\/Reader\\;Z\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.readQuotedToken\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.readLhex\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.readWeight\\:\\(Ljava\\/io\\/Reader\\;C\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.readHostIPv4\\:\\(Ljava\\/io\\/Reader\\;Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.readHostIPv6\\:\\(Ljava\\/io\\/Reader\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.readHostDomainName\\:\\(Ljava\\/io\\/Reader\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.HttpParser\\.skipUntil\\:\\(Ljava\\/io\\/Reader\\;IC\\)Lorg\\/apache\\/tomcat\\/util\\/http\\/parser\\/SkipResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.MediaType\\.parseMediaType\\:\\(Ljava\\/io\\/StringReader\\;\\)Lorg\\/apache\\/tomcat\\/util\\/http\\/parser\\/MediaType\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.http\\.parser\\.Vary\\.parseVary\\:\\(Ljava\\/io\\/StringReader\\;Ljava\\/util\\/Set\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.log\\.SystemLogHandler\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.getAttribute\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.invoke\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.getAttributeClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.management.AttributeNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.ReflectionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.setAttribute\\:\\(Ljavax\\/management\\/Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.InstanceNotFoundException", 
   "javax.management.modelmbean.InvalidTargetObjectTypeException", 
   "javax.management.MBeanException", 
   "javax.management.RuntimeOperationsException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.getManagedResource\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.management.InstanceNotFoundException", 
   "javax.management.MBeanException", 
   "javax.management.RuntimeOperationsException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.setManagedResource\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.addAttributeChangeNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.ListenerNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.removeAttributeChangeNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException", 
   "javax.management.RuntimeOperationsException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.sendAttributeChangeNotification\\:\\(Ljavax\\/management\\/AttributeChangeNotification\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException", 
   "javax.management.RuntimeOperationsException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.sendAttributeChangeNotification\\:\\(Ljavax\\/management\\/Attribute\\;Ljavax\\/management\\/Attribute\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException", 
   "javax.management.RuntimeOperationsException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.sendNotification\\:\\(Ljavax\\/management\\/Notification\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.MBeanException", 
   "javax.management.RuntimeOperationsException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.sendNotification\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.addNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;Ljavax\\/management\\/NotificationFilter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.ListenerNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.removeNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.preRegister\\:\\(Ljavax\\/management\\/MBeanServer\\;Ljavax\\/management\\/ObjectName\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseModelMBean\\.preDeregister\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseNotificationBroadcaster\\.addNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;Ljavax\\/management\\/NotificationFilter\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.management.ListenerNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.BaseNotificationBroadcaster\\.removeNotificationListener\\:\\(Ljavax\\/management\\/NotificationListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.Registry\\.registerComponent\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.Registry\\.invoke\\:\\(Ljava\\/util\\/List\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.Registry\\.findManagedBean\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tomcat\\/util\\/modeler\\/ManagedBean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.Registry\\.load\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.Registry\\.registerComponent\\:\\(Ljava\\/lang\\/Object\\;Ljavax\\/management\\/ObjectName\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.Registry\\.getModelerSource\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tomcat\\/util\\/modeler\\/modules\\/ModelerSource\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.Registry\\.preRegister\\:\\(Ljavax\\/management\\/MBeanServer\\;Ljavax\\/management\\/ObjectName\\;\\)Ljavax\\/management\\/ObjectName\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.Registry\\.preDeregister\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.RegistryMBean\\.invoke\\:\\(Ljava\\/util\\/List\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.RegistryMBean\\.registerComponent\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.modules\\.MbeansDescriptorsDigesterSource\\.loadDescriptors\\:\\(Lorg\\/apache\\/tomcat\\/util\\/modeler\\/Registry\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.modules\\.MbeansDescriptorsDigesterSource\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.modules\\.MbeansDescriptorsIntrospectionSource\\.loadDescriptors\\:\\(Lorg\\/apache\\/tomcat\\/util\\/modeler\\/Registry\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.modules\\.MbeansDescriptorsIntrospectionSource\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.modeler\\.modules\\.ModelerSource\\.loadDescriptors\\:\\(Lorg\\/apache\\/tomcat\\/util\\/modeler\\/Registry\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.addSslHostConfig\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLHostConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.addSslHostConfig\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLHostConfig\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.createSSLContext\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLHostConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.getLocalAddress\\:\\(\\)Ljava\\/net\\/InetSocketAddress\\;"
 }, 
 {
  "exceptions": [
   "java.net.SocketException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.getUnlockAddress\\:\\(Ljava\\/net\\/InetSocketAddress\\;\\)Ljava\\/net\\/InetSocketAddress\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.bind\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.unbind\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.stopInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.destroy\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.countUpOrAwaitConnection\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.doCloseServerSocket\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractEndpoint\\.serverSocketAccept\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractJsseEndpoint\\.initialiseSsl\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractJsseEndpoint\\.createSSLContext\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLHostConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractJsseEndpoint\\.destroySsl\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractJsseEndpoint\\.unbind\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AbstractJsseEndpoint\\.getLocalAddress\\:\\(\\)Ljava\\/net\\/InetSocketAddress\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\$AprSocketWrapper\\.read\\:\\(Z\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\$AprSocketWrapper\\.read\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\$AprSocketWrapper\\.fillReadBuffer\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\$AprSocketWrapper\\.fillReadBuffer\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\$AprSocketWrapper\\.isReadyForRead\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\$AprSocketWrapper\\.writeBlockingDirect\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\$AprSocketWrapper\\.writeNonBlockingDirect\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\$AprSocketWrapper\\.doWrite\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\$AprSocketWrapper\\.doWriteInternal\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\$AprSocketWrapper\\.doClientAuth\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLSupport\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\.getLocalAddress\\:\\(\\)Ljava\\/net\\/InetSocketAddress\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\.bind\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\.createSSLContext\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLHostConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\.unbind\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\.serverSocketAccept\\:\\(\\)Ljava\\/lang\\/Long\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprEndpoint\\.serverSocketAccept\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprSSLSupport\\.getCipherSuite\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprSSLSupport\\.getPeerCertificateChain\\:\\(\\)\\[Ljava\\/security\\/cert\\/X509Certificate\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprSSLSupport\\.getKeySize\\:\\(\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprSSLSupport\\.getSessionId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.AprSSLSupport\\.getProtocol\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.IPv6Utils\\.canonize\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Channel\\$1\\.get\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Channel\\$1\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Channel\\$1\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Channel\\$1\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Channel\\.reset\\:\\(Ljava\\/nio\\/channels\\/AsynchronousSocketChannel\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketWrapperBase\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Channel\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Channel\\.close\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Channel\\.handshake\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.isReadyForRead\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.read\\:\\(Z\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.read\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.fillReadBuffer\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.fillReadBuffer\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.writeNonBlocking\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.writeNonBlocking\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.writeNonBlockingInternal\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.doWrite\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.flushBlocking\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.flushNonBlocking\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.flushNonBlocking\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\$Nio2SocketWrapper\\.doClientAuth\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLSupport\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\.bind\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\.unbind\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\.doCloseServerSocket\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\.serverSocketAccept\\:\\(\\)Ljava\\/nio\\/channels\\/AsynchronousSocketChannel\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.Nio2Endpoint\\.serverSocketAccept\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioBlockingSelector\\.write\\:\\(Ljava\\/nio\\/ByteBuffer\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/NioChannel\\;J\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioBlockingSelector\\.read\\:\\(Ljava\\/nio\\/ByteBuffer\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/NioChannel\\;J\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioChannel\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioChannel\\.flush\\:\\(ZLjava\\/nio\\/channels\\/Selector\\;J\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioChannel\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioChannel\\.close\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioChannel\\.write\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioChannel\\.read\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioChannel\\.handshake\\:\\(ZZ\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioChannel\\.flushOutbound\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioChannel\\.checkInterruptStatus\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.awaitLatch\\:\\(Ljava\\/util\\/concurrent\\/CountDownLatch\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.awaitReadLatch\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.awaitWriteLatch\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.isReadyForRead\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.read\\:\\(Z\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.read\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.fillReadBuffer\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.fillReadBuffer\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.doWrite\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$NioSocketWrapper\\.doClientAuth\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLSupport\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\$Poller\\.\\<init\\>\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/NioEndpoint\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\.bind\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\.initServerSocket\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\.startInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\.unbind\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\.doCloseServerSocket\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\.serverSocketAccept\\:\\(\\)Ljava\\/nio\\/channels\\/SocketChannel\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioEndpoint\\.serverSocketAccept\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioSelectorPool\\.getSharedSelector\\:\\(\\)Ljava\\/nio\\/channels\\/Selector\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioSelectorPool\\.get\\:\\(\\)Ljava\\/nio\\/channels\\/Selector\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioSelectorPool\\.put\\:\\(Ljava\\/nio\\/channels\\/Selector\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioSelectorPool\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioSelectorPool\\.open\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioSelectorPool\\.write\\:\\(Ljava\\/nio\\/ByteBuffer\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/NioChannel\\;Ljava\\/nio\\/channels\\/Selector\\;JZ\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioSelectorPool\\.read\\:\\(Ljava\\/nio\\/ByteBuffer\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/NioChannel\\;Ljava\\/nio\\/channels\\/Selector\\;J\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.NioSelectorPool\\.read\\:\\(Ljava\\/nio\\/ByteBuffer\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/NioChannel\\;Ljava\\/nio\\/channels\\/Selector\\;JZ\\)I"
 }, 
 {
  "exceptions": [
   "java.security.KeyManagementException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLContext\\.init\\:\\(\\[Ljavax\\/net\\/ssl\\/KeyManager\\;\\[Ljavax\\/net\\/ssl\\/TrustManager\\;Ljava\\/security\\/SecureRandom\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLHostConfig\\.getTruststore\\:\\(\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLHostConfig\\.adjustRelativePath\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLHostConfigCertificate\\.getCertificateKeystore\\:\\(\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLImplementation\\.getInstance\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLImplementation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLSupport\\.getCipherSuite\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLSupport\\.getPeerCertificateChain\\:\\(\\)\\[Ljava\\/security\\/cert\\/X509Certificate\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLSupport\\.getKeySize\\:\\(\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLSupport\\.getSessionId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLSupport\\.getProtocol\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLUtil\\.createSSLContext\\:\\(Ljava\\/util\\/List\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLUtil\\.getKeyManagers\\:\\(\\)\\[Ljavax\\/net\\/ssl\\/KeyManager\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLUtil\\.getTrustManagers\\:\\(\\)\\[Ljavax\\/net\\/ssl\\/TrustManager\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLUtil\\.getEnabledProtocols\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLUtil\\.getEnabledCiphers\\:\\(\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SSLUtilBase\\.getStore\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/security\\/KeyStore\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureFlush\\.get\\:\\(\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureFlush\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureFlush\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureFlush\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureRead\\.get\\:\\(\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureRead\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException", 
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureRead\\.unwrap\\:\\(IJLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureRead\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureRead\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureWrite\\.get\\:\\(\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureWrite\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureWrite\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\$FutureWrite\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\.reset\\:\\(Ljava\\/nio\\/channels\\/AsynchronousSocketChannel\\;Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketWrapperBase\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\.handshake\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\.handshakeInternal\\:\\(Z\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\.processSNI\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\.rehandshake\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\.handshakeWrap\\:\\(\\)Ljavax\\/net\\/ssl\\/SSLEngineResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\.handshakeUnwrap\\:\\(\\)Ljavax\\/net\\/ssl\\/SSLEngineResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNio2Channel\\.close\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.flush\\:\\(ZLjava\\/nio\\/channels\\/Selector\\;J\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.flush\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.handshake\\:\\(ZZ\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.processSNI\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.rehandshake\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.handshakeWrap\\:\\(Z\\)Ljavax\\/net\\/ssl\\/SSLEngineResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.handshakeUnwrap\\:\\(Z\\)Ljavax\\/net\\/ssl\\/SSLEngineResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.close\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.read\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.write\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SecureNioChannel\\.flushOutbound\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.net.SocketException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketProperties\\.setProperties\\:\\(Ljava\\/net\\/Socket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.SocketException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketProperties\\.setProperties\\:\\(Ljava\\/net\\/ServerSocket\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketProperties\\.setProperties\\:\\(Ljava\\/nio\\/channels\\/AsynchronousSocketChannel\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketProperties\\.setProperties\\:\\(Ljava\\/nio\\/channels\\/AsynchronousServerSocketChannel\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.checkError\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.read\\:\\(Z\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.read\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.isReadyForRead\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.write\\:\\(Z\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.write\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.writeBlocking\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.writeBlocking\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.writeBlockingDirect\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.writeNonBlocking\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.writeNonBlocking\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.writeNonBlockingInternal\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.writeNonBlockingDirect\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.flush\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.flushBlocking\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.flushNonBlocking\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.doWrite\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.doWrite\\:\\(ZLjava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.SocketWrapperBase\\.doClientAuth\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLSupport\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.TLSClientHelloExtractor\\.\\<init\\>\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.WriteBuffer\\$Sink\\.writeFromBuffer\\:\\(Ljava\\/nio\\/ByteBuffer\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.WriteBuffer\\.write\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SocketWrapperBase\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.WriteBuffer\\.write\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/WriteBuffer\\$Sink\\;Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSESSLContext\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.KeyManagementException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSESSLContext\\.init\\:\\(\\[Ljavax\\/net\\/ssl\\/KeyManager\\;\\[Ljavax\\/net\\/ssl\\/TrustManager\\;Ljava\\/security\\/SecureRandom\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSESupport\\.getCipherSuite\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSESupport\\.getPeerCertificateChain\\:\\(\\)\\[Ljava\\/security\\/cert\\/X509Certificate\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSESupport\\.getKeySize\\:\\(\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSESupport\\.getSessionId\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSESupport\\.getProtocol\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSEUtil\\.createSSLContext\\:\\(Ljava\\/util\\/List\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSEUtil\\.getKeyManagers\\:\\(\\)\\[Ljavax\\/net\\/ssl\\/KeyManager\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSEUtil\\.getTrustManagers\\:\\(\\)\\[Ljavax\\/net\\/ssl\\/TrustManager\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSEUtil\\.checkTrustStoreEntries\\:\\(Ljava\\/security\\/KeyStore\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSEUtil\\.getParameters\\:\\(Ljava\\/lang\\/String\\;Ljava\\/security\\/KeyStore\\;Z\\)Ljava\\/security\\/cert\\/CertPathParameters\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.security.cert.CRLException", 
   "java.security.cert.CertificateException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.JSSEUtil\\.getCRLs\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Collection\\;"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.PEMFile\\$Part\\.toCertificate\\:\\(\\)Ljava\\/security\\/cert\\/X509Certificate\\;"
 }, 
 {
  "exceptions": [
   "java.security.GeneralSecurityException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.PEMFile\\$Part\\.toPrivateKey\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/security\\/PrivateKey\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.security.GeneralSecurityException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.PEMFile\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.security.GeneralSecurityException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.jsse\\.PEMFile\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLConf\\.check\\:\\(J\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLConf\\.apply\\:\\(JJ\\)Z"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLContext\\.\\<init\\>\\:\\(Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLHostConfigCertificate\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLContext\\.chooseKeyManager\\:\\(\\[Ljavax\\/net\\/ssl\\/KeyManager\\;\\)Ljavax\\/net\\/ssl\\/X509KeyManager\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLContext\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLPeerUnverifiedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\$OpenSSLSession\\.getPeerCertificates\\:\\(\\)\\[Ljava\\/security\\/cert\\/Certificate\\;"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLPeerUnverifiedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\$OpenSSLSession\\.getPeerCertificateChain\\:\\(\\)\\[Ljavax\\/security\\/cert\\/X509Certificate\\;"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLPeerUnverifiedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\$OpenSSLSession\\.getPeerPrincipal\\:\\(\\)Ljava\\/security\\/Principal\\;"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\.wrap\\:\\(\\[Ljava\\/nio\\/ByteBuffer\\;IILjava\\/nio\\/ByteBuffer\\;\\)Ljavax\\/net\\/ssl\\/SSLEngineResult\\;"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\.unwrap\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\[Ljava\\/nio\\/ByteBuffer\\;II\\)Ljavax\\/net\\/ssl\\/SSLEngineResult\\;"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\.pendingReadableBytesInSSL\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\.closeInbound\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\.beginHandshake\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\.beginHandshakeImplicitly\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\.handshake\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\.renegotiate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\.checkLastError\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLEngine\\.finalize\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLUtil\\.createSSLContext\\:\\(Ljava\\/util\\/List\\;\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/SSLContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLUtil\\.getKeyManagers\\:\\(\\)\\[Ljavax\\/net\\/ssl\\/KeyManager\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLUtil\\.getTrustManagers\\:\\(\\)\\[Ljavax\\/net\\/ssl\\/TrustManager\\;"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateExpiredException", 
   "java.security.cert.CertificateNotYetValidException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLX509Certificate\\.checkValidity\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateExpiredException", 
   "java.security.cert.CertificateNotYetValidException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLX509Certificate\\.checkValidity\\:\\(Ljava\\/util\\/Date\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLX509Certificate\\.getTBSCertificate\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateException", 
   "java.security.NoSuchAlgorithmException", 
   "java.security.InvalidKeyException", 
   "java.security.NoSuchProviderException", 
   "java.security.SignatureException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLX509Certificate\\.verify\\:\\(Ljava\\/security\\/PublicKey\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.security.cert.CertificateException", 
   "java.security.NoSuchAlgorithmException", 
   "java.security.InvalidKeyException", 
   "java.security.NoSuchProviderException", 
   "java.security.SignatureException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.OpenSSLX509Certificate\\.verify\\:\\(Ljava\\/security\\/PublicKey\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.net\\.openssl\\.ciphers\\.OpenSSLCipherConfigurationParser\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.AbstractInputStreamJar\\.getEntryInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.AbstractInputStreamJar\\.getInputStream\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.AbstractInputStreamJar\\.getLastModified\\:\\(Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.AbstractInputStreamJar\\.getManifest\\:\\(\\)Ljava\\/util\\/jar\\/Manifest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.AbstractInputStreamJar\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.AbstractInputStreamJar\\.createJarInputStream\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/scan\\/NonClosingJarInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.AbstractInputStreamJar\\.gotoEntry\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.AbstractInputStreamJar\\.populateMrMap\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.JarFactory\\.newInstance\\:\\(Ljava\\/net\\/URL\\;\\)Lorg\\/apache\\/tomcat\\/Jar\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.JarFactory\\.getJarEntryURL\\:\\(Ljava\\/net\\/URL\\;Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.JarFileUrlJar\\.\\<init\\>\\:\\(Ljava\\/net\\/URL\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.JarFileUrlJar\\.getInputStream\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.JarFileUrlJar\\.getLastModified\\:\\(Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.JarFileUrlJar\\.getEntryInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.JarFileUrlJar\\.getManifest\\:\\(\\)Ljava\\/util\\/jar\\/Manifest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.JarFileUrlJar\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.JarFileUrlNestedJar\\.\\<init\\>\\:\\(Ljava\\/net\\/URL\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.JarFileUrlNestedJar\\.createJarInputStream\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/scan\\/NonClosingJarInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.NonClosingJarInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.NonClosingJarInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.NonClosingJarInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.NonClosingJarInputStream\\.reallyClose\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.StandardJarScanner\\.process\\:\\(Lorg\\/apache\\/tomcat\\/JarScanType\\;Lorg\\/apache\\/tomcat\\/JarScannerCallback\\;Ljava\\/net\\/URL\\;Ljava\\/lang\\/String\\;ZLjava\\/util\\/Deque\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.StandardJarScanner\\.processManifest\\:\\(Lorg\\/apache\\/tomcat\\/Jar\\;ZLjava\\/util\\/Deque\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.scan\\.UrlJar\\.createJarInputStream\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/scan\\/NonClosingJarInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.security\\.ConcurrentMessageDigest\\.init\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.threads\\.InlineExecutorService\\.awaitTermination\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.threads\\.LimitLatch\\.countUpOrAwait\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.threads\\.TaskQueue\\.force\\:\\(Ljava\\/lang\\/Runnable\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.threads\\.TaskQueue\\.poll\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Runnable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.threads\\.TaskQueue\\.take\\:\\(\\)Ljava\\/lang\\/Runnable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.threads\\.TaskQueue\\.poll\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.util\\.threads\\.TaskQueue\\.take\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "javax\\.el\\.BeanELResolver\\$BeanProperties\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.beans.IntrospectionException"
  ], 
  "methodRegex": "javax\\.el\\.BeanELResolver\\$BeanProperties\\.populateFromInterfaces\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.PropertyNotWritableException"
  ], 
  "methodRegex": "javax\\.el\\.BeanNameResolver\\.setBeanValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "javax\\.el\\.ELManager\\.importStatic\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "javax\\.el\\.ELManager\\.importClass\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "javax\\.el\\.ELProcessor\\$MethodSignature\\.\\<init\\>\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "javax\\.el\\.ELProcessor\\.defineFunction\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "javax\\.el\\.ELProcessor\\.defineFunction\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "javax\\.el\\.ImportHandler\\.importStatic\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "javax\\.el\\.ImportHandler\\.importClass\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "javax\\.el\\.LambdaExpression\\.invoke\\:\\(Ljavax\\/el\\/ELContext\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.PropertyNotWritableException"
  ], 
  "methodRegex": "javax\\.el\\.StandardELContext\\$StandardBeanNameResolver\\.setBeanValue\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.PropertyNotFoundException", 
   "javax.el.MethodNotFoundException", 
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.MethodExpressionImpl\\.getMethodInfo\\:\\(Ljavax\\/el\\/ELContext\\;\\)Ljavax\\/el\\/MethodInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.MethodExpressionImpl\\.getNode\\:\\(\\)Lorg\\/apache\\/el\\/parser\\/Node\\;"
 }, 
 {
  "exceptions": [
   "javax.el.PropertyNotFoundException", 
   "javax.el.MethodNotFoundException", 
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.MethodExpressionImpl\\.invoke\\:\\(Ljavax\\/el\\/ELContext\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.MethodExpressionImpl\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.MethodExpressionImpl\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.MethodExpressionLiteral\\.getMethodInfo\\:\\(Ljavax\\/el\\/ELContext\\;\\)Ljavax\\/el\\/MethodInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.MethodExpressionLiteral\\.invoke\\:\\(Ljavax\\/el\\/ELContext\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.MethodExpressionLiteral\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.MethodExpressionLiteral\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.ValueExpressionImpl\\.getNode\\:\\(\\)Lorg\\/apache\\/el\\/parser\\/Node\\;"
 }, 
 {
  "exceptions": [
   "javax.el.PropertyNotFoundException", 
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.ValueExpressionImpl\\.getType\\:\\(Ljavax\\/el\\/ELContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.PropertyNotFoundException", 
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.ValueExpressionImpl\\.getValue\\:\\(Ljavax\\/el\\/ELContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.PropertyNotFoundException", 
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.ValueExpressionImpl\\.isReadOnly\\:\\(Ljavax\\/el\\/ELContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.ValueExpressionImpl\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.PropertyNotFoundException", 
   "javax.el.PropertyNotWritableException", 
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.ValueExpressionImpl\\.setValue\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.ValueExpressionImpl\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.ValueExpressionLiteral\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.ValueExpressionLiteral\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ELSupport\\.compare\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ELSupport\\.equals\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ELSupport\\.coerceToBoolean\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Z\\)Ljava\\/lang\\/Boolean\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ELSupport\\.coerceToCharacter\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Character\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ELSupport\\.coerceToNumber\\:\\(Ljava\\/lang\\/Number\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ELSupport\\.coerceToNumber\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ELSupport\\.coerceToNumber\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ELSupport\\.coerceToType\\:\\(Ljavax\\/el\\/ELContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ExpressionBuilder\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljavax\\/el\\/ELContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ExpressionBuilder\\.createNode\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/el\\/parser\\/Node\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ExpressionBuilder\\.createNodeInternal\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/el\\/parser\\/Node\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ExpressionBuilder\\.prepare\\:\\(Lorg\\/apache\\/el\\/parser\\/Node\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ExpressionBuilder\\.build\\:\\(\\)Lorg\\/apache\\/el\\/parser\\/Node\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ExpressionBuilder\\.visit\\:\\(Lorg\\/apache\\/el\\/parser\\/Node\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ExpressionBuilder\\.createValueExpression\\:\\(Ljava\\/lang\\/Class\\;\\)Ljavax\\/el\\/ValueExpression\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.ExpressionBuilder\\.createMethodExpression\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)Ljavax\\/el\\/MethodExpression\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.FunctionMapperImpl\\$Function\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.FunctionMapperImpl\\$Function\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.FunctionMapperImpl\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.FunctionMapperImpl\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.VariableMapperImpl\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.lang\\.VariableMapperImpl\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ArithmeticNode\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstAnd\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstAssign\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstAssign\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstBracketSuffix\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstChoice\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstChoice\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstCompositeExpression\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstCompositeExpression\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstConcatenation\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstConcatenation\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstDeferredExpression\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstDeferredExpression\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstDeferredExpression\\.isReadOnly\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstDeferredExpression\\.setValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstDiv\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstDotSuffix\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstDynamicExpression\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstDynamicExpression\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstDynamicExpression\\.isReadOnly\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstDynamicExpression\\.setValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstEmpty\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstEmpty\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstEqual\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstFalse\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstFloatingPoint\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstFloatingPoint\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstFunction\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstFunction\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstGreaterThan\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstGreaterThanEqual\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstIdentifier\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstIdentifier\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstIdentifier\\.isReadOnly\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstIdentifier\\.setValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstIdentifier\\.invoke\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstIdentifier\\.getMethodInfo\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\[Ljava\\/lang\\/Class\\;\\)Ljavax\\/el\\/MethodInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstIdentifier\\.getMethodExpression\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljavax\\/el\\/MethodExpression\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstInteger\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstInteger\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstLambdaExpression\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstLessThan\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstLessThanEqual\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstListData\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstListData\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstLiteralExpression\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstLiteralExpression\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstMapData\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstMapData\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstMinus\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstMod\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstMult\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstNegative\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstNegative\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstNot\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstNot\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstNotEqual\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstNull\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstNull\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstOr\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstPlus\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstSemicolon\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstSemicolon\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstSetData\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstSetData\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstString\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstString\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstTrue\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstValue\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstValue\\.getTarget\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Lorg\\/apache\\/el\\/parser\\/AstValue\\$Target\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstValue\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstValue\\.isReadOnly\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstValue\\.setValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstValue\\.getMethodInfo\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\[Ljava\\/lang\\/Class\\;\\)Ljavax\\/el\\/MethodInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.AstValue\\.invoke\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.BooleanNode\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/apache\\/el\\/parser\\/Node\\;"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.CompositeExpression\\:\\(\\)Lorg\\/apache\\/el\\/parser\\/AstCompositeExpression\\;"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.LiteralExpression\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.DeferredExpression\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.DynamicExpression\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Expression\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Semicolon\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Assignment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.LambdaExpression\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.LambdaParameters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.LambdaExpressionOrInvocation\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Choice\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Or\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.And\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Equality\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Compare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Concatenation\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Math\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Multiplication\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Unary\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Value\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.ValuePrefix\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.ValueSuffix\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.DotSuffix\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.BracketSuffix\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.MethodParameters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.NonLiteral\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.SetData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.ListData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.MapData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.MapEntry\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Identifier\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Function\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Literal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Boolean\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.FloatingPoint\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Integer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.String\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.Null\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.el.parser.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.ELParser\\.jj\\_consume\\_token\\:\\(I\\)Lorg\\/apache\\/el\\/parser\\/Token\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.Node\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.Node\\.setValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.Node\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.Node\\.isReadOnly\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.Node\\.accept\\:\\(Lorg\\/apache\\/el\\/parser\\/NodeVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.Node\\.getMethodInfo\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\[Ljava\\/lang\\/Class\\;\\)Ljavax\\/el\\/MethodInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.Node\\.invoke\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.NodeVisitor\\.visit\\:\\(Lorg\\/apache\\/el\\/parser\\/Node\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleCharStream\\.FillBuff\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleCharStream\\.BeginToken\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleCharStream\\.readChar\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleCharStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleCharStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleCharStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleCharStream\\.ReInit\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;III\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleCharStream\\.ReInit\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleCharStream\\.ReInit\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleNode\\.getType\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleNode\\.getValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleNode\\.isReadOnly\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\)Z"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleNode\\.setValue\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleNode\\.accept\\:\\(Lorg\\/apache\\/el\\/parser\\/NodeVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleNode\\.invoke\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.parser\\.SimpleNode\\.getMethodInfo\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;\\[Ljava\\/lang\\/Class\\;\\)Ljavax\\/el\\/MethodInfo\\;"
 }, 
 {
  "exceptions": [
   "javax.el.ELException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.stream\\.Optional\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.util\\.ReflectionUtil\\.forName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.util\\.ReflectionUtil\\.toTypeArray\\:\\(\\[Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.el.MethodNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.el\\.util\\.ReflectionUtil\\.getMethod\\:\\(Lorg\\/apache\\/el\\/lang\\/EvaluationContext\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "javax\\.websocket\\.Decoder\\$Binary\\.decode\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.Decoder\\$BinaryStream\\.decode\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "javax\\.websocket\\.Decoder\\$Text\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.Decoder\\$TextStream\\.decode\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.EncodeException"
  ], 
  "methodRegex": "javax\\.websocket\\.Encoder\\$Binary\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/nio\\/ByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.EncodeException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.Encoder\\$BinaryStream\\.encode\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.EncodeException"
  ], 
  "methodRegex": "javax\\.websocket\\.Encoder\\$Text\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.EncodeException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.Encoder\\$TextStream\\.encode\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\$Basic\\.sendText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\$Basic\\.sendBinary\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\$Basic\\.sendText\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\$Basic\\.sendBinary\\:\\(Ljava\\/nio\\/ByteBuffer\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\$Basic\\.getSendStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\$Basic\\.getSendWriter\\:\\(\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.websocket.EncodeException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\$Basic\\.sendObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\.setBatchingAllowed\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\.flushBatch\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\.sendPing\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "javax\\.websocket\\.RemoteEndpoint\\.sendPong\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "javax\\.websocket\\.Session\\.addMessageHandler\\:\\(Ljavax\\/websocket\\/MessageHandler\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.Session\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.Session\\.close\\:\\(Ljavax\\/websocket\\/CloseReason\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "javax\\.websocket\\.Session\\.addMessageHandler\\:\\(Ljava\\/lang\\/Class\\;Ljavax\\/websocket\\/MessageHandler\\$Partial\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "javax\\.websocket\\.Session\\.addMessageHandler\\:\\(Ljava\\/lang\\/Class\\;Ljavax\\/websocket\\/MessageHandler\\$Whole\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.WebSocketContainer\\.connectToServer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.WebSocketContainer\\.connectToServer\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.WebSocketContainer\\.connectToServer\\:\\(Ljavax\\/websocket\\/Endpoint\\;Ljavax\\/websocket\\/ClientEndpointConfig\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException", 
   "java.io.IOException"
  ], 
  "methodRegex": "javax\\.websocket\\.WebSocketContainer\\.connectToServer\\:\\(Ljava\\/lang\\/Class\\;Ljavax\\/websocket\\/ClientEndpointConfig\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "javax\\.websocket\\.server\\.ServerContainer\\.addEndpoint\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "javax\\.websocket\\.server\\.ServerContainer\\.addEndpoint\\:\\(Ljavax\\/websocket\\/server\\/ServerEndpointConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "javax\\.websocket\\.server\\.ServerEndpointConfig\\$Configurator\\.getEndpointInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapper\\.handshake\\:\\(\\)Ljava\\/util\\/concurrent\\/Future\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperNonSecure\\$NoOpFuture\\.get\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperNonSecure\\$NoOpFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperNonSecure\\$NoOpFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperNonSecure\\$NoOpFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperSecure\\$LongToIntegerFuture\\.get\\:\\(\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperSecure\\$LongToIntegerFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Integer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperSecure\\$LongToIntegerFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperSecure\\$LongToIntegerFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperSecure\\$WebSocketSslHandshakeThread\\.checkResult\\:\\(Ljavax\\/net\\/ssl\\/SSLEngineResult\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperSecure\\$WrapperFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperSecure\\$WrapperFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.net.ssl.SSLException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.AsyncChannelWrapperSecure\\.handshake\\:\\(\\)Ljava\\/util\\/concurrent\\/Future\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.websocket.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.Authenticator\\.getAuthorization\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.websocket.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.BasicAuthenticator\\.getAuthorization\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.websocket.AuthenticationException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.DigestAuthenticator\\.getAuthorization\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.DigestAuthenticator\\.calculateRequestDigest\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.security.NoSuchAlgorithmException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.DigestAuthenticator\\.encodeMD5\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.FutureToSendHandler\\.get\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.FutureToSendHandler\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.FutureToSendHandler\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.FutureToSendHandler\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.PerMessageDeflate\\.getMoreData\\:\\(BZILjava\\/nio\\/ByteBuffer\\;\\)Lorg\\/apache\\/tomcat\\/websocket\\/TransformationResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.Transformation\\.getMoreData\\:\\(BZILjava\\/nio\\/ByteBuffer\\;\\)Lorg\\/apache\\/tomcat\\/websocket\\/TransformationResult\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.Util\\.getDecoders\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.processInputBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.processInitialHeader\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.processRemainingHeader\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.processData\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.processDataControl\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.websocket.WsIOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.sendMessageText\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.processDataText\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.processDataBinary\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.websocket.WsIOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.handleThrowableOnSend\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.websocket.WsIOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.sendMessageBinary\\:\\(Ljava\\/nio\\/ByteBuffer\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameBase\\.byteArrayToLong\\:\\(\\[BII\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsFrameClient\\.processSocketRead\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBase\\.setBatchingAllowed\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBase\\.flushBatch\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBase\\.sendPing\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBase\\.sendPong\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBasic\\.sendText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBasic\\.sendBinary\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBasic\\.sendText\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBasic\\.sendBinary\\:\\(Ljava\\/nio\\/ByteBuffer\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBasic\\.getSendStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBasic\\.getSendWriter\\:\\(\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.websocket.EncodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointBasic\\.sendObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\$WsOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\$WsOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\$WsOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\$WsOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\$WsOutputStream\\.doWrite\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\$WsWriter\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\$WsWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\$WsWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\$WsWriter\\.doWrite\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.setBatchingAllowed\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.flushBatch\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.sendBytes\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.sendPartialBytes\\:\\(Ljava\\/nio\\/ByteBuffer\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.sendPing\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.sendPong\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.sendString\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.sendPartialString\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.sendMessageBlock\\:\\(Ljava\\/nio\\/CharBuffer\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.sendMessageBlock\\:\\(BLjava\\/nio\\/ByteBuffer\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.sendMessageBlock\\:\\(BLjava\\/nio\\/ByteBuffer\\;ZJ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.websocket.EncodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.sendObject\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsRemoteEndpointImplBase\\.setEncoders\\:\\(Ljavax\\/websocket\\/EndpointConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsSession\\.\\<init\\>\\:\\(Ljavax\\/websocket\\/Endpoint\\;Lorg\\/apache\\/tomcat\\/websocket\\/WsRemoteEndpointImplBase\\;Lorg\\/apache\\/tomcat\\/websocket\\/WsWebSocketContainer\\;Ljava\\/net\\/URI\\;Ljava\\/util\\/Map\\;Ljava\\/lang\\/String\\;Ljava\\/security\\/Principal\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/List\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;ZLjavax\\/websocket\\/EndpointConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsSession\\.addMessageHandler\\:\\(Ljava\\/lang\\/Class\\;Ljavax\\/websocket\\/MessageHandler\\$Partial\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsSession\\.addMessageHandler\\:\\(Ljava\\/lang\\/Class\\;Ljavax\\/websocket\\/MessageHandler\\$Whole\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsSession\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsSession\\.close\\:\\(Ljavax\\/websocket\\/CloseReason\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsWebSocketContainer\\.connectToServer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsWebSocketContainer\\.connectToServer\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsWebSocketContainer\\.connectToServer\\:\\(Ljava\\/lang\\/Class\\;Ljavax\\/websocket\\/ClientEndpointConfig\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsWebSocketContainer\\.connectToServer\\:\\(Ljavax\\/websocket\\/Endpoint\\;Ljavax\\/websocket\\/ClientEndpointConfig\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsWebSocketContainer\\.connectToServerRecursive\\:\\(Ljavax\\/websocket\\/Endpoint\\;Ljavax\\/websocket\\/ClientEndpointConfig\\;Ljava\\/net\\/URI\\;Ljava\\/util\\/Set\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException", 
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsWebSocketContainer\\.writeRequest\\:\\(Lorg\\/apache\\/tomcat\\/websocket\\/AsyncChannelWrapper\\;Ljava\\/nio\\/ByteBuffer\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "javax.websocket.DeploymentException", 
   "java.io.EOFException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsWebSocketContainer\\.processResponse\\:\\(Ljava\\/nio\\/ByteBuffer\\;Lorg\\/apache\\/tomcat\\/websocket\\/AsyncChannelWrapper\\;J\\)Lorg\\/apache\\/tomcat\\/websocket\\/WsWebSocketContainer\\$HttpResponse\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsWebSocketContainer\\.parseStatus\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.WsWebSocketContainer\\.createSSLEngine\\:\\(Ljava\\/util\\/Map\\;Ljava\\/lang\\/String\\;I\\)Ljavax\\/net\\/ssl\\/SSLEngine\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoEndpointClient\\.\\<init\\>\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMessageHandlerWholeBase\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMessageHandlerWholeBinary\\.decode\\:\\(Ljava\\/nio\\/ByteBuffer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMessageHandlerWholeBinary\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMessageHandlerWholePong\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMessageHandlerWholeText\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMessageHandlerWholeText\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMethodMapping\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMethodMapping\\.checkPublic\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMethodMapping\\.getOnOpenArgs\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/websocket\\/Session\\;Ljavax\\/websocket\\/EndpointConfig\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMethodMapping\\.getOnCloseArgs\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/websocket\\/Session\\;Ljavax\\/websocket\\/CloseReason\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMethodMapping\\.getOnErrorArgs\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/websocket\\/Session\\;Ljava\\/lang\\/Throwable\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMethodMapping\\.getPathParams\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Lorg\\/apache\\/tomcat\\/websocket\\/pojo\\/PojoMethodMapping\\$MethodType\\;\\)\\[Lorg\\/apache\\/tomcat\\/websocket\\/pojo\\/PojoPathParam\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DecodeException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.pojo\\.PojoMethodMapping\\.buildArgs\\:\\(\\[Lorg\\/apache\\/tomcat\\/websocket\\/pojo\\/PojoPathParam\\;Ljava\\/util\\/Map\\;Ljavax\\/websocket\\/Session\\;Ljavax\\/websocket\\/EndpointConfig\\;Ljava\\/lang\\/Throwable\\;Ljavax\\/websocket\\/CloseReason\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.DefaultServerEndpointConfigurator\\.getEndpointInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.UpgradeUtil\\.doUpgrade\\:\\(Lorg\\/apache\\/tomcat\\/websocket\\/server\\/WsServerContainer\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/websocket\\/server\\/ServerEndpointConfig\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.UriTemplate\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsFilter\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsFilter\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsFrameServer\\.onDataAvailable\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.websocket.WsIOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsFrameServer\\.sendMessageText\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tomcat.websocket.WsIOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsFrameServer\\.sendMessageBinary\\:\\(Ljava\\/nio\\/ByteBuffer\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsFrameServer\\.notifyDataAvailable\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/AbstractEndpoint\\$Handler\\$SocketState\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsFrameServer\\.doOnDataAvailable\\:\\(\\)Lorg\\/apache\\/tomcat\\/util\\/net\\/AbstractEndpoint\\$Handler\\$SocketState\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsSci\\.onStartup\\:\\(Ljava\\/util\\/Set\\;Ljavax\\/servlet\\/ServletContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsServerContainer\\.addEndpoint\\:\\(Ljavax\\/websocket\\/server\\/ServerEndpointConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsServerContainer\\.addEndpoint\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsServerContainer\\.doUpgrade\\:\\(Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;Ljavax\\/websocket\\/server\\/ServerEndpointConfig\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.apache\\.tomcat\\.websocket\\.server\\.WsServerContainer\\.validateEncoders\\:\\(\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.toJsonArray\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ConfigurationMetadata\\;Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemMetadata\\$ItemType\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.toJsonArray\\:\\(Ljava\\/util\\/Collection\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.toJsonObject\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemMetadata\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.toJsonObject\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemHint\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.getItemHintValues\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemHint\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.getItemHintValue\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemHint\\$ValueHint\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.getItemHintProviders\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemHint\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.getItemHintProvider\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemHint\\$ValueProvider\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.putIfPresent\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.putHintValue\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonConverter\\.putDefaultValue\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JSONOrderedObject\\.put\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.Trees\\.getTree\\:\\(Ljavax\\/lang\\/model\\/element\\/Element\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/fieldvalues\\/javac\\/Tree\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.Trees\\.instance\\:\\(Ljavax\\/annotation\\/processing\\/ProcessingEnvironment\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/fieldvalues\\/javac\\/Trees\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.\\<init\\>\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONTokener\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.\\<init\\>\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.put\\:\\(D\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.put\\:\\(IZ\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.put\\:\\(ID\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.put\\:\\(II\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.put\\:\\(IJ\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.put\\:\\(ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.get\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.getBoolean\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.getDouble\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.getInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.getLong\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.getString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.getJSONArray\\:\\(I\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.getJSONObject\\:\\(I\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.toJSONObject\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.join\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONArray\\.writeTo\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONTokener\\.nextValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONTokener\\.nextCleanInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONTokener\\.nextString\\:\\(C\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONTokener\\.readEscapeCharacter\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONTokener\\.readLiteral\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONTokener\\.readObject\\:\\(\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONTokener\\.readArray\\:\\(\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONTokener\\.next\\:\\(C\\)C"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONTokener\\.nextClean\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONTokener\\.next\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.array\\:\\(\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.endArray\\:\\(\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.object\\:\\(\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.endObject\\:\\(\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.open\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\$Scope\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.close\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\$Scope\\;Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\$Scope\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.peek\\:\\(\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\$Scope\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.value\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.value\\:\\(Z\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.value\\:\\(D\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.value\\:\\(J\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.key\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.beforeKey\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONStringer\\.beforeValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.Tree\\$TreeVisitorInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.Tree\\.accept\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/fieldvalues\\/javac\\/TreeVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.TreeVisitor\\.visitVariable\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/fieldvalues\\/javac\\/VariableTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.VariableTree\\.getName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.VariableTree\\.getType\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.VariableTree\\.getInitializer\\:\\(\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/fieldvalues\\/javac\\/ExpressionTree\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.VariableTree\\.getModifierFlags\\:\\(\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.ExpressionTree\\.getKind\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.ExpressionTree\\.getLiteralValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.ExpressionTree\\.getFactoryValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.ExpressionTree\\.getArrayExpression\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.JavaCompilerFieldValuesParser\\$FieldCollector\\.visitVariable\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/fieldvalues\\/javac\\/VariableTree\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.JavaCompilerFieldValuesParser\\$FieldCollector\\.getValue\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/fieldvalues\\/javac\\/VariableTree\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.JavaCompilerFieldValuesParser\\$FieldCollector\\.getValue\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/fieldvalues\\/javac\\/ExpressionTree\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.JavaCompilerFieldValuesParser\\.\\<init\\>\\:\\(Ljavax\\/annotation\\/processing\\/ProcessingEnvironment\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.fieldvalues\\.javac\\.JavaCompilerFieldValuesParser\\.getFieldValues\\:\\(Ljavax\\/lang\\/model\\/element\\/TypeElement\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonMarshaller\\.write\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ConfigurationMetadata\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonMarshaller\\.read\\:\\(Ljava\\/io\\/InputStream\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ConfigurationMetadata\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonMarshaller\\.toItemMetadata\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemMetadata\\$ItemType\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemMetadata\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonMarshaller\\.toItemDeprecation\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemDeprecation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonMarshaller\\.toItemHint\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemHint\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonMarshaller\\.toValueHint\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemHint\\$ValueHint\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonMarshaller\\.toValueProvider\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ItemHint\\$ValueProvider\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonMarshaller\\.readItemValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.metadata\\.JsonMarshaller\\.toString\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.\\<init\\>\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONTokener\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.\\<init\\>\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.put\\:\\(Ljava\\/lang\\/String\\;Z\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.put\\:\\(Ljava\\/lang\\/String\\;D\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.put\\:\\(Ljava\\/lang\\/String\\;I\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.put\\:\\(Ljava\\/lang\\/String\\;J\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.put\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.putOpt\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.accumulate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.checkName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.get\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.getBoolean\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.getDouble\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.getInt\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.getLong\\:\\(Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.getString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.getJSONArray\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.getJSONObject\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.writeTo\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONStringer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSONObject\\.numberToString\\:\\(Ljava\\/lang\\/Number\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSON\\.checkDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSON\\.typeMismatch\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONException\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.boot.configurationprocessor.json.JSONException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.json\\.JSON\\.typeMismatch\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/json\\/JSONException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.MetadataStore\\.writeMetadata\\:\\(Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ConfigurationMetadata\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.MetadataStore\\.readAdditionalMetadata\\:\\(\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ConfigurationMetadata\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.MetadataStore\\.readMetadata\\:\\(Ljava\\/io\\/InputStream\\;\\)Lorg\\/springframework\\/boot\\/configurationprocessor\\/metadata\\/ConfigurationMetadata\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.MetadataStore\\.getMetadataResource\\:\\(\\)Ljavax\\/tools\\/FileObject\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.MetadataStore\\.createMetadataResource\\:\\(\\)Ljavax\\/tools\\/FileObject\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.MetadataStore\\.getAdditionalMetadataStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.MetadataStore\\.locateAdditionalMetadataFile\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.configurationprocessor\\.MetadataStore\\.locateGradleResourcesFolder\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "lombok\\.Lombok\\.sneakyThrow0\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "lombok\\.delombok\\.ant\\.Tasks\\$Delombok\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "lombok\\.javac\\.apt\\.Processor\\.writeFile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "lombok\\.launch\\.Agent\\.agentmain\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/instrument\\/Instrumentation\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "lombok\\.launch\\.Agent\\.premain\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/instrument\\/Instrumentation\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "lombok\\.launch\\.Agent\\.runLauncher\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/instrument\\/Instrumentation\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "lombok\\.launch\\.Main\\.main\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$LombokDeps\\.runPostCompiler\\:\\(Ljava\\/io\\/OutputStream\\;\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$LombokDeps\\.runPostCompiler\\:\\(Ljava\\/io\\/BufferedOutputStream\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/BufferedOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.getRealMethodDeclarationSource\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Lorg\\/eclipse\\/jdt\\/core\\/dom\\/MethodDeclaration\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.eclipse.jdt.core.JavaModelException"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.getRealMethodDeclarationNode\\:\\(Lorg\\/eclipse\\/jdt\\/core\\/IMethod\\;Lorg\\/eclipse\\/jdt\\/core\\/dom\\/CompilationUnit\\;\\)Lorg\\/eclipse\\/jdt\\/core\\/dom\\/MethodDeclaration\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.getSourceEndFixed\\:\\(ILorg\\/eclipse\\/jdt\\/internal\\/compiler\\/ast\\/ASTNode\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.checkBit24\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.skipRewritingGeneratedNodes\\:\\(Lorg\\/eclipse\\/jdt\\/core\\/dom\\/ASTNode\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.setIsGeneratedFlag\\:\\(Lorg\\/eclipse\\/jdt\\/core\\/dom\\/ASTNode\\;Lorg\\/eclipse\\/jdt\\/internal\\/compiler\\/ast\\/ASTNode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.setIsGeneratedFlagForName\\:\\(Lorg\\/eclipse\\/jdt\\/core\\/dom\\/Name\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.eclipse.core.runtime.CoreException"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.getTokenEndOffsetFixed\\:\\(Lorg\\/eclipse\\/jdt\\/internal\\/core\\/dom\\/rewrite\\/TokenScanner\\;IILjava\\/lang\\/Object\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.removeGeneratedMethods\\:\\(\\[Lorg\\/eclipse\\/jdt\\/core\\/IMethod\\;\\)\\[Lorg\\/eclipse\\/jdt\\/core\\/IMethod\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.createFakeSearchResult\\:\\(\\[Lorg\\/eclipse\\/jdt\\/internal\\/corext\\/refactoring\\/SearchResultGroup\\;Ljava\\/lang\\/Object\\;\\)\\[Lorg\\/eclipse\\/jdt\\/internal\\/corext\\/refactoring\\/SearchResultGroup\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$PatchFixes\\.removeGeneratedSimpleNames\\:\\(\\[Lorg\\/eclipse\\/jdt\\/core\\/dom\\/SimpleName\\;\\)\\[Lorg\\/eclipse\\/jdt\\/core\\/dom\\/SimpleName\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$Transform\\.transform\\:\\(Lorg\\/eclipse\\/jdt\\/internal\\/compiler\\/parser\\/Parser\\;Lorg\\/eclipse\\/jdt\\/internal\\/compiler\\/ast\\/CompilationUnitDeclaration\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$Transform\\.transform\\_swapped\\:\\(Lorg\\/eclipse\\/jdt\\/internal\\/compiler\\/ast\\/CompilationUnitDeclaration\\;Lorg\\/eclipse\\/jdt\\/internal\\/compiler\\/parser\\/Parser\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "lombok\\.launch\\.PatchFixesHider\\$Util\\.sneakyThrow0\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "lombok\\.launch\\.ShadowClassLoader\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "lombok\\.launch\\.ShadowClassLoader\\.getResourceSkippingSelf\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "lombok\\.launch\\.ShadowClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.FinalizableReferenceQueue\\$DecoupledLoader\\.getBaseUrl\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Joiner\\$2\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Iterator\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Joiner\\$MapJoiner\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Joiner\\$MapJoiner\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/lang\\/Iterable\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Joiner\\$MapJoiner\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Iterator\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Joiner\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/lang\\/Iterable\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Joiner\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Iterator\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Joiner\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Joiner\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Throwables\\.propagateIfInstanceOf\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Throwables\\.propagateIfPossible\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable", 
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Throwables\\.propagateIfPossible\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ThreadDeath"
  ], 
  "methodRegex": "com\\.google\\.common\\.base\\.Throwables\\.getJlaMethod\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.AbstractCache\\.get\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.AbstractLoadingCache\\.getAll\\:\\(Ljava\\/lang\\/Iterable\\;\\)Lcom\\/google\\/common\\/collect\\/ImmutableMap\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.Cache\\.get\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.CacheLoader\\$1\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.CacheLoader\\$1\\.load\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.CacheLoader\\$1\\.reload\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/google\\/common\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.CacheLoader\\$1\\.loadAll\\:\\(Ljava\\/lang\\/Iterable\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.CacheLoader\\.load\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.CacheLoader\\.reload\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Lcom\\/google\\/common\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.CacheLoader\\.loadAll\\:\\(Ljava\\/lang\\/Iterable\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.ForwardingCache\\.get\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.ForwardingLoadingCache\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.ForwardingLoadingCache\\.getAll\\:\\(Ljava\\/lang\\/Iterable\\;\\)Lcom\\/google\\/common\\/collect\\/ImmutableMap\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LoadingCache\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LoadingCache\\.getAll\\:\\(Ljava\\/lang\\/Iterable\\;\\)Lcom\\/google\\/common\\/collect\\/ImmutableMap\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$LoadingSerializationProxy\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$LoadingSerializationProxy\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$LoadingSerializationProxy\\.getAll\\:\\(Ljava\\/lang\\/Iterable\\;\\)Lcom\\/google\\/common\\/collect\\/ImmutableMap\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$LoadingValueReference\\.waitForValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$LocalLoadingCache\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$LocalLoadingCache\\.getAll\\:\\(Ljava\\/lang\\/Iterable\\;\\)Lcom\\/google\\/common\\/collect\\/ImmutableMap\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$LocalManualCache\\$1\\.load\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$LocalManualCache\\.get\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$ManualSerializationProxy\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$Segment\\.get\\:\\(Ljava\\/lang\\/Object\\;ILcom\\/google\\/common\\/cache\\/CacheLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$Segment\\.lockedGetOrLoad\\:\\(Ljava\\/lang\\/Object\\;ILcom\\/google\\/common\\/cache\\/CacheLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$Segment\\.waitForLoadingValue\\:\\(Lcom\\/google\\/common\\/cache\\/LocalCache\\$ReferenceEntry\\;Ljava\\/lang\\/Object\\;Lcom\\/google\\/common\\/cache\\/LocalCache\\$ValueReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$Segment\\.loadSync\\:\\(Ljava\\/lang\\/Object\\;ILcom\\/google\\/common\\/cache\\/LocalCache\\$LoadingValueReference\\;Lcom\\/google\\/common\\/cache\\/CacheLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$Segment\\.getAndRecordStats\\:\\(Ljava\\/lang\\/Object\\;ILcom\\/google\\/common\\/cache\\/LocalCache\\$LoadingValueReference\\;Lcom\\/google\\/common\\/util\\/concurrent\\/ListenableFuture\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\$ValueReference\\.waitForValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\.get\\:\\(Ljava\\/lang\\/Object\\;Lcom\\/google\\/common\\/cache\\/CacheLoader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\.getOrLoad\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\.getAll\\:\\(Ljava\\/lang\\/Iterable\\;\\)Lcom\\/google\\/common\\/collect\\/ImmutableMap\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LocalCache\\.loadAll\\:\\(Ljava\\/util\\/Set\\;Lcom\\/google\\/common\\/cache\\/CacheLoader\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LongAdder\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.LongAdder\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.Striped64\\$1\\.run\\:\\(\\)Lsun\\/misc\\/Unsafe\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.cache\\.Striped64\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.AbstractBiMap\\$Inverse\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.AbstractBiMap\\$Inverse\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.AbstractMapBasedMultiset\\.readObjectNoData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ArrayListMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ArrayListMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ComputingConcurrentHashMap\\$ComputationExceptionReference\\.waitForValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ComputingConcurrentHashMap\\$ComputingSegment\\.getOrCompute\\:\\(Ljava\\/lang\\/Object\\;ILcom\\/google\\/common\\/base\\/Function\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ComputingConcurrentHashMap\\$ComputingSegment\\.compute\\:\\(Ljava\\/lang\\/Object\\;ILcom\\/google\\/common\\/collect\\/MapMakerInternalMap\\$ReferenceEntry\\;Lcom\\/google\\/common\\/collect\\/ComputingConcurrentHashMap\\$ComputingValueReference\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ComputingConcurrentHashMap\\$ComputingSerializationProxy\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ComputingConcurrentHashMap\\$ComputingSerializationProxy\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ComputingConcurrentHashMap\\$ComputingValueReference\\.waitForValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ComputingConcurrentHashMap\\$ComputingValueReference\\.compute\\:\\(Ljava\\/lang\\/Object\\;I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ComputingConcurrentHashMap\\.getOrCompute\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ConcurrentHashMultiset\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ConcurrentHashMultiset\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.EnumBiMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.EnumBiMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.EnumHashBiMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.EnumHashBiMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.EnumMultiset\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.EnumMultiset\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.putFirst\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.putLast\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.offerFirst\\:\\(Ljava\\/lang\\/Object\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.offerLast\\:\\(Ljava\\/lang\\/Object\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.takeFirst\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.takeLast\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.pollFirst\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.pollLast\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.put\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.offer\\:\\(Ljava\\/lang\\/Object\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.take\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ForwardingBlockingDeque\\.poll\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.HashBiMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.HashBiMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.HashMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.HashMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.HashMultiset\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.HashMultiset\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.InvalidObjectException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ImmutableAsList\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.InvalidObjectException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ImmutableList\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ImmutableListMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ImmutableListMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ImmutableSetMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ImmutableSetMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.InvalidObjectException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.ImmutableSortedSet\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.LinkedHashMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.LinkedHashMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.LinkedHashMultiset\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.LinkedHashMultiset\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.LinkedListMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.LinkedListMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.MapMakerInternalMap\\$AbstractSerializationProxy\\.writeMapTo\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.MapMakerInternalMap\\$AbstractSerializationProxy\\.readMapMaker\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)Lcom\\/google\\/common\\/collect\\/MapMaker\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.MapMakerInternalMap\\$AbstractSerializationProxy\\.readEntries\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.MapMakerInternalMap\\$SerializationProxy\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.MapMakerInternalMap\\$SerializationProxy\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.MapMakerInternalMap\\$ValueReference\\.waitForValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Multimaps\\$CustomListMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Multimaps\\$CustomListMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Multimaps\\$CustomMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Multimaps\\$CustomMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Multimaps\\$CustomSetMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Multimaps\\$CustomSetMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Multimaps\\$CustomSortedSetMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Multimaps\\$CustomSortedSetMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Queues\\.drain\\:\\(Ljava\\/util\\/concurrent\\/BlockingQueue\\;Ljava\\/util\\/Collection\\;IJLjava\\/util\\/concurrent\\/TimeUnit\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.ClassCastException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.RegularImmutableSortedSet\\.unsafeBinarySearch\\:\\(Ljava\\/lang\\/Object\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Serialization\\.readCount\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Serialization\\.writeMap\\:\\(Ljava\\/util\\/Map\\;Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Serialization\\.populateMap\\:\\(Ljava\\/util\\/Map\\;Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Serialization\\.populateMap\\:\\(Ljava\\/util\\/Map\\;Ljava\\/io\\/ObjectInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Serialization\\.writeMultiset\\:\\(Lcom\\/google\\/common\\/collect\\/Multiset\\;Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Serialization\\.populateMultiset\\:\\(Lcom\\/google\\/common\\/collect\\/Multiset\\;Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Serialization\\.populateMultiset\\:\\(Lcom\\/google\\/common\\/collect\\/Multiset\\;Ljava\\/io\\/ObjectInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Serialization\\.writeMultimap\\:\\(Lcom\\/google\\/common\\/collect\\/Multimap\\;Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Serialization\\.populateMultimap\\:\\(Lcom\\/google\\/common\\/collect\\/Multimap\\;Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Serialization\\.populateMultimap\\:\\(Lcom\\/google\\/common\\/collect\\/Multimap\\;Ljava\\/io\\/ObjectInputStream\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.Synchronized\\$SynchronizedObject\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.TreeMultimap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.TreeMultimap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.TreeMultiset\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.collect\\.TreeMultiset\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "com\\.google\\.common\\.eventbus\\.Subscriber\\$SynchronizedSubscriber\\.invokeSubscriberMethod\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "com\\.google\\.common\\.eventbus\\.Subscriber\\.invokeSubscriberMethod\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.eventbus\\.SubscriberRegistry\\$1\\.load\\:\\(Ljava\\/lang\\/Class\\;\\)Lcom\\/google\\/common\\/collect\\/ImmutableList\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.eventbus\\.SubscriberRegistry\\$1\\.load\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.eventbus\\.SubscriberRegistry\\$2\\.load\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.hash\\.BloomFilter\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.hash\\.BloomFilter\\.readFrom\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/google\\/common\\/hash\\/Funnel\\;\\)Lcom\\/google\\/common\\/hash\\/BloomFilter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.hash\\.HashingInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.hash\\.HashingInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.hash\\.HashingInputStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.hash\\.HashingOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.hash\\.HashingOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.hash\\.HashingOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.write\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.write\\:\\(Ljava\\/lang\\/String\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.append\\:\\(C\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.checkNotClosed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.AppendableWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$1\\.openStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$2\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$3\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$3\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$3\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$4\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$4\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$4\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$5\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$5\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$5\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$5\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "com.google.common.io.BaseEncoding$DecodingException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$Alphabet\\.decode\\:\\(C\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$Base16Encoding\\.encodeTo\\:\\(Ljava\\/lang\\/Appendable\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "com.google.common.io.BaseEncoding$DecodingException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$Base16Encoding\\.decodeTo\\:\\(\\[BLjava\\/lang\\/CharSequence\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$Base64Encoding\\.encodeTo\\:\\(Ljava\\/lang\\/Appendable\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "com.google.common.io.BaseEncoding$DecodingException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$Base64Encoding\\.decodeTo\\:\\(\\[BLjava\\/lang\\/CharSequence\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$SeparatedBaseEncoding\\.encodeTo\\:\\(Ljava\\/lang\\/Appendable\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "com.google.common.io.BaseEncoding$DecodingException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$SeparatedBaseEncoding\\.decodeTo\\:\\(\\[BLjava\\/lang\\/CharSequence\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$StandardBaseEncoding\\$1\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$StandardBaseEncoding\\$1\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$StandardBaseEncoding\\$1\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$StandardBaseEncoding\\$2\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$StandardBaseEncoding\\$2\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$StandardBaseEncoding\\.encodeTo\\:\\(Ljava\\/lang\\/Appendable\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$StandardBaseEncoding\\.encodeChunkTo\\:\\(Ljava\\/lang\\/Appendable\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "com.google.common.io.BaseEncoding$DecodingException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\$StandardBaseEncoding\\.decodeTo\\:\\(\\[BLjava\\/lang\\/CharSequence\\;\\)I"
 }, 
 {
  "exceptions": [
   "com.google.common.io.BaseEncoding$DecodingException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\.decodeChecked\\:\\(Ljava\\/lang\\/CharSequence\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\.encodeTo\\:\\(Ljava\\/lang\\/Appendable\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "com.google.common.io.BaseEncoding$DecodingException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.BaseEncoding\\.decodeTo\\:\\(\\[BLjava\\/lang\\/CharSequence\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteProcessor\\.processBytes\\:\\(\\[BII\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSink\\$AsCharSink\\.openStream\\:\\(\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSink\\.openStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSink\\.openBufferedStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSink\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSink\\.writeFrom\\:\\(Ljava\\/io\\/InputStream\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$AsCharSource\\.openStream\\:\\(\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$ByteArrayByteSource\\.openBufferedStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$ByteArrayByteSource\\.copyTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$ByteArrayByteSource\\.read\\:\\(Lcom\\/google\\/common\\/io\\/ByteProcessor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$ByteArrayByteSource\\.hash\\:\\(Lcom\\/google\\/common\\/hash\\/HashFunction\\;\\)Lcom\\/google\\/common\\/hash\\/HashCode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$ConcatenatedByteSource\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$ConcatenatedByteSource\\.isEmpty\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$ConcatenatedByteSource\\.size\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$SlicedByteSource\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$SlicedByteSource\\.openBufferedStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$SlicedByteSource\\.sliceStream\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\$SlicedByteSource\\.isEmpty\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.openBufferedStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.isEmpty\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.size\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.countBySkipping\\:\\(Ljava\\/io\\/InputStream\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.countByReading\\:\\(Ljava\\/io\\/InputStream\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.copyTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.copyTo\\:\\(Lcom\\/google\\/common\\/io\\/ByteSink\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.read\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.read\\:\\(Lcom\\/google\\/common\\/io\\/ByteProcessor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.hash\\:\\(Lcom\\/google\\/common\\/hash\\/HashFunction\\;\\)Lcom\\/google\\/common\\/hash\\/HashCode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteSource\\.contentEquals\\:\\(Lcom\\/google\\/common\\/io\\/ByteSource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\$LimitedInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\$LimitedInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\$LimitedInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\$LimitedInputStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\$LimitedInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.copy\\:\\(Ljava\\/nio\\/channels\\/ReadableByteChannel\\;Ljava\\/nio\\/channels\\/WritableByteChannel\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.toByteArray\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.toByteArray\\:\\(Ljava\\/io\\/InputStream\\;I\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.readFully\\:\\(Ljava\\/io\\/InputStream\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.readFully\\:\\(Ljava\\/io\\/InputStream\\;\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.skipFully\\:\\(Ljava\\/io\\/InputStream\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.skipUpTo\\:\\(Ljava\\/io\\/InputStream\\;J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.skipSafely\\:\\(Ljava\\/io\\/InputStream\\;J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.readBytes\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/google\\/common\\/io\\/ByteProcessor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.ByteStreams\\.read\\:\\(Ljava\\/io\\/InputStream\\;\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSequenceReader\\.checkOpen\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSequenceReader\\.read\\:\\(Ljava\\/nio\\/CharBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSequenceReader\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSequenceReader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSequenceReader\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSequenceReader\\.ready\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSequenceReader\\.mark\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSequenceReader\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSequenceReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSink\\.openStream\\:\\(\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSink\\.openBufferedStream\\:\\(\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSink\\.write\\:\\(Ljava\\/lang\\/CharSequence\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSink\\.writeLines\\:\\(Ljava\\/lang\\/Iterable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSink\\.writeLines\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSink\\.writeFrom\\:\\(Ljava\\/lang\\/Readable\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\$CharSequenceCharSource\\.readLines\\:\\(Lcom\\/google\\/common\\/io\\/LineProcessor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\$ConcatenatedCharSource\\.openStream\\:\\(\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\$ConcatenatedCharSource\\.isEmpty\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\$ConcatenatedCharSource\\.length\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.openStream\\:\\(\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.openBufferedStream\\:\\(\\)Ljava\\/io\\/BufferedReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.length\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.countBySkipping\\:\\(Ljava\\/io\\/Reader\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.copyTo\\:\\(Ljava\\/lang\\/Appendable\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.copyTo\\:\\(Lcom\\/google\\/common\\/io\\/CharSink\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.read\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.readFirstLine\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.readLines\\:\\(\\)Lcom\\/google\\/common\\/collect\\/ImmutableList\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.readLines\\:\\(Lcom\\/google\\/common\\/io\\/LineProcessor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharSource\\.isEmpty\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\$1\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\$1\\.read\\:\\(Ljava\\/nio\\/CharBuffer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\$1\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\$NullWriter\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\$NullWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\$NullWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\.copy\\:\\(Ljava\\/lang\\/Readable\\;Ljava\\/lang\\/Appendable\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\.toString\\:\\(Ljava\\/lang\\/Readable\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\.toStringBuilder\\:\\(Ljava\\/lang\\/Readable\\;\\)Ljava\\/lang\\/StringBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\.readLines\\:\\(Ljava\\/lang\\/Readable\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\.readLines\\:\\(Ljava\\/lang\\/Readable\\;Lcom\\/google\\/common\\/io\\/LineProcessor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CharStreams\\.skipFully\\:\\(Ljava\\/io\\/Reader\\;J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Closeables\\.close\\:\\(Ljava\\/io\\/Closeable\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Closer\\.rethrow\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/RuntimeException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Closer\\.rethrow\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/RuntimeException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.Exception", 
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Closer\\.rethrow\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/RuntimeException\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Closer\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CountingInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CountingInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CountingInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CountingInputStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CountingOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CountingOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.CountingOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\$1\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\$2\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\.openInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\.update\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.FileBackedOutputStream\\.access\\$100\\:\\(Lcom\\/google\\/common\\/io\\/FileBackedOutputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\$FileByteSink\\.openStream\\:\\(\\)Ljava\\/io\\/FileOutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\$FileByteSink\\.openStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\$FileByteSource\\.openStream\\:\\(\\)Ljava\\/io\\/FileInputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\$FileByteSource\\.size\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\$FileByteSource\\.read\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\$FileByteSource\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.newReader\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/io\\/BufferedReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.newWriter\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/io\\/BufferedWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.readFile\\:\\(Ljava\\/io\\/InputStream\\;J\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.toByteArray\\:\\(Ljava\\/io\\/File\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.toString\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.write\\:\\(\\[BLjava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.copy\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.copy\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.write\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.write\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.copy\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.equal\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.touch\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.createParentDirs\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.move\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.readFirstLine\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.readLines\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.readLines\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;Lcom\\/google\\/common\\/io\\/LineProcessor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.readBytes\\:\\(Ljava\\/io\\/File\\;Lcom\\/google\\/common\\/io\\/ByteProcessor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.hash\\:\\(Ljava\\/io\\/File\\;Lcom\\/google\\/common\\/hash\\/HashFunction\\;\\)Lcom\\/google\\/common\\/hash\\/HashCode\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.map\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/nio\\/MappedByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.map\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/channels\\/FileChannel\\$MapMode\\;\\)Ljava\\/nio\\/MappedByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.map\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/channels\\/FileChannel\\$MapMode\\;J\\)Ljava\\/nio\\/MappedByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Files\\.map\\:\\(Ljava\\/io\\/RandomAccessFile\\;Ljava\\/nio\\/channels\\/FileChannel\\$MapMode\\;J\\)Ljava\\/nio\\/MappedByteBuffer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Flushables\\.flush\\:\\(Ljava\\/io\\/Flushable\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.InputSupplier\\.getInput\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LineBuffer\\.add\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LineBuffer\\.finishLine\\:\\(Z\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LineBuffer\\.finish\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LineBuffer\\.handleLine\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LineProcessor\\.processLine\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LineReader\\.readLine\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readFully\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readFully\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.skipBytes\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readUnsignedByte\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readUnsignedShort\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readLong\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readFloat\\:\\(\\)F"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readDouble\\:\\(\\)D"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readUTF\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readShort\\:\\(\\)S"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readChar\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readByte\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readBoolean\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.io.EOFException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataInputStream\\.readAndCheckByte\\:\\(\\)B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeBoolean\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeByte\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeBytes\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeChar\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeChars\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeDouble\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeFloat\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeLong\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeShort\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.writeUTF\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.LittleEndianDataOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiInputStream\\.\\<init\\>\\:\\(Ljava\\/util\\/Iterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiInputStream\\.advance\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiReader\\.\\<init\\>\\:\\(Ljava\\/util\\/Iterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiReader\\.advance\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiReader\\.read\\:\\(\\[CII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiReader\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiReader\\.ready\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.MultiReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.OutputSupplier\\.getOutput\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Resources\\$UrlByteSource\\.openStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Resources\\.toByteArray\\:\\(Ljava\\/net\\/URL\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Resources\\.toString\\:\\(Ljava\\/net\\/URL\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Resources\\.readLines\\:\\(Ljava\\/net\\/URL\\;Ljava\\/nio\\/charset\\/Charset\\;Lcom\\/google\\/common\\/io\\/LineProcessor\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Resources\\.readLines\\:\\(Ljava\\/net\\/URL\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.io\\.Resources\\.copy\\:\\(Ljava\\/net\\/URL\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "com\\.google\\.common\\.net\\.HostSpecifier\\.from\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/google\\/common\\/net\\/HostSpecifier\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "com\\.google\\.common\\.net\\.InetAddresses\\.fromLittleEndianByteArray\\:\\(\\[B\\)Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.primitives\\.UnsignedBytes\\$LexicographicalComparatorHolder\\$UnsafeComparator\\$1\\.run\\:\\(\\)Lsun\\/misc\\/Unsafe\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.primitives\\.UnsignedBytes\\$LexicographicalComparatorHolder\\$UnsafeComparator\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.AbstractInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.AbstractInvocationHandler\\.handleInvocation\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\$DefaultScanner\\.scanDirectory\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\$DefaultScanner\\.scanDirectory\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\$ResourceInfo\\.url\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\$Scanner\\.scan\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\$Scanner\\.scanDirectory\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\$Scanner\\.scanJarFile\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/util\\/jar\\/JarFile\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\$Scanner\\.scan\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\$Scanner\\.scanFrom\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\$Scanner\\.scanJar\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\$Scanner\\.getClassPathEntry\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.ClassPath\\.from\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lcom\\/google\\/common\\/reflect\\/ClassPath\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.Element\\.setAccessible\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.Invokable\\$ConstructorInvokable\\.invokeInternal\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.Invokable\\$MethodInvokable\\.invokeInternal\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.Invokable\\.invoke\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.Invokable\\.invokeInternal\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.google\\.common\\.reflect\\.Types\\$TypeVariableInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractCheckedFuture\\.checkedGet\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException", 
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractCheckedFuture\\.checkedGet\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractExecutionThreadService\\.startUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractExecutionThreadService\\.run\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractExecutionThreadService\\.shutDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractExecutionThreadService\\.awaitRunning\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractExecutionThreadService\\.awaitTerminated\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractFuture\\$TrustedFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractFuture\\$TrustedFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractFuture\\$UnsafeAtomicHelper\\$1\\.run\\:\\(\\)Lsun\\/misc\\/Unsafe\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractFuture\\$UnsafeAtomicHelper\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.TimeoutException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractFuture\\.getDoneValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractIdleService\\.startUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractIdleService\\.shutDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractIdleService\\.awaitRunning\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractIdleService\\.awaitTerminated\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractScheduledService\\$CustomScheduler\\$ReschedulableCallable\\.call\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractScheduledService\\$CustomScheduler\\$ReschedulableCallable\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractScheduledService\\$CustomScheduler\\.getNextSchedule\\:\\(\\)Lcom\\/google\\/common\\/util\\/concurrent\\/AbstractScheduledService\\$CustomScheduler\\$Schedule\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractScheduledService\\.runOneIteration\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractScheduledService\\.startUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractScheduledService\\.shutDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractScheduledService\\.awaitRunning\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractScheduledService\\.awaitTerminated\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractService\\.awaitRunning\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AbstractService\\.awaitTerminated\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AsyncFunction\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)Lcom\\/google\\/common\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AtomicDouble\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AtomicDouble\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AtomicDoubleArray\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.AtomicDoubleArray\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Callables\\$2\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.CheckedFuture\\.checkedGet\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException", 
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.CheckedFuture\\.checkedGet\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.CycleDetectingLockFactory\\$CycleDetectingReentrantLock\\.lockInterruptibly\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.CycleDetectingLockFactory\\$CycleDetectingReentrantLock\\.tryLock\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.CycleDetectingLockFactory\\$CycleDetectingReentrantReadLock\\.lockInterruptibly\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.CycleDetectingLockFactory\\$CycleDetectingReentrantReadLock\\.tryLock\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.CycleDetectingLockFactory\\$CycleDetectingReentrantWriteLock\\.lockInterruptibly\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.CycleDetectingLockFactory\\$CycleDetectingReentrantWriteLock\\.tryLock\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.FakeTimeLimiter\\.callWithTimeout\\:\\(Ljava\\/util\\/concurrent\\/Callable\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingBlockingQueue\\.offer\\:\\(Ljava\\/lang\\/Object\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingBlockingQueue\\.poll\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingBlockingQueue\\.put\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingBlockingQueue\\.take\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingCheckedFuture\\.checkedGet\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException", 
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingCheckedFuture\\.checkedGet\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingExecutorService\\.awaitTermination\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingExecutorService\\.invokeAll\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingExecutorService\\.invokeAll\\:\\(Ljava\\/util\\/Collection\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingExecutorService\\.invokeAny\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingExecutorService\\.invokeAny\\:\\(Ljava\\/util\\/Collection\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ForwardingFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.FutureFallback\\.create\\:\\(Ljava\\/lang\\/Throwable\\;\\)Lcom\\/google\\/common\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$1\\.apply\\:\\(Ljava\\/lang\\/Throwable\\;\\)Lcom\\/google\\/common\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$1\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)Lcom\\/google\\/common\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$3\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$3\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$3\\.applyTransformation\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$4\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)Lcom\\/google\\/common\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$AbstractCatchingFuture\\.doFallback\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$AbstractChainingFuture\\.doTransform\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$AsyncCatchingFuture\\.doFallback\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/AsyncFunction\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$AsyncCatchingFuture\\.doFallback\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$AsyncChainingFuture\\.doTransform\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/AsyncFunction\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$AsyncChainingFuture\\.doTransform\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$CatchingFuture\\.doFallback\\:\\(Lcom\\/google\\/common\\/base\\/Function\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$CatchingFuture\\.doFallback\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$ChainingFuture\\.doTransform\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$ImmediateFailedCheckedFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$ImmediateFailedCheckedFuture\\.checkedGet\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$ImmediateFailedCheckedFuture\\.checkedGet\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$ImmediateFailedFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$ImmediateFuture\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\$ImmediateFuture\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\.get\\:\\(Ljava\\/util\\/concurrent\\/Future\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\.get\\:\\(Ljava\\/util\\/concurrent\\/Future\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\.getChecked\\:\\(Ljava\\/util\\/concurrent\\/Future\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Futures\\.getChecked\\:\\(Ljava\\/util\\/concurrent\\/Future\\;Ljava\\/lang\\/Class\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.FuturesGetChecked\\.getChecked\\:\\(Ljava\\/util\\/concurrent\\/Future\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.FuturesGetChecked\\.getChecked\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/FuturesGetChecked\\$GetCheckedTypeValidator\\;Ljava\\/util\\/concurrent\\/Future\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.FuturesGetChecked\\.getChecked\\:\\(Ljava\\/util\\/concurrent\\/Future\\;Ljava\\/lang\\/Class\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.FuturesGetChecked\\.wrapAndThrowExceptionOrError\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ListeningExecutorService\\.invokeAll\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ListeningExecutorService\\.invokeAll\\:\\(Ljava\\/util\\/Collection\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Monitor\\.enterInterruptibly\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Monitor\\.enterInterruptibly\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Monitor\\.enterWhen\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/Monitor\\$Guard\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Monitor\\.enterWhen\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/Monitor\\$Guard\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Monitor\\.enterIfInterruptibly\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/Monitor\\$Guard\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Monitor\\.enterIfInterruptibly\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/Monitor\\$Guard\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Monitor\\.waitFor\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/Monitor\\$Guard\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Monitor\\.waitFor\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/Monitor\\$Guard\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Monitor\\.await\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/Monitor\\$Guard\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Monitor\\.awaitNanos\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/Monitor\\$Guard\\;JZ\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.MoreExecutors\\$DirectExecutorService\\.awaitTermination\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.MoreExecutors\\$ListeningDecorator\\.awaitTermination\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.MoreExecutors\\.invokeAnyImpl\\:\\(Lcom\\/google\\/common\\/util\\/concurrent\\/ListeningExecutorService\\;Ljava\\/util\\/Collection\\;ZJ\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Service\\.awaitRunning\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Service\\.awaitTerminated\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ServiceManager\\$ServiceManagerState\\.awaitHealthy\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ServiceManager\\$ServiceManagerState\\.awaitStopped\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ServiceManager\\.awaitHealthy\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.ServiceManager\\.awaitStopped\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.SimpleTimeLimiter\\$1\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.SimpleTimeLimiter\\$1\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.SimpleTimeLimiter\\.callWithTimeout\\:\\(Ljava\\/util\\/concurrent\\/Callable\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.SimpleTimeLimiter\\.throwCause\\:\\(Ljava\\/lang\\/Exception\\;Z\\)Ljava\\/lang\\/Exception\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.SimpleTimeLimiter\\.access\\$000\\:\\(Ljava\\/lang\\/Exception\\;Z\\)Ljava\\/lang\\/Exception\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.TimeLimiter\\.callWithTimeout\\:\\(Ljava\\/util\\/concurrent\\/Callable\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Uninterruptibles\\.getUninterruptibly\\:\\(Ljava\\/util\\/concurrent\\/Future\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.Uninterruptibles\\.getUninterruptibly\\:\\(Ljava\\/util\\/concurrent\\/Future\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.WrappingExecutorService\\.invokeAll\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.WrappingExecutorService\\.invokeAll\\:\\(Ljava\\/util\\/Collection\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.WrappingExecutorService\\.invokeAny\\:\\(Ljava\\/util\\/Collection\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.WrappingExecutorService\\.invokeAny\\:\\(Ljava\\/util\\/Collection\\;JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "com\\.google\\.common\\.util\\.concurrent\\.WrappingExecutorService\\.awaitTermination\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.BackgroundInitializer\\$InitializationTask\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.Computable\\.compute\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.CircuitBreakingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.EventCountCircuitBreaker\\.incrementAndCheckState\\:\\(Ljava\\/lang\\/Integer\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.event\\.EventListenerSupport\\$ProxyInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.mutable\\.MutableInt\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readStaticField\\:\\(Ljava\\/lang\\/reflect\\/Field\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readStaticField\\:\\(Ljava\\/lang\\/reflect\\/Field\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readStaticField\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readStaticField\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readDeclaredStaticField\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readDeclaredStaticField\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readField\\:\\(Ljava\\/lang\\/reflect\\/Field\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readField\\:\\(Ljava\\/lang\\/reflect\\/Field\\;Ljava\\/lang\\/Object\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readField\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readField\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readDeclaredField\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.readDeclaredField\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeStaticField\\:\\(Ljava\\/lang\\/reflect\\/Field\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeStaticField\\:\\(Ljava\\/lang\\/reflect\\/Field\\;Ljava\\/lang\\/Object\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeStaticField\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeStaticField\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeDeclaredStaticField\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeDeclaredStaticField\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeField\\:\\(Ljava\\/lang\\/reflect\\/Field\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeField\\:\\(Ljava\\/lang\\/reflect\\/Field\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeField\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeField\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeDeclaredField\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.FieldUtils\\.writeDeclaredField\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.SerializationUtils\\$ClassLoaderAwareObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.SerializationUtils\\$ClassLoaderAwareObjectInputStream\\.resolveClass\\:\\(Ljava\\/io\\/ObjectStreamClass\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.StringEscapeUtils\\$CsvEscaper\\.translate\\:\\(Ljava\\/lang\\/CharSequence\\;ILjava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.CompositeFormat\\.reformat\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.CharSequenceTranslator\\.translate\\:\\(Ljava\\/lang\\/CharSequence\\;ILjava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.CharSequenceTranslator\\.translate\\:\\(Ljava\\/lang\\/CharSequence\\;Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.LookupTranslator\\.translate\\:\\(Ljava\\/lang\\/CharSequence\\;ILjava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.OctalUnescaper\\.translate\\:\\(Ljava\\/lang\\/CharSequence\\;ILjava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDateParser\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDateParser\\.parseObject\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDateParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TwoDigitNumberField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TwoDigitNumberField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$WeekYear\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$WeekYear\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.ArchUtils\\.addProcessor\\:\\(Ljava\\/lang\\/String\\;Lorg\\/apache\\/commons\\/lang3\\/arch\\/Processor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.ArchUtils\\.addProcessors\\:\\(Lorg\\/apache\\/commons\\/lang3\\/arch\\/Processor\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.builder\\.ReflectionToStringBuilder\\.getValue\\:\\(Ljava\\/lang\\/reflect\\/Field\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.AtomicSafeInitializer\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.AtomicSafeInitializer\\.initialize\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.Memoizer\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.MultiBackgroundInitializer\\.initialize\\:\\(\\)Lorg\\/apache\\/commons\\/lang3\\/concurrent\\/MultiBackgroundInitializer\\$MultiBackgroundInitializerResults\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.MultiBackgroundInitializer\\.initialize\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.mutable\\.MutableDouble\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.ObjectUtils\\.identityToString\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.ObjectUtils\\.CONST\\_BYTE\\:\\(I\\)B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.ObjectUtils\\.CONST\\_SHORT\\:\\(I\\)S"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.ConstructorUtils\\.invokeConstructor\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.ConstructorUtils\\.invokeConstructor\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.ConstructorUtils\\.invokeExactConstructor\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.InstantiationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.ConstructorUtils\\.invokeExactConstructor\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.StrBuilder\\.readFrom\\:\\(Ljava\\/lang\\/Readable\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.StrBuilder\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.StrBuilder\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.StrBuilder\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.StrBuilder\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.CodePointTranslator\\.translate\\:\\(Ljava\\/lang\\/CharSequence\\;ILjava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.CodePointTranslator\\.translate\\:\\(ILjava\\/io\\/Writer\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.NumericEntityEscaper\\.translate\\:\\(ILjava\\/io\\/Writer\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.UnicodeUnescaper\\.translate\\:\\(Ljava\\/lang\\/CharSequence\\;ILjava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDateFormat\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$CharacterLiteral\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TimeZoneNameRule\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TimeZoneNumberRule\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TwoDigitMonthField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TwoDigitMonthField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$UnpaddedNumberField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$UnpaddedNumberField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.BackgroundInitializer\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.BackgroundInitializer\\.initialize\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.CallableBackgroundInitializer\\.initialize\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.ConcurrentUtils\\.handleCause\\:\\(Ljava\\/util\\/concurrent\\/ExecutionException\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.ConcurrentUtils\\.initialize\\:\\(Lorg\\/apache\\/commons\\/lang3\\/concurrent\\/ConcurrentInitializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.ConcurrentUtils\\.createIfAbsent\\:\\(Ljava\\/util\\/concurrent\\/ConcurrentMap\\;Ljava\\/lang\\/Object\\;Lorg\\/apache\\/commons\\/lang3\\/concurrent\\/ConcurrentInitializer\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.LazyInitializer\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.LazyInitializer\\.initialize\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.TimedSemaphore\\.acquire\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.event\\.EventListenerSupport\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.event\\.EventListenerSupport\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.exception\\.ExceptionUtils\\.typeErasure\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.mutable\\.MutableByte\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.mutable\\.MutableLong\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.StringEscapeUtils\\$CsvUnescaper\\.translate\\:\\(Ljava\\/lang\\/CharSequence\\;ILjava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.StrTokenizer\\.cloneReset\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.UnicodeEscaper\\.translate\\:\\(ILjava\\/io\\/Writer\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.DateParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.DateParser\\.parseObject\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.DateUtils\\.parseDate\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.DateUtils\\.parseDate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.DateUtils\\.parseDateStrictly\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.DateUtils\\.parseDateStrictly\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.DateUtils\\.parseDateWithLeniency\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Locale\\;\\[Ljava\\/lang\\/String\\;Z\\)Ljava\\/util\\/Date\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$DayInWeekField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$DayInWeekField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$Iso8601\\_Rule\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$NumberRule\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$PaddedNumberField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$PaddedNumberField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$Rule\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$StringLiteral\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TwelveHourField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TwelveHourField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TwoDigitYearField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TwoDigitYearField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\.appendDigits\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\.appendFullDigits\\:\\(Ljava\\/lang\\/Appendable\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\.access\\$000\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\.access\\$100\\:\\(Ljava\\/lang\\/Appendable\\;II\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.ClassUtils\\.getClass\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.ClassUtils\\.getClass\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.ClassUtils\\.getClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.ClassUtils\\.getClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.ClassUtils\\.getPublicMethod\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.AtomicInitializer\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.AtomicInitializer\\.initialize\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.ConcurrentInitializer\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.ConcurrentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.ConstantInitializer\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.Memoizer\\.compute\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.CircuitBreakingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.ThresholdCircuitBreaker\\.checkState\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.lang3.concurrent.CircuitBreakingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.concurrent\\.ThresholdCircuitBreaker\\.incrementAndCheckState\\:\\(Ljava\\/lang\\/Long\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.event\\.EventUtils\\$EventBindingInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.math\\.NumberUtils\\.createNumber\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.mutable\\.MutableFloat\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.mutable\\.MutableShort\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeMethod\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeMethod\\:\\(Ljava\\/lang\\/Object\\;ZLjava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeMethod\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeMethod\\:\\(Ljava\\/lang\\/Object\\;ZLjava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeMethod\\:\\(Ljava\\/lang\\/Object\\;ZLjava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeMethod\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeExactMethod\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeExactMethod\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeExactMethod\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeExactStaticMethod\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeStaticMethod\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeStaticMethod\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.reflect\\.MethodUtils\\.invokeExactStaticMethod\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.StringUtils\\.toString\\:\\(\\[BLjava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.AggregateTranslator\\.translate\\:\\(Ljava\\/lang\\/CharSequence\\;ILjava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.NumericEntityUnescaper\\.translate\\:\\(Ljava\\/lang\\/CharSequence\\;ILjava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.text\\.translate\\.UnicodeUnpairedSurrogateRemover\\.translate\\:\\(ILjava\\/io\\/Writer\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TextField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TwentyFourHourField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$TwentyFourHourField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$UnpaddedMonthField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/util\\/Calendar\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.lang3\\.time\\.FastDatePrinter\\$UnpaddedMonthField\\.appendTo\\:\\(Ljava\\/lang\\/Appendable\\;I\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecInputStream\\.reset\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecOutputStream\\.flush\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BaseNCodecOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BinaryCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.BinaryCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.Hex\\.decodeHex\\:\\(\\[C\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.Hex\\.toDigit\\:\\(CI\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.Hex\\.decode\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.Hex\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.binary\\.Hex\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.BinaryDecoder\\.decode\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.BinaryEncoder\\.encode\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.Decoder\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.digest\\:\\(Ljava\\/security\\/MessageDigest\\;Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.md2\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.md2Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.md5\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.md5Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha1\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha1Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha256\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha256Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha384\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha384Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha512\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.sha512Hex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.shaHex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.DigestUtils\\.updateDigest\\:\\(Ljava\\/security\\/MessageDigest\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/security\\/MessageDigest\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.hmacMd5\\:\\(\\[BLjava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.hmacMd5Hex\\:\\(\\[BLjava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.hmacSha1\\:\\(\\[BLjava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.hmacSha1Hex\\:\\(\\[BLjava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.hmacSha256\\:\\(\\[BLjava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.hmacSha256Hex\\:\\(\\[BLjava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.hmacSha384\\:\\(\\[BLjava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.hmacSha384Hex\\:\\(\\[BLjava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.hmacSha512\\:\\(\\[BLjava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.hmacSha512Hex\\:\\(\\[BLjava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.digest\\.HmacUtils\\.updateHmac\\:\\(Ljavax\\/crypto\\/Mac\\;Ljava\\/io\\/InputStream\\;\\)Ljavax\\/crypto\\/Mac\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.Encoder\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.AbstractCaverphone\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.AbstractCaverphone\\.isEncodeEqual\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.bm\\.BeiderMorseEncoder\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.bm\\.BeiderMorseEncoder\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.Caverphone\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.ColognePhonetic\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.DaitchMokotoffSoundex\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.DoubleMetaphone\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.MatchRatingApproachEncoder\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.Metaphone\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.Nysiis\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.RefinedSoundex\\.difference\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.RefinedSoundex\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.Soundex\\.difference\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.Soundex\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.language\\.SoundexUtils\\.difference\\:\\(Lorg\\/apache\\/commons\\/codec\\/StringEncoder\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.BCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.doDecoding\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.nio.charset.IllegalCharsetNameException", 
   "java.lang.IllegalArgumentException", 
   "java.nio.charset.UnsupportedCharsetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decodeQuotedPrintable\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decode\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.QuotedPrintableCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.RFC1522Codec\\.encodeText\\:\\(Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.RFC1522Codec\\.encodeText\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.RFC1522Codec\\.decodeText\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.RFC1522Codec\\.doEncoding\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.RFC1522Codec\\.doDecoding\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.decodeUrl\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.decode\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.encode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.URLCodec\\.decode\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.net\\.Utils\\.digit16\\:\\(B\\)I"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.DecoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.StringDecoder\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.apache.commons.codec.EncoderException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.codec\\.StringEncoder\\.encode\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.BeanMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.ClassCastException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.BeanMap\\.put\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.ClassCastException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.BeanMap\\.createWriteMethodArguments\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/Object\\;\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.IllegalArgumentException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.BeanMap\\.convertType\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.CursorableLinkedList\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.CursorableLinkedList\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NullPointerException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.MapUtils\\.safeAddToMap\\:\\(Ljava\\/util\\/Map\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.SynchronizedPriorityQueue\\.peek\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.SynchronizedPriorityQueue\\.pop\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.DoubleOrderedMap\\$Node\\.setValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bag\\.AbstractMapBag\\.doWriteObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bag\\.AbstractMapBag\\.doReadObject\\:\\(Ljava\\/util\\/Map\\;Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bag\\.UnmodifiableBag\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bag\\.UnmodifiableBag\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bag\\.HashBag\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bag\\.HashBag\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bag\\.UnmodifiableSortedBag\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bag\\.UnmodifiableSortedBag\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bag\\.TreeBag\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bag\\.TreeBag\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.ListOrderedMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.ListOrderedMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.FixedSizeSortedMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.FixedSizeSortedMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.Flat3Map\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.Flat3Map\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.PredicatedMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.PredicatedMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.TransformedMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.TransformedMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.HashedMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.HashedMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.LRUMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.LRUMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.LRUMap\\.doWriteObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.LRUMap\\.doReadObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.AbstractHashedMap\\.doWriteObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.AbstractHashedMap\\.doReadObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.UnmodifiableMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.UnmodifiableMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.DefaultedMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.DefaultedMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.FixedSizeMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.FixedSizeMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.IdentityMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.IdentityMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.LinkedMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.LinkedMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.CaseInsensitiveMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.CaseInsensitiveMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.LazyMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.LazyMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.ReferenceIdentityMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.ReferenceIdentityMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.CompositeMap\\.addComposited\\:\\(Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.ReferenceMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.ReferenceMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.AbstractReferenceMap\\.doWriteObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.AbstractReferenceMap\\.doReadObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.UnmodifiableSortedMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.UnmodifiableSortedMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.UnmodifiableOrderedMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.map\\.UnmodifiableOrderedMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.LRUMap\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.LRUMap\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.SequencedHashMap\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.SequencedHashMap\\.readExternal\\:\\(Ljava\\/io\\/ObjectInput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.SequencedHashMap\\.writeExternal\\:\\(Ljava\\/io\\/ObjectOutput\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.BinaryHeap\\.peek\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.BinaryHeap\\.pop\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassCastException", 
   "java.lang.NullPointerException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.DoubleOrderedMap\\.\\<init\\>\\:\\(Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassCastException", 
   "java.lang.NullPointerException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.DoubleOrderedMap\\.getKeyForValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.DoubleOrderedMap\\.insertValue\\:\\(Lorg\\/apache\\/commons\\/collections\\/DoubleOrderedMap\\$Node\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassCastException", 
   "java.lang.NullPointerException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.DoubleOrderedMap\\.containsKey\\:\\(Ljava\\/lang\\/Object\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.ClassCastException", 
   "java.lang.NullPointerException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.DoubleOrderedMap\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassCastException", 
   "java.lang.NullPointerException", 
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.DoubleOrderedMap\\.put\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bidimap\\.TreeBidiMap\\$Node\\.setValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bidimap\\.DualTreeBidiMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bidimap\\.DualTreeBidiMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bidimap\\.DualHashBidiMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bidimap\\.DualHashBidiMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.bidimap\\.TreeBidiMap\\.insertValue\\:\\(Lorg\\/apache\\/commons\\/collections\\/bidimap\\/TreeBidiMap\\$Node\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ExtendedProperties\\$PropertiesReader\\.readProperty\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.CursorableLinkedList\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.CursorableLinkedList\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.NodeCachingLinkedList\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.NodeCachingLinkedList\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.TreeList\\$TreeListIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/collections\\/list\\/TreeList\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.AbstractSerializableListDecorator\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.AbstractSerializableListDecorator\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.AbstractLinkedList\\.getNode\\:\\(IZ\\)Lorg\\/apache\\/commons\\/collections\\/list\\/AbstractLinkedList\\$Node\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.AbstractLinkedList\\.doWriteObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.AbstractLinkedList\\.doReadObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.AbstractLinkedList\\$LinkedListIterator\\.\\<init\\>\\:\\(Lorg\\/apache\\/commons\\/collections\\/list\\/AbstractLinkedList\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.list\\.AbstractLinkedList\\$LinkedListIterator\\.getLastNodeReturned\\:\\(\\)Lorg\\/apache\\/commons\\/collections\\/list\\/AbstractLinkedList\\$Node\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.comparators\\.ComparatorChain\\.setComparator\\:\\(ILjava\\/util\\/Comparator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.comparators\\.ComparatorChain\\.compare\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.util.EmptyStackException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ArrayStack\\.peek\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.EmptyStackException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ArrayStack\\.peek\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.EmptyStackException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ArrayStack\\.pop\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ReferenceMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ReferenceMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.collection\\.AbstractSerializableCollectionDecorator\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.collection\\.AbstractSerializableCollectionDecorator\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IndexOutOfBoundsException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.iterators\\.IteratorChain\\.setIterator\\:\\(ILjava\\/util\\/Iterator\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.iterators\\.CollatingIterator\\.next\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.iterators\\.CollatingIterator\\.checkNotStarted\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.iterators\\.ListIteratorWrapper\\.add\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.iterators\\.ListIteratorWrapper\\.next\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.iterators\\.ListIteratorWrapper\\.previous\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.iterators\\.ListIteratorWrapper\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.iterators\\.ListIteratorWrapper\\.set\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.set\\.AbstractSerializableSetDecorator\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.set\\.AbstractSerializableSetDecorator\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.set\\.UnmodifiableSortedSet\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.set\\.UnmodifiableSortedSet\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.ForClosure\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.ForClosure\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.PrototypeFactory\\$PrototypeCloneFactory\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.PrototypeFactory\\$PrototypeCloneFactory\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.InstantiateTransformer\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.InstantiateTransformer\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.PrototypeFactory\\$PrototypeSerializationFactory\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.PrototypeFactory\\$PrototypeSerializationFactory\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.InvokerTransformer\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.InvokerTransformer\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.WhileClosure\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.WhileClosure\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.CloneTransformer\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.CloneTransformer\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.InstantiateFactory\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.functors\\.InstantiateFactory\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.MultiHashMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.ConcurrentModificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.CursorableSubList\\.checkForComod\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ExtendedProperties\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ExtendedProperties\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ExtendedProperties\\.load\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ExtendedProperties\\.load\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.ExtendedProperties\\.save\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.util.NoSuchElementException", 
   "java.util.ConcurrentModificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.DoubleOrderedMap\\$DoubleOrderedMapIterator\\.next\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException", 
   "java.util.ConcurrentModificationException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.DoubleOrderedMap\\$DoubleOrderedMapIterator\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.buffer\\.BoundedFifoBuffer\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.buffer\\.BoundedFifoBuffer\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.buffer\\.UnboundedFifoBuffer\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.buffer\\.UnboundedFifoBuffer\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.buffer\\.UnmodifiableBuffer\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.apache\\.commons\\.collections\\.buffer\\.UnmodifiableBuffer\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONPObject\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.MiscCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.AdderSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.AppendableSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.BigDecimalCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.DoubleSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.PrimitiveArraySerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeConfig\\.createASMSerializer\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/SerializeBeanInfo\\;\\)Lcom\\/alibaba\\/fastjson\\/serializer\\/JavaBeanSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.FieldSerializer\\.writePrefix\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.FieldSerializer\\.getPropertyValueDirect\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.FieldSerializer\\.getPropertyValue\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.FieldSerializer\\.writeValue\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ClobSeriliazer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.AwtCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JSONAwareSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.EnumSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ReferenceCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.CalendarCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.BooleanCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ToStringSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JSONSerializableSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ArraySerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ObjectSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.EnumerationSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.AtomicCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JSONLibDataFormatSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.IntegerCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.writeDirectNonContext\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.writeAsArray\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.writeAsArrayNonContext\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.writeNoneASM\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.getFieldValues\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.getObjectFieldValues\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.getSize\\:\\(Ljava\\/lang\\/Object\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.getFieldNames\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JavaBeanSerializer\\.getFieldValuesMap\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.LongCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ASMSerializerFactory\\.createJavaBeanSerializer\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/SerializeBeanInfo\\;\\)Lcom\\/alibaba\\/fastjson\\/serializer\\/JavaBeanSerializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ASMSerializerFactory\\.generateWriteAsArray\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/alibaba\\/fastjson\\/asm\\/MethodVisitor\\;\\[Lcom\\/alibaba\\/fastjson\\/util\\/FieldInfo\\;Lcom\\/alibaba\\/fastjson\\/serializer\\/ASMSerializerFactory\\$Context\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ASMSerializerFactory\\.generateWriteMethod\\:\\(Ljava\\/lang\\/Class\\;Lcom\\/alibaba\\/fastjson\\/asm\\/MethodVisitor\\;\\[Lcom\\/alibaba\\/fastjson\\/util\\/FieldInfo\\;Lcom\\/alibaba\\/fastjson\\/serializer\\/ASMSerializerFactory\\$Context\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.StringCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.FloatCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.JSONSerializable\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SimpleDateFormatSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ObjectArrayCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.writeTo\\:\\(Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/nio\\/charset\\/Charset\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.writeToEx\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/nio\\/charset\\/Charset\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.encodeToUTF8\\:\\(Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.writeLongAndChar\\:\\(JC\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.append\\:\\(C\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/io\\/Writer\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.append\\:\\(C\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;II\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.SerializeWriter\\.append\\:\\(Ljava\\/lang\\/CharSequence\\;\\)Ljava\\/lang\\/Appendable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ListSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.ContextObjectSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Lcom\\/alibaba\\/fastjson\\/serializer\\/BeanContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.MapSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.MapSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;IZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.CollectionCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.BigIntegerCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.AnnotationSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.GuavaCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.CharacterCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.serializer\\.DateCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.util\\.AntiCollisionHashMap\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.util\\.AntiCollisionHashMap\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.util\\.ServiceLoader\\.load\\:\\(Ljava\\/net\\/URL\\;Ljava\\/util\\/Set\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.util\\.ASMClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassFormatError"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.util\\.ASMClassLoader\\.defineClassPublic\\:\\(Ljava\\/lang\\/String\\;\\[BII\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.util\\.FieldInfo\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.util\\.FieldInfo\\.set\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.util\\.FieldInfo\\.setAccessible\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONStreamAware\\.writeJSONString\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONObject\\$SecureObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONObject\\$SecureObjectInputStream\\.resolveClass\\:\\(Ljava\\/io\\/ObjectStreamClass\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONObject\\$SecureObjectInputStream\\.resolveProxyClass\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.io.StreamCorruptedException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONObject\\$SecureObjectInputStream\\.readStreamHeader\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSON\\.parseObject\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/reflect\\/Type\\;\\[Lcom\\/alibaba\\/fastjson\\/parser\\/Feature\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSON\\.parseObject\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/nio\\/charset\\/Charset\\;Ljava\\/lang\\/reflect\\/Type\\;\\[Lcom\\/alibaba\\/fastjson\\/parser\\/Feature\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSON\\.writeJSONString\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/Object\\;\\[Lcom\\/alibaba\\/fastjson\\/serializer\\/SerializerFeature\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSON\\.writeJSONString\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/Object\\;I\\[Lcom\\/alibaba\\/fastjson\\/serializer\\/SerializerFeature\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSON\\.writeJSONString\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/nio\\/charset\\/Charset\\;Ljava\\/lang\\/Object\\;\\[Lcom\\/alibaba\\/fastjson\\/serializer\\/SerializerFeature\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSON\\.writeJSONString\\:\\(Ljava\\/io\\/OutputStream\\;Ljava\\/nio\\/charset\\/Charset\\;Ljava\\/lang\\/Object\\;Lcom\\/alibaba\\/fastjson\\/serializer\\/SerializeConfig\\;\\[Lcom\\/alibaba\\/fastjson\\/serializer\\/SerializeFilter\\;Ljava\\/lang\\/String\\;I\\[Lcom\\/alibaba\\/fastjson\\/serializer\\/SerializerFeature\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.parser\\.deserializer\\.ASMDeserializerFactory\\.createJavaBeanDeserializer\\:\\(Lcom\\/alibaba\\/fastjson\\/parser\\/ParserConfig\\;Lcom\\/alibaba\\/fastjson\\/util\\/JavaBeanInfo\\;\\)Lcom\\/alibaba\\/fastjson\\/parser\\/deserializer\\/ObjectDeserializer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.parser\\.deserializer\\.JavaBeanDeserializer\\.createInstance\\:\\(Ljava\\/util\\/Map\\;Lcom\\/alibaba\\/fastjson\\/parser\\/ParserConfig\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.parser\\.deserializer\\.Jdk8DateCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.parser\\.deserializer\\.Jdk8DateCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Lcom\\/alibaba\\/fastjson\\/serializer\\/BeanContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.parser\\.deserializer\\.ThrowableDeserializer\\.createException\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.parser\\.deserializer\\.OptionalCodec\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.parser\\.JSONLexerBase\\.integerValue\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NumberFormatException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.parser\\.JSONLexerBase\\.longValue\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.retrofit\\.Retrofit2ConverterFactory\\$RequestBodyConverter\\.convert\\:\\(Ljava\\/lang\\/Object\\;\\)Lokhttp3\\/RequestBody\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.retrofit\\.Retrofit2ConverterFactory\\$RequestBodyConverter\\.convert\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.retrofit\\.Retrofit2ConverterFactory\\$ResponseBodyConverter\\.convert\\:\\(Lokhttp3\\/ResponseBody\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.retrofit\\.Retrofit2ConverterFactory\\$ResponseBodyConverter\\.convert\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.ws.rs.WebApplicationException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.jaxrs\\.FastJsonProvider\\.writeTo\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;Ljava\\/lang\\/reflect\\/Type\\;\\[Ljava\\/lang\\/annotation\\/Annotation\\;Ljavax\\/ws\\/rs\\/core\\/MediaType\\;Ljavax\\/ws\\/rs\\/core\\/MultivaluedMap\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.ws.rs.WebApplicationException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.jaxrs\\.FastJsonProvider\\.readFrom\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/reflect\\/Type\\;\\[Ljava\\/lang\\/annotation\\/Annotation\\;Ljavax\\/ws\\/rs\\/core\\/MediaType\\;Ljavax\\/ws\\/rs\\/core\\/MultivaluedMap\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.springfox\\.SwaggerJsonSerializer\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonHttpMessageConverter4\\.read\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonHttpMessageConverter4\\.write\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/MediaType\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonHttpMessageConverter4\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonHttpMessageConverter4\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.data.redis.serializer.SerializationException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.GenericFastJsonRedisSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.springframework.data.redis.serializer.SerializationException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.GenericFastJsonRedisSerializer\\.deserialize\\:\\(\\[B\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.data.redis.serializer.SerializationException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonRedisSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.springframework.data.redis.serializer.SerializationException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonRedisSerializer\\.deserialize\\:\\(\\[B\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonpHttpMessageConverter4\\.read\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonpHttpMessageConverter4\\.write\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/MediaType\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonpHttpMessageConverter4\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonpHttpMessageConverter4\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.MappingFastJsonValue\\.write\\:\\(Lcom\\/alibaba\\/fastjson\\/serializer\\/JSONSerializer\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastjsonSockJsMessageCodec\\.decode\\:\\(Ljava\\/lang\\/String\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastjsonSockJsMessageCodec\\.decodeInputStream\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonJsonView\\.renderMergedOutputModel\\:\\(Ljava\\/util\\/Map\\;Ljavax\\/servlet\\/http\\/HttpServletRequest\\;Ljavax\\/servlet\\/http\\/HttpServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonHttpMessageConverter\\.read\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonHttpMessageConverter\\.write\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/MediaType\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotReadableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonHttpMessageConverter\\.readInternal\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonHttpMessageConverter\\.readType\\:\\(Ljava\\/lang\\/reflect\\/Type\\;Lorg\\/springframework\\/http\\/HttpInputMessage\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.springframework.http.converter.HttpMessageNotWritableException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.support\\.spring\\.FastJsonHttpMessageConverter\\.writeInternal\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/http\\/HttpOutputMessage\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONArray\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONObject\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "com\\.alibaba\\.fastjson\\.JSONObject\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateContextCustomizer\\$TestRestTemplateFactory\\.setApplicationContext\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateContextCustomizer\\$TestRestTemplateFactory\\.getObject\\:\\(\\)Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateContextCustomizer\\$TestRestTemplateFactory\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.context\\.ImportsContextCustomizer\\$ImportsCleanupPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.context\\.ImportsContextCustomizer\\$ImportsCleanupPostProcessor\\.postProcessBeanDefinitionRegistry\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.getForObject\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.getForObject\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.getForObject\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/net\\/URI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.getForEntity\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.getForEntity\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.getForEntity\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.patchForObject\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.patchForObject\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.patchForObject\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.patchForObject\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.patchForObject\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.patchForObject\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForObject\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForObject\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForObject\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForObject\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForObject\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForObject\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForEntity\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForEntity\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForEntity\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForEntity\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/util\\/Map\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForEntity\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.postForEntity\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/net\\/URI\\;Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.exchange\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.exchange\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\[Ljava\\/lang\\/Object\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.exchange\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/util\\/Map\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.exchange\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;Ljava\\/util\\/Map\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.exchange\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.exchange\\$default\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Ljava\\/net\\/URI\\;Lorg\\/springframework\\/http\\/HttpMethod\\;Lorg\\/springframework\\/http\\/HttpEntity\\;ILjava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.web.client.RestClientException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateExtensionsKt\\.exchange\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/TestRestTemplate\\;Lorg\\/springframework\\/http\\/RequestEntity\\;\\)Lorg\\/springframework\\/http\\/ResponseEntity\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "com.gargoylesoftware.htmlunit.FailingHttpStatusCodeException", 
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.htmlunit\\.LocalHostWebClient\\.getPage\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/gargoylesoftware\\/htmlunit\\/Page\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.context\\.runner\\.ContextConsumer\\.accept\\:\\(Lorg\\/springframework\\/context\\/ApplicationContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.mock\\.web\\.SpringBootMockServletContext\\.getResource\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.mock\\.mockito\\.ResetMocksTestExecutionListener\\.beforeTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.mock\\.mockito\\.ResetMocksTestExecutionListener\\.afterTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.JacksonTester\\.readObject\\:\\(Ljava\\/io\\/InputStream\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.JacksonTester\\.readObject\\:\\(Ljava\\/io\\/Reader\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.JacksonTester\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.GsonTester\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.GsonTester\\.readObject\\:\\(Ljava\\/io\\/Reader\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.JsonbTester\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.JsonbTester\\.readObject\\:\\(Ljava\\/io\\/Reader\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.rule\\.OutputCapture\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.rule\\.OutputCapture\\$CaptureOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.rule\\.OutputCapture\\$CaptureOutputStream\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.rule\\.OutputCapture\\$CaptureOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.rule\\.OutputCapture\\$CaptureOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.reactive\\.server\\.WebTestClientContextCustomizer\\$WebTestClientRegistrar\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.reactive\\.server\\.WebTestClientContextCustomizer\\$WebTestClientRegistrar\\.postProcessBeanDefinitionRegistry\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.reactive\\.server\\.WebTestClientContextCustomizer\\$WebTestClientRegistrar\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.mock\\.mockito\\.MockitoTestExecutionListener\\$MockitoAnnotationCollection\\.doWith\\:\\(Ljava\\/lang\\/reflect\\/Field\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplate\\$NoOpResponseErrorHandler\\.handleError\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.write\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/springframework\\/boot\\/test\\/json\\/JsonContent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.parseObject\\:\\(\\[B\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.parse\\:\\(\\[B\\)Lorg\\/springframework\\/boot\\/test\\/json\\/ObjectContent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.parseObject\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/boot\\/test\\/json\\/ObjectContent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.readObject\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.read\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/boot\\/test\\/json\\/ObjectContent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.readObject\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.read\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/springframework\\/boot\\/test\\/json\\/ObjectContent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.readObject\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.read\\:\\(Ljava\\/io\\/InputStream\\;\\)Lorg\\/springframework\\/boot\\/test\\/json\\/ObjectContent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.readObject\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.read\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/springframework\\/boot\\/test\\/json\\/ObjectContent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.readObject\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.read\\:\\(Ljava\\/io\\/Reader\\;\\)Lorg\\/springframework\\/boot\\/test\\/json\\/ObjectContent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.writeObject\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.readObject\\:\\(Ljava\\/io\\/InputStream\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.json\\.AbstractJsonMarshalTester\\.readObject\\:\\(Ljava\\/io\\/Reader\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.mock\\.mockito\\.MockitoPostProcessor\\$SpyPostProcessor\\.getEarlyBeanReference\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.mock\\.mockito\\.MockitoPostProcessor\\$SpyPostProcessor\\.postProcessAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.context\\.filter\\.TestTypeExcludeFilter\\.match\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.context\\.ImportsContextCustomizer\\$ImportsSelector\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.RootUriRequestExpectationManager\\$ReplaceUriClientHttpRequest\\.getBody\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.RootUriRequestExpectationManager\\$ReplaceUriClientHttpRequest\\.execute\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.context\\.assertj\\.AssertProviderApplicationContextInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.context\\.assertj\\.AssertProviderApplicationContextInvocationHandler\\.invokeClose\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.context\\.assertj\\.AssertProviderApplicationContextInvocationHandler\\.invokeApplicationContextMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.context\\.FilteredClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.RootUriRequestExpectationManager\\.validateRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateContextCustomizer\\$TestRestTemplateRegistrar\\.setBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/BeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateContextCustomizer\\$TestRestTemplateRegistrar\\.postProcessBeanDefinitionRegistry\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.web\\.client\\.TestRestTemplateContextCustomizer\\$TestRestTemplateRegistrar\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.web\\.servlet\\.SpringBootMockMvcBuilderCustomizer\\$LinesWritingResultHandler\\.handle\\:\\(Lorg\\/springframework\\/test\\/web\\/servlet\\/MvcResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.filter\\.AnnotationCustomizableTypeExcludeFilter\\.match\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.filter\\.AnnotationCustomizableTypeExcludeFilter\\.include\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.filter\\.AnnotationCustomizableTypeExcludeFilter\\.defaultInclude\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.filter\\.AnnotationCustomizableTypeExcludeFilter\\.exclude\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.filter\\.AnnotationCustomizableTypeExcludeFilter\\.isTypeOrAnnotated\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.filter\\.FilterAnnotations\\.anyMatches\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.filter\\.TypeExcludeFiltersContextCustomizer\\$1\\.match\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.filter\\.TypeExcludeFiltersContextCustomizer\\.getTypeExcludeFilterConstructor\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.restdocs\\.RestDocsTestExecutionListener\\$DocumentationHandler\\.beforeTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.restdocs\\.RestDocsTestExecutionListener\\$DocumentationHandler\\.access\\$100\\:\\(Lorg\\/springframework\\/boot\\/test\\/autoconfigure\\/restdocs\\/RestDocsTestExecutionListener\\$DocumentationHandler\\;Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.restdocs\\.RestDocsTestExecutionListener\\.beforeTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.restdocs\\.RestDocsTestExecutionListener\\.afterTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.jdbc\\.TestDatabaseAutoConfiguration\\$EmbeddedDataSourceBeanFactoryPostProcessor\\.postProcessBeanDefinitionRegistry\\:\\(Lorg\\/springframework\\/beans\\/factory\\/support\\/BeanDefinitionRegistry\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.jdbc\\.TestDatabaseAutoConfiguration\\$EmbeddedDataSourceBeanFactoryPostProcessor\\.postProcessBeanFactory\\:\\(Lorg\\/springframework\\/beans\\/factory\\/config\\/ConfigurableListableBeanFactory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.properties\\.PropertyMappingContextCustomizer\\$PropertyMappingCheckBeanPostProcessor\\.postProcessBeforeInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.properties\\.PropertyMappingContextCustomizer\\$PropertyMappingCheckBeanPostProcessor\\.postProcessAfterInitialization\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.web\\.servlet\\.WebDriverTestExecutionListener\\.afterTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.web\\.client\\.MockRestServiceServerResetTestExecutionListener\\.afterTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.web\\.client\\.MockRestServiceServerAutoConfiguration\\$DeferredRequestExpectationManager\\.validateRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.web\\.client\\.MockRestServiceServerAutoConfiguration\\.createDeferredMockRestServiceServer\\:\\(Lorg\\/springframework\\/boot\\/test\\/web\\/client\\/MockServerRestTemplateCustomizer\\;\\)Lorg\\/springframework\\/test\\/web\\/client\\/MockRestServiceServer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.json\\.JsonTestersAutoConfiguration\\$JsonTesterFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.web\\.servlet\\.MockMvcPrintOnlyOnFailureTestExecutionListener\\.afterTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.jdbc\\.TestDatabaseAutoConfiguration\\$EmbeddedDataSourceFactoryBean\\.afterPropertiesSet\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.jdbc\\.TestDatabaseAutoConfiguration\\$EmbeddedDataSourceFactoryBean\\.getObject\\:\\(\\)Ljavax\\/sql\\/DataSource\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.jdbc\\.TestDatabaseAutoConfiguration\\$EmbeddedDataSourceFactoryBean\\.getObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.boot\\.test\\.autoconfigure\\.SpringBootDependencyInjectionTestExecutionListener\\.prepareTestInstance\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidPathException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.internal\\.function\\.PathFunctionFactory\\.newFunction\\:\\(Ljava\\/lang\\/String\\;\\)Lcom\\/jayway\\/jsonpath\\/internal\\/function\\/PathFunction\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.internal\\.ParseContextImpl\\.parse\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/jayway\\/jsonpath\\/DocumentContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.internal\\.ParseContextImpl\\.parse\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/jayway\\/jsonpath\\/DocumentContext\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.spi.mapper.MappingException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.internal\\.path\\.PredicateContextImpl\\.item\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.read\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.read\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.read\\:\\(Ljava\\/io\\/File\\;Lcom\\/jayway\\/jsonpath\\/Configuration\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.read\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.read\\:\\(Ljava\\/io\\/InputStream\\;Lcom\\/jayway\\/jsonpath\\/Configuration\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.read\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;Lcom\\/jayway\\/jsonpath\\/Configuration\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.read\\:\\(Ljava\\/net\\/URL\\;Ljava\\/lang\\/String\\;\\[Lcom\\/jayway\\/jsonpath\\/Predicate\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.read\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\[Lcom\\/jayway\\/jsonpath\\/Predicate\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.read\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\[Lcom\\/jayway\\/jsonpath\\/Predicate\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.parse\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/jayway\\/jsonpath\\/DocumentContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.parse\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/jayway\\/jsonpath\\/DocumentContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.parse\\:\\(Ljava\\/io\\/File\\;Lcom\\/jayway\\/jsonpath\\/Configuration\\;\\)Lcom\\/jayway\\/jsonpath\\/DocumentContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.JsonPath\\.parse\\:\\(Ljava\\/net\\/URL\\;Lcom\\/jayway\\/jsonpath\\/Configuration\\;\\)Lcom\\/jayway\\/jsonpath\\/DocumentContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.ParseContext\\.parse\\:\\(Ljava\\/io\\/File\\;\\)Lcom\\/jayway\\/jsonpath\\/DocumentContext\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.ParseContext\\.parse\\:\\(Ljava\\/net\\/URL\\;\\)Lcom\\/jayway\\/jsonpath\\/DocumentContext\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.spi.mapper.MappingException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.Predicate\\$PredicateContext\\.item\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.GsonJsonProvider\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.GsonJsonProvider\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JacksonJsonNodeJsonProvider\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JacksonJsonNodeJsonProvider\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JacksonJsonProvider\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JacksonJsonProvider\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.codehaus.jettison.json.JSONException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JettisonProvider\\$JettisonArray\\.\\<init\\>\\:\\(Lcom\\/jayway\\/jsonpath\\/spi\\/json\\/JettisonProvider\\$JettisonTokener\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.codehaus.jettison.json.JSONException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JettisonProvider\\$JettisonArray\\.\\<init\\>\\:\\(Lcom\\/jayway\\/jsonpath\\/spi\\/json\\/JettisonProvider\\$JettisonTokener\\;Lcom\\/jayway\\/jsonpath\\/spi\\/json\\/JettisonProvider\\$1\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.codehaus.jettison.json.JSONException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JettisonProvider\\$JettisonObject\\.\\<init\\>\\:\\(Lcom\\/jayway\\/jsonpath\\/spi\\/json\\/JettisonProvider\\$JettisonTokener\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.codehaus.jettison.json.JSONException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JettisonProvider\\$JettisonObject\\.\\<init\\>\\:\\(Lcom\\/jayway\\/jsonpath\\/spi\\/json\\/JettisonProvider\\$JettisonTokener\\;Lcom\\/jayway\\/jsonpath\\/spi\\/json\\/JettisonProvider\\$1\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.codehaus.jettison.json.JSONException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JettisonProvider\\$JettisonTokener\\.newJSONObject\\:\\(\\)Lcom\\/jayway\\/jsonpath\\/spi\\/json\\/JettisonProvider\\$JettisonObject\\;"
 }, 
 {
  "exceptions": [
   "org.codehaus.jettison.json.JSONException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JettisonProvider\\$JettisonTokener\\.newJSONArray\\:\\(\\)Lcom\\/jayway\\/jsonpath\\/spi\\/json\\/JettisonProvider\\$JettisonArray\\;"
 }, 
 {
  "exceptions": [
   "org.codehaus.jettison.json.JSONException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JettisonProvider\\$JettisonTokener\\.newJSONArray\\:\\(\\)Lorg\\/codehaus\\/jettison\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.codehaus.jettison.json.JSONException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JettisonProvider\\$JettisonTokener\\.newJSONObject\\:\\(\\)Lorg\\/codehaus\\/jettison\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JettisonProvider\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JettisonProvider\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JsonOrgJsonProvider\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JsonOrgJsonProvider\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JsonProvider\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JsonProvider\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.JsonSmartJsonProvider\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.TapestryJsonProvider\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "com.jayway.jsonpath.InvalidJsonException"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.json\\.TapestryJsonProvider\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.mapper\\.GsonMappingProvider\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.mapper\\.GsonMappingProvider\\$2\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "com\\.jayway\\.jsonpath\\.spi\\.mapper\\.JsonSmartMappingProvider\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONArray\\.writeJSONString\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONArray\\.writeJSONString\\:\\(Ljava\\/util\\/List\\;Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONArray\\.writeJSONString\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONArray\\.writeJSONString\\:\\(Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONObject\\.writeJSONKV\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONObject\\.writeJSON\\:\\(Ljava\\/util\\/Map\\;Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONObject\\.writeJSON\\:\\(Ljava\\/util\\/Map\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONObject\\.writeJSONString\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONObject\\.writeJSONString\\:\\(Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStreamAware\\.writeJSONString\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStreamAwareEx\\.writeJSONString\\:\\(Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.writeString\\:\\(Ljava\\/lang\\/Appendable\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.objectStart\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.objectStop\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.objectFirstStart\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.objectNext\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.objectElmStop\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.objectEndOfKey\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.arrayStart\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.arrayStop\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.arrayfirstObject\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.arrayNextElm\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONStyle\\.arrayObjectEnd\\:\\(Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.parseWithException\\:\\(\\[B\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.parseWithException\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.parseWithException\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.parseWithException\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.parseWithException\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.parseStrict\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.parseStrict\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.isValidJsonStrict\\:\\(Ljava\\/io\\/Reader\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.isValidJson\\:\\(Ljava\\/io\\/Reader\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.JSONValue\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(\\[B\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(\\[BLnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(\\[BLjava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(Ljava\\/io\\/Reader\\;Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParser\\.parse\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.checkControleChar\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.checkLeadinZero\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.extractFloat\\:\\(\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.parse\\:\\(Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.parseNumber\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.read\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readArray\\:\\(Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readFirst\\:\\(Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readMain\\:\\(Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\[Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readNoEnd\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readNQString\\:\\(\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readNumber\\:\\(\\[Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readObject\\:\\(Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readS\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readString2\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.readUnicode\\:\\(I\\)C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.skipDigits\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.skipNQString\\:\\(\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserBase\\.skipSpace\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserByteArray\\.parse\\:\\(\\[B\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserByteArray\\.parse\\:\\(\\[BLnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserByteArray\\.readNoEnd\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserInputStream\\.parse\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserInputStream\\.parse\\:\\(Ljava\\/io\\/InputStream\\;Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserMemory\\.readNQString\\:\\(\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserMemory\\.readNumber\\:\\(\\[Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserMemory\\.readString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserReader\\.parse\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserReader\\.parse\\:\\(Ljava\\/io\\/Reader\\;Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserReader\\.read\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserReader\\.readS\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserReader\\.readNoEnd\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserStream\\.readNQString\\:\\(\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserStream\\.readNumber\\:\\(\\[Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserStream\\.readString\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserString\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserString\\.parse\\:\\(Ljava\\/lang\\/String\\;Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.parser\\.JSONParserString\\.readNoEnd\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.ArrayWriter\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.BeansWriter\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.BeansWriterASM\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.BeansWriterASMRemap\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$1\\.writeJSONString\\:\\(Lnet\\/minidev\\/json\\/JSONStreamAwareEx\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$1\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$10\\.writeJSONString\\:\\(Ljava\\/lang\\/Double\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$10\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$11\\.writeJSONString\\:\\(Ljava\\/util\\/Date\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$11\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$12\\.writeJSONString\\:\\(Ljava\\/lang\\/Float\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$12\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$13\\.writeJSONString\\:\\(\\[ILjava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$13\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$14\\.writeJSONString\\:\\(\\[SLjava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$14\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$15\\.writeJSONString\\:\\(\\[JLjava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$15\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$16\\.writeJSONString\\:\\(\\[FLjava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$16\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$17\\.writeJSONString\\:\\(\\[DLjava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$17\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$18\\.writeJSONString\\:\\(\\[ZLjava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$18\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$2\\.writeJSONString\\:\\(Lnet\\/minidev\\/json\\/JSONStreamAwareEx\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$2\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$3\\.writeJSONString\\:\\(Lnet\\/minidev\\/json\\/JSONAwareEx\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$3\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$4\\.writeJSONString\\:\\(Lnet\\/minidev\\/json\\/JSONAware\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$4\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$5\\.writeJSONString\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$5\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$6\\.writeJSONString\\:\\(Ljava\\/lang\\/Enum\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$6\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$7\\.writeJSONString\\:\\(Ljava\\/util\\/Map\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$7\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$8\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$9\\.writeJSONString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\$9\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriter\\.writeJSONKV\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.reader\\.JsonWriterI\\.writeJSONString\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Appendable\\;Lnet\\/minidev\\/json\\/JSONStyle\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.CompessorMapper\\.startObject\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.CompessorMapper\\.startArray\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.CompessorMapper\\.startKey\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.CompessorMapper\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.CompessorMapper\\.addValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.CompessorMapper\\.addComma\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.CompessorMapper\\.writeValue\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.CompessorMapper\\.close\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.CompessorMapper\\.open\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.JsonReaderI\\.startObject\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.JsonReaderI\\.startArray\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.JsonReaderI\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.JsonReaderI\\.addValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.MapperRemapped\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.MapperRemapped\\.startArray\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.MapperRemapped\\.startObject\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.UpdaterMapper\\.startObject\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.UpdaterMapper\\.startArray\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/minidev\\/json\\/writer\\/JsonReaderI\\;"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.UpdaterMapper\\.setValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "net.minidev.json.parser.ParseException", 
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.minidev\\.json\\.writer\\.UpdaterMapper\\.addValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "net\\.minidev\\.asm\\.DynamicClassLoader\\.directInstance\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[B\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.minidev\\.asm\\.DynamicClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassFormatError"
  ], 
  "methodRegex": "net\\.minidev\\.asm\\.DynamicClassLoader\\.defineClass\\:\\(Ljava\\/lang\\/String\\;\\[B\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.objectweb\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.objectweb\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.objectweb\\.asm\\.ClassReader\\.a\\:\\(Ljava\\/io\\/InputStream\\;Z\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "org\\.slf4j\\.helpers\\.NamedLoggerBase\\.readResolve\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoClassDefFoundError"
  ], 
  "methodRegex": "org\\.slf4j\\.MarkerFactory\\.bwCompatibleGetMarkerFactoryFromBinder\\:\\(\\)Lorg\\/slf4j\\/IMarkerFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoClassDefFoundError"
  ], 
  "methodRegex": "org\\.slf4j\\.MDC\\.bwCompatibleGetMDCAdapterFromBinder\\:\\(\\)Lorg\\/slf4j\\/spi\\/MDCAdapter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.slf4j\\.MDC\\.put\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.slf4j\\.MDC\\.putCloseable\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/slf4j\\/MDC\\$MDCCloseable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.slf4j\\.MDC\\.get\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.slf4j\\.MDC\\.remove\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[Z\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[B\\[B\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[C\\[C\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[S\\[S\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[I\\[I\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[J\\[J\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[D\\[DD\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.assertArrayEquals\\:\\(Ljava\\/lang\\/String\\;\\[F\\[FF\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.Assert\\.internalArrayEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\.before\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatcher\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/TestWatcher\\;Lorg\\/junit\\/runner\\/Description\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatcher\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.before\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.create\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.validateFolderName\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.newFolder\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TemporaryFolder\\.createTemporaryFolderIn\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.RunRules\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatchman\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/TestWatchman\\;Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.TestWatchman\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/Verifier\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.handleException\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.failDueToMissingException\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.access\\$000\\:\\(Lorg\\/junit\\/rules\\/ExpectedException\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\.access\\$200\\:\\(Lorg\\/junit\\/rules\\/ExpectedException\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExpectedException\\$ExpectedExceptionStatement\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ErrorCollector\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Verifier\\.verify\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Timeout\\.createFailOnTimeoutStatement\\:\\(Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)Lorg\\/junit\\/runners\\/model\\/Statement\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.Timeout\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/rules\\/ExternalResource\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ExternalResource\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.rules\\.ErrorCollector\\.verify\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.AllTests\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.JUnit4\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.ParentRunner\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/BlockJUnit4ClassRunner\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.BlockJUnit4ClassRunner\\$1\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.ParametersRunnerFactory\\.createRunnerForTestWithParameters\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTestUsingConstructorInjection\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParameters\\.createTestUsingFieldInjection\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.parameterized\\.BlockJUnit4ClassRunnerWithParametersFactory\\.createRunnerForTestWithParameters\\:\\(Lorg\\/junit\\/runners\\/parameterized\\/TestWithParameters\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.getAnnotatedClasses\\:\\(Ljava\\/lang\\/Class\\;\\)\\[Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Suite\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.MultipleFailureException\\.assertEmpty\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.addParent\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runners\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.RunnerBuilder\\.runners\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkField\\.get\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.Statement\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\.invokeExplosively\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.model\\.FrameworkMethod\\$1\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.getParametersRunnerFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runners\\/parameterized\\/ParametersRunnerFactory\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.allParameters\\:\\(\\)Ljava\\/lang\\/Iterable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.getParametersMethod\\:\\(\\)Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError", 
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.createRunnersForParameters\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/String\\;Lorg\\/junit\\/runners\\/parameterized\\/ParametersRunnerFactory\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.createTestsForParameters\\:\\(Ljava\\/lang\\/Iterable\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runners\\.Parameterized\\.parametersMethodReturnedWrongType\\:\\(\\)Ljava\\/lang\\/Exception\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactory\\.createFilter\\:\\(Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\.writeObject\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$Listener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFromFilterSpec\\:\\(Lorg\\/junit\\/runner\\/Request\\;Ljava\\/lang\\/String\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilter\\:\\(Ljava\\/lang\\/String\\;Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilter\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFactory\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/junit\\/runner\\/FilterFactory\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.FilterFactories\\.createFilterFactory\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/FilterFactory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.\\<init\\>\\:\\(Ljava\\/io\\/ObjectInputStream\\$GetField\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.serialize\\:\\(Ljava\\/io\\/ObjectOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Result\\$SerializedForm\\.deserialize\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)Lorg\\/junit\\/runner\\/Result\\$SerializedForm\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filter\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filterable\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.manipulation\\.Filter\\$1\\.apply\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/Computer\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\$1\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.notification.StoppedByUserException"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\.fireTestStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$1\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$2\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$2\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$3\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$3\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$4\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Ljava\\/util\\/List\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$4\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.SynchronizedRunListener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$SafeNotifier\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$5\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$6\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$6\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$7\\.\\<init\\>\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunNotifier\\;Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunNotifier\\$7\\.notifyListener\\:\\(Lorg\\/junit\\/runner\\/notification\\/RunListener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testRunStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.notification\\.RunListener\\.testIgnored\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\.getSuite\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.runner\\.Computer\\.getRunner\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.TestMethod\\.invoke\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.SecurityException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.TestClass\\.getConstructor\\:\\(\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.validate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit4ClassRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.Fail\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.RunAfters\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.RunBefores\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.ExpectException\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.InvokeMethod\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.call\\:\\(\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.awaitStarted\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.statements\\.FailOnTimeout\\$CallableStatement\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodValidator\\.assertValid\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.JUnit38ClassRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.SuiteMethod\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.SuiteMethod\\.testFromSuiteMethod\\:\\(Ljava\\/lang\\/Class\\;\\)Ljunit\\/framework\\/Test\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.FailedBefore"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodRoadie\\.runBefores\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.internal.runners.FailedBefore"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.ClassRoadie\\.runBefores\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.MethodRoadie\\$1\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.model\\.ReflectiveCallable\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.runners\\.model\\.ReflectiveCallable\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.internal.ArrayComparisonFailure"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.ComparisonCriteria\\.arrayEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Throwables\\.rethrowAsException\\:\\(Ljava\\/lang\\/Throwable\\;\\)Ljava\\/lang\\/Exception\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Throwables\\.rethrow\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.Classes\\.getClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.JUnit4Builder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AnnotatedBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AnnotatedBuilder\\.buildRunner\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.JUnit3Builder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.AllDefaultPossibilitiesBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.NullBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.internal\\.builders\\.SuiteMethodBuilder\\.runnerForClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\$RememberingListener\\.testRunFinished\\:\\(Lorg\\/junit\\/runner\\/Result\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxCore\\$1\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/max\\/MaxCore\\$1\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.max.CouldNotReadCoreException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.readHistory\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/junit\\/experimental\\/max\\/MaxHistory\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.save\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.max\\.MaxHistory\\.access\\$000\\:\\(Lorg\\/junit\\/experimental\\/max\\/MaxHistory\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.ParallelComputer\\.getSuite\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\[Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.ParallelComputer\\.getRunner\\:\\(Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/runner\\/Runner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$2\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\;Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;Lorg\\/junit\\/runners\\/model\\/FrameworkMethod\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$2\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithIncompleteAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.runWithCompleteAssignment\\:\\(Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\.reportParameterizedError\\:\\(Ljava\\/lang\\/Throwable\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\$1\\;Lorg\\/junit\\/runners\\/model\\/Statement\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\.\\<init\\>\\:\\(Lorg\\/junit\\/experimental\\/theories\\/Theories\\$TheoryAnchor\\;Ljava\\/lang\\/Class\\;Lorg\\/junit\\/experimental\\/theories\\/internal\\/Assignments\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\$TheoryAnchor\\$1\\.createTest\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.PotentialAssignment\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.PotentialAssignment\\.getDescription\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.Theories\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\$MethodParameterValue\\.getValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\$MethodParameterValue\\.getDescription\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\.getValueSources\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.AllMembersSupplier\\.addMultiPointMethods\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getActualValues\\:\\(II\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.potentialsForNextUnassigned\\:\\(\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getSupplier\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Lorg\\/junit\\/experimental\\/theories\\/ParameterSupplier\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.buildParameterSupplierFromClass\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/junit\\/experimental\\/theories\\/ParameterSupplier\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getConstructorArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getMethodArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getAllArguments\\:\\(\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.internal\\.Assignments\\.getArgumentStrings\\:\\(Z\\)\\[Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.theories\\.ParameterSupplier\\.getValueSources\\:\\(Lorg\\/junit\\/experimental\\/theories\\/ParameterSignature\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runner.FilterFactory$FilterNotCreatedException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.CategoryFilterFactory\\.createFilter\\:\\(Lorg\\/junit\\/runner\\/FilterFactoryParams\\;\\)Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.CategoryFilterFactory\\.parseCategories\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.assertNoCategorizedDescendentsOfUncategorizeableParents\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.categories\\.Categories\\.assertNoDescendantsHaveCategoryAnnotations\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.junit\\.experimental\\.runners\\.Enclosed\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/junit\\/runners\\/model\\/RunnerBuilder\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.runBare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.runTest\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.setUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.TestCase\\.tearDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapter\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestResult\\$1\\.\\<init\\>\\:\\(Ljunit\\/framework\\/TestResult\\;Ljunit\\/framework\\/TestCase\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.TestResult\\$1\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "junit\\.framework\\.TestSuite\\.getTestConstructor\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Constructor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "junit\\.framework\\.Protectable\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.framework\\.JUnit4TestAdapterCache\\$1\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "junit\\.runner\\.BaseTestRunner\\.savePreferences\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "junit\\.runner\\.BaseTestRunner\\.loadSuiteClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\.setUp\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\.tearDown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\$1\\.\\<init\\>\\:\\(Ljunit\\/extensions\\/TestSetup\\;Ljunit\\/framework\\/TestResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.extensions\\.TestSetup\\$1\\.protect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.textui\\.TestRunner\\.start\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljunit\\/framework\\/TestResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "junit\\.textui\\.TestRunner\\.runSingleMethod\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)Ljunit\\/framework\\/TestResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.Assumptions\\$AssumptionMethodInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.assertj.core.api.SoftAssertionError"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.AutoCloseableBDDSoftAssertions\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.assertj.core.api.SoftAssertionError"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.AutoCloseableSoftAssertions\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.ErrorCollector\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/concurrent\\/Callable\\;Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.JUnitBDDSoftAssertions\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.JUnitSoftAssertions\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.Java6JUnitBDDSoftAssertions\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.Java6JUnitSoftAssertions\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.ProxifyMethodChangingTheObjectUnderTest\\.intercept\\:\\(Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.ThrowableAssert\\$ThrowingCallable\\.call\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.ThrowableAssert\\.buildThrowableAssertFromCallable\\:\\(Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Throwable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.api\\.iterable\\.ThrowingExtractor\\.extractThrows\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.error\\.ConstructorInvoker\\.newInstance\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.error\\.ShouldBeEqual\\.newComparisonFailure\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/AssertionError\\;"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.Arrays\\.filterElements\\:\\(Lorg\\/assertj\\/core\\/api\\/AssertionInfo\\;Lorg\\/assertj\\/core\\/internal\\/Failures\\;Lorg\\/assertj\\/core\\/internal\\/Conditions\\;Ljava\\/lang\\/Object\\;Lorg\\/assertj\\/core\\/api\\/Condition\\;Z\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.BinaryDiff\\.diff\\:\\(Ljava\\/io\\/File\\;\\[B\\)Lorg\\/assertj\\/core\\/internal\\/BinaryDiffResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.BinaryDiff\\.diff\\:\\(Ljava\\/nio\\/file\\/Path\\;\\[B\\)Lorg\\/assertj\\/core\\/internal\\/BinaryDiffResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.BinaryDiff\\.diff\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/InputStream\\;\\)Lorg\\/assertj\\/core\\/internal\\/BinaryDiffResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.Diff\\.diff\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.Diff\\.diff\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.Diff\\.diff\\:\\(Ljava\\/nio\\/file\\/Path\\;Ljava\\/nio\\/charset\\/Charset\\;Ljava\\/nio\\/file\\/Path\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.Diff\\.diff\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.Diff\\.diff\\:\\(Ljava\\/nio\\/file\\/Path\\;Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.Diff\\.diff\\:\\(Ljava\\/io\\/BufferedReader\\;Ljava\\/io\\/BufferedReader\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.Diff\\.linesFromBufferedReader\\:\\(Ljava\\/io\\/BufferedReader\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.ClassFileVersion\\.of\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/ClassFileVersion\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.ClassFileVersion\\.of\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/ClassFileVersion\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.ClassFileVersion\\.of\\:\\(Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/description\\/type\\/TypeDescription\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/ClassFileVersion\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$Asynchronous\\$ThreadSwitchingClassLoadingDelegate\\$NotifyingClassLoadingAction\\.call\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$Asynchronous\\$ThreadSwitchingClassLoadingDelegate\\$NotifyingClassLoadingAction\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$Asynchronous\\$ThreadSwitchingClassLoadingDelegate\\$SimpleClassLoadingAction\\.call\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$Asynchronous\\$ThreadSwitchingClassLoadingDelegate\\$SimpleClassLoadingAction\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$Asynchronous\\$ThreadSwitchingClassLoadingDelegate\\.load\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$UnlockingClassLoadingDelegate\\.load\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$RedefinitionStrategy\\$Collector\\$ForRedefinition\\.doApply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$CircularityLock\\;Ljava\\/util\\/List\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$LocationStrategy\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$Listener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$RedefinitionStrategy\\$Collector\\$ForRetransformation\\.doApply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$CircularityLock\\;Ljava\\/util\\/List\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$LocationStrategy\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$Listener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$RedefinitionStrategy\\$Collector\\.doApply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$CircularityLock\\;Ljava\\/util\\/List\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$LocationStrategy\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$Listener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.annotation\\.AnnotationDescription\\$AnnotationInvocationHandler\\.of\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.annotation\\.AnnotationDescription\\$ForLoadedAnnotation\\.load\\:\\(\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.annotation\\.AnnotationDescription\\$Latent\\$Loadable\\.load\\:\\(\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.annotation\\.AnnotationDescription\\$Loadable\\.load\\:\\(\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.annotation\\.AnnotationValue\\$ForAnnotationDescription\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.annotation\\.AnnotationValue\\$ForDescriptionArray\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.annotation\\.AnnotationValue\\$ForEnumerationDescription\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.annotation\\.AnnotationValue\\$ForTypeDescription\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.annotation\\.AnnotationValue\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.type\\.TypeDescription\\$SuperTypeLoading\\$ClassLoadingDelegate\\$Simple\\.load\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.description\\.type\\.TypeDescription\\$SuperTypeLoading\\$ClassLoadingDelegate\\.load\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$AgentBased\\$ClassLoadingDelegate\\$Default\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$AgentBased\\$ClassLoadingDelegate\\$Explicit\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$AgentBased\\$ClassLoadingDelegate\\$ForDelegatingClassLoader\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$AgentBased\\$ClassLoadingDelegate\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$AgentBased\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$Compound\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$Compound\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForClassLoader\\$WeaklyReferenced\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForClassLoader\\$WeaklyReferenced\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForClassLoader\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForClassLoader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForClassLoader\\.locate\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForFolder\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForFolder\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.of\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.ofClassPath\\:\\(\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.ofClassPath\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.ofRuntimeJar\\:\\(\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModule\\$WeaklyReferenced\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModule\\$WeaklyReferenced\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModule\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModule\\.locate\\:\\(Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/utility\\/JavaModule\\;Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModule\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.ofBootPath\\:\\(\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.ofBootPath\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.ofModulePath\\:\\(\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.ofModulePath\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.ofModulePath\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.of\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$NoOp\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$PackageDiscriminating\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$PackageDiscriminating\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.ClassFileLocator\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.DynamicType\\$Default\\.saveIn\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.DynamicType\\$Default\\.inject\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.DynamicType\\$Default\\.inject\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.DynamicType\\$Default\\.toJar\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.DynamicType\\$Default\\.toJar\\:\\(Ljava\\/io\\/File\\;Ljava\\/util\\/jar\\/Manifest\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.DynamicType\\.saveIn\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.DynamicType\\.inject\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.DynamicType\\.inject\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.DynamicType\\.toJar\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.DynamicType\\.toJar\\:\\(Ljava\\/io\\/File\\;Ljava\\/util\\/jar\\/Manifest\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.Nexus\\.initialize\\:\\(Ljava\\/lang\\/Class\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\$ChildFirst\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\$ChildFirst\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\$PersistenceHandler\\$UrlDefinitionAction\\$ByteArrayUrlStreamHandler\\.openConnection\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\.defineClass\\:\\(Ljava\\/lang\\/String\\;\\[B\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\.findClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\.access\\$100\\:\\(Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/loading\\/ByteArrayClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/net\\/URL\\;\\)Ljava\\/lang\\/Package\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassFormatError"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\.access\\$200\\:\\(Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/loading\\/ByteArrayClassLoader\\;Ljava\\/lang\\/String\\;\\[BIILjava\\/security\\/ProtectionDomain\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ClassInjector\\$UsingReflection\\$Dispatcher\\$Direct\\.make\\:\\(\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/loading\\/ClassInjector\\$UsingReflection\\$Dispatcher\\$Initializable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ClassInjector\\$UsingReflection\\$Dispatcher\\$Indirect\\.make\\:\\(\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/loading\\/ClassInjector\\$UsingReflection\\$Dispatcher\\$Initializable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\$1\\.apply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\$1\\.reset\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\$2\\.apply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\$2\\.reset\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\.apply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\.reset\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\.reset\\:\\(\\[Ljava\\/lang\\/Class\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/loading\\/ClassReloadingStrategy\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\.reset\\:\\(Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;\\[Ljava\\/lang\\/Class\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/dynamic\\/loading\\/ClassReloadingStrategy\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.InjectionClassLoader\\.defineClass\\:\\(Ljava\\/lang\\/String\\;\\[B\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.MultipleParentClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.loading\\.MultipleParentClassLoader\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.scaffold\\.TypeWriter\\$Default\\$ClassDumpAction\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.dynamic\\.scaffold\\.TypeWriter\\$Default\\$ClassDumpAction\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.jar\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.jar\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.jar\\.asm\\.ClassReader\\.readClass\\:\\(Ljava\\/io\\/InputStream\\;Z\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.jar\\.asm\\.commons\\.Method\\.getMethod\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/jar\\/asm\\/commons\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.jar\\.asm\\.commons\\.Method\\.getMethod\\:\\(Ljava\\/lang\\/String\\;Z\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/jar\\/asm\\/commons\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.jar\\.asm\\.commons\\.SerialVersionUIDAdder\\.computeSVUID\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.jar\\.asm\\.commons\\.SerialVersionUIDAdder\\.writeItems\\:\\(Ljava\\/util\\/Collection\\;Ljava\\/io\\/DataOutput\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.pool\\.TypePool\\$AbstractBase\\$RawAnnotationValue\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.pool\\.TypePool\\$AbstractBase\\$RawDescriptionArray\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.pool\\.TypePool\\$AbstractBase\\$RawEnumerationValue\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.pool\\.TypePool\\$AbstractBase\\$RawTypeValue\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lorg\\/assertj\\/core\\/internal\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.pool\\.TypePool\\$Default\\$LazyTypeDescription\\$LazyAnnotationDescription\\$Loadable\\.load\\:\\(\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.utility\\.JavaType\\.load\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.internal\\.bytebuddy\\.utility\\.StreamDrainer\\.drain\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.matcher\\.AssertionMatcher\\.assertion\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.Files\\.loadContents\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.Files\\.loadLines\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.TextFileWriter\\.write\\:\\(Ljava\\/io\\/File\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.TextFileWriter\\.write\\:\\(Ljava\\/io\\/File\\;Ljava\\/nio\\/charset\\/Charset\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.URLs\\.loadContents\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.URLs\\.loadLines\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.diff\\.ChangeDelta\\.applyTo\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.diff\\.ChangeDelta\\.verify\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.diff\\.Chunk\\.verify\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.diff\\.DeleteDelta\\.applyTo\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.diff\\.DeleteDelta\\.verify\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.diff\\.Delta\\.verify\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.diff\\.Delta\\.applyTo\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.diff\\.DiffUtils\\.patch\\:\\(Ljava\\/util\\/List\\;Lorg\\/assertj\\/core\\/util\\/diff\\/Patch\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.diff\\.InsertDelta\\.verify\\:\\(Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.diff\\.Patch\\.applyTo\\:\\(Ljava\\/util\\/List\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.introspection\\.FieldUtils\\.getField\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/reflect\\/Field\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.introspection\\.FieldUtils\\.readField\\:\\(Ljava\\/lang\\/reflect\\/Field\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.introspection\\.FieldUtils\\.readField\\:\\(Ljava\\/lang\\/reflect\\/Field\\;Ljava\\/lang\\/Object\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.assertj\\.core\\.util\\.introspection\\.FieldUtils\\.readField\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.Answers\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.VoidAnswer4\\.answer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.Answer5\\.answer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.VoidAnswer1\\.answer\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.VoidAnswer3\\.answer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.VoidAnswer2\\.answer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.Answer2\\.answer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.VoidAnswer5\\.answer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.Answer1\\.answer\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.Answer4\\.answer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.Answer\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.stubbing\\.Answer3\\.answer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.mockito.exceptions.misusing.RedundantListenerException"
  ], 
  "methodRegex": "org\\.mockito\\.MockitoFramework\\.addListener\\:\\(Lorg\\/mockito\\/listeners\\/MockitoListener\\;\\)Lorg\\/mockito\\/MockitoFramework\\;"
 }, 
 {
  "exceptions": [
   "org.mockito.exceptions.misusing.UnfinishedMockingSessionException"
  ], 
  "methodRegex": "org\\.mockito\\.session\\.MockitoSessionBuilder\\.startMocking\\:\\(\\)Lorg\\/mockito\\/MockitoSession\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.invocation\\.InvocationOnMock\\.callRealMethod\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.invocation\\.MockHandler\\.handle\\:\\(Lorg\\/mockito\\/invocation\\/Invocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.invocation\\.InvocationFactory\\$RealMethodBehavior\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.junit\\.MockitoJUnitRunner\\$Silent\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.junit\\.MockitoJUnitRunner\\$StrictStubs\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.junit\\.MockitoJUnitRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.junit\\.MockitoJUnitRunner\\.\\<init\\>\\:\\(Lorg\\/mockito\\/internal\\/runners\\/InternalRunner\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.mockito\\.junit\\.MockitoJUnitRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.junit\\.MockitoJUnitRunner\\$Strict\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.mockito.exceptions.base.MockitoAssertionError"
  ], 
  "methodRegex": "org\\.mockito\\.junit\\.VerificationCollector\\.collectAndReport\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.MockitoJUnitRunner\\$Silent\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.ConsoleSpammingMockitoJUnitRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.ConsoleSpammingMockitoJUnitRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.MockitoJUnitRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.MockitoJUnitRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.ConsoleSpammingMockitoJUnitRunner\\$1\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.ConsoleSpammingMockitoJUnitRunner\\$1\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.VerboseMockitoJUnitRunner\\$1\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.VerboseMockitoJUnitRunner\\$1\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.VerboseMockitoJUnitRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.VerboseMockitoJUnitRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.runners\\.MockitoJUnitRunner\\$Strict\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$3\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.ReturnsArgumentAt\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$2\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$2\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.DefaultAnswerValidator\\.validateReturnValueFor\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$4\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$4\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.Returns\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$7\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$6\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$6\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$1\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.ClonesArguments\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.ReturnsElementsOf\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$9\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$5\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.CallsRealMethods\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswersWithDelay\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$8\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$8\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$10\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.AnswerFunctionalInterfaces\\$10\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.answers\\.ThrowsException\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.StubbedInvocationMatcher\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.InvocationContainerImpl\\.answerTo\\:\\(Lorg\\/mockito\\/invocation\\/Invocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.ReturnsDeepStubs\\$DeeplyStubbedAnswer\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.ReturnsMoreEmptyValues\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.ReturnsDeepStubs\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.ReturnsDeepStubs\\.deepStub\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;Lorg\\/mockito\\/internal\\/util\\/reflection\\/GenericMetadataSupport\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.ReturnsMocks\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.TriesToReturnSelf\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.ReturnsDeepStubs\\$ReturnsDeepStubsSerializationFallback\\.writeReplace\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.ReturnsSmartNulls\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.GloballyConfiguredAnswer\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.ReturnsSmartNulls\\$ThrowsSmartNullPointer\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.ForwardsInvocations\\.answer\\:\\(Lorg\\/mockito\\/invocation\\/InvocationOnMock\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.stubbing\\.defaultanswers\\.ForwardsInvocations\\.getDelegateMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.InterceptedInvocation\\.callRealMethod\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.ByteBuddyCrossClassLoaderSerializationSupport\\$MockitoMockObjectOutputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/ByteArrayOutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.ByteBuddyCrossClassLoaderSerializationSupport\\$MockitoMockObjectOutputStream\\.annotateClass\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodInterceptor\\$ForWriteReplace\\.doWriteReplace\\:\\(Lorg\\/mockito\\/internal\\/creation\\/bytebuddy\\/MockAccess\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.ByteBuddyCrossClassLoaderSerializationSupport\\$CrossClassLoaderSerializationProxy\\.\\<init\\>\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.ByteBuddyCrossClassLoaderSerializationSupport\\$CrossClassLoaderSerializationProxy\\.readResolve\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodAdvice\\$ForReadObject\\.doReadObject\\:\\(Ljava\\/lang\\/String\\;Lorg\\/mockito\\/internal\\/creation\\/bytebuddy\\/MockAccess\\;Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.ByteBuddyCrossClassLoaderSerializationSupport\\.writeReplace\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.InterceptedInvocation\\$1\\.invoke\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.ByteBuddyCrossClassLoaderSerializationSupport\\$MockitoMockObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Set\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.ByteBuddyCrossClassLoaderSerializationSupport\\$MockitoMockObjectInputStream\\.resolveClass\\:\\(Ljava\\/io\\/ObjectStreamClass\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.ObjectStreamException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.ByteBuddyCrossClassLoaderSerializationSupport\\$MockitoMockObjectInputStream\\.hackClassNameToMatchNewlyCreatedClass\\:\\(Ljava\\/io\\/ObjectStreamClass\\;Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodAdvice\\$SerializableRealMethodCall\\.invoke\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodInterceptor\\$DispatcherDefaultingToRealMethod\\.interceptSuperCallable\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/mockito\\/internal\\/creation\\/bytebuddy\\/MockMethodInterceptor\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodInterceptor\\$DispatcherDefaultingToRealMethod\\.interceptAbstract\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/mockito\\/internal\\/creation\\/bytebuddy\\/MockMethodInterceptor\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.IllegalClassFormatException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.InlineBytecodeGenerator\\.transform\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodInterceptor\\.doIntercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/mockito\\/internal\\/invocation\\/RealMethod\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodInterceptor\\.doIntercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/mockito\\/internal\\/invocation\\/RealMethod\\;Lorg\\/mockito\\/invocation\\/Location\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodAdvice\\.enter\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/concurrent\\/Callable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodAdvice\\.exit\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/util\\/concurrent\\/Callable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodAdvice\\.handle\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/util\\/concurrent\\/Callable\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodAdvice\\.tryInvoke\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodAdvice\\.access\\$400\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.TypeCachingBytecodeGenerator\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.TypeCachingBytecodeGenerator\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.bytebuddy\\.MockMethodAdvice\\$RealMethodCall\\.invoke\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.instance\\.ConstructorInstantiator\\.invokeConstructor\\:\\(Ljava\\/lang\\/reflect\\/Constructor\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.mockito.internal.creation.instance.InstantiationException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.creation\\.instance\\.Instantiator\\.newInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.util\\.reflection\\.FieldCopier\\.copyValue\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Field\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.util\\.reflection\\.FieldInitializer\\.acquireFieldInstance\\:\\(\\)Lorg\\/mockito\\/internal\\/util\\/reflection\\/FieldInitializationReport\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.util\\.collections\\.HashCodeAndEqualsSafeSet\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InstantiationException", 
   "java.lang.IllegalAccessException", 
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.configuration\\.SpyAnnotationEngine\\.spyNewInstance\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Field\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.configuration\\.plugins\\.PluginLoader\\$1\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.handler\\.NullResultGuardian\\.handle\\:\\(Lorg\\/mockito\\/invocation\\/Invocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.handler\\.InvocationNotifierHandler\\.handle\\:\\(Lorg\\/mockito\\/invocation\\/Invocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.handler\\.MockHandlerImpl\\.handle\\:\\(Lorg\\/mockito\\/invocation\\/Invocation\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.invocation\\.RealMethod\\$FromCallable\\$1\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.invocation\\.RealMethod\\$FromBehavior\\.invoke\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.invocation\\.RealMethod\\.invoke\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.junit\\.JUnitRule\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.junit\\.VerificationCollectorImpl\\$1\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.mockito.exceptions.base.MockitoAssertionError"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.junit\\.VerificationCollectorImpl\\.collectAndReport\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.StrictRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.DefaultInternalRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/mockito\\/internal\\/util\\/Supplier\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runner.manipulation.NoTestsRemainException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.DefaultInternalRunner\\.filter\\:\\(Lorg\\/junit\\/runner\\/manipulation\\/Filter\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.util\\.FailureDetector\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.util\\.RunnerProvider\\.newInstance\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Lorg\\/mockito\\/internal\\/runners\\/InternalRunner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.RunnerFactory\\.create\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/mockito\\/internal\\/runners\\/InternalRunner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.RunnerFactory\\.createStrict\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/mockito\\/internal\\/runners\\/InternalRunner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.RunnerFactory\\.createStrictStubs\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/mockito\\/internal\\/runners\\/InternalRunner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.RunnerFactory\\.create\\:\\(Ljava\\/lang\\/Class\\;Lorg\\/mockito\\/internal\\/util\\/Supplier\\;\\)Lorg\\/mockito\\/internal\\/runners\\/InternalRunner\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.DefaultInternalRunner\\$1\\$1\\.testStarted\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.DefaultInternalRunner\\$1\\$1\\.testFailure\\:\\(Lorg\\/junit\\/runner\\/notification\\/Failure\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.mockito\\.internal\\.runners\\.DefaultInternalRunner\\$1\\$1\\.testFinished\\:\\(Lorg\\/junit\\/runner\\/Description\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.annotation\\.AnnotationValue\\$ForDescriptionArray\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lnet\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.annotation\\.AnnotationValue\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lnet\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$AgentBased\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModule\\$WeaklyReferenced\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModule\\$WeaklyReferenced\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.ofBootPath\\:\\(\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.ofBootPath\\:\\(Ljava\\/io\\/File\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.ofModulePath\\:\\(\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.ofModulePath\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.ofModulePath\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.of\\:\\(Ljava\\/io\\/File\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModuleFile\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\$ChildFirst\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\$ChildFirst\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ClassInjector\\$UsingReflection\\$Dispatcher\\$Direct\\.make\\:\\(\\)Lnet\\/bytebuddy\\/dynamic\\/loading\\/ClassInjector\\$UsingReflection\\$Dispatcher\\$Initializable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.ClassFileVersion\\.of\\:\\(Ljava\\/lang\\/Class\\;\\)Lnet\\/bytebuddy\\/ClassFileVersion\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.ClassFileVersion\\.of\\:\\(Ljava\\/lang\\/Class\\;Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;\\)Lnet\\/bytebuddy\\/ClassFileVersion\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.ClassFileVersion\\.of\\:\\(Lnet\\/bytebuddy\\/description\\/type\\/TypeDescription\\;Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;\\)Lnet\\/bytebuddy\\/ClassFileVersion\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForClassLoader\\$WeaklyReferenced\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForClassLoader\\$WeaklyReferenced\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.MultipleParentClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.MultipleParentClassLoader\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Enumeration\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\$PersistenceHandler\\$UrlDefinitionAction\\$ByteArrayUrlStreamHandler\\.openConnection\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URLConnection\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$AgentBased\\$ClassLoadingDelegate\\$Explicit\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.utility\\.StreamDrainer\\.drain\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModule\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModule\\.locate\\:\\(Lnet\\/bytebuddy\\/utility\\/JavaModule\\;Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForModule\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$PackageDiscriminating\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$PackageDiscriminating\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.DynamicType\\$Default\\.saveIn\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.DynamicType\\$Default\\.inject\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.DynamicType\\$Default\\.inject\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.DynamicType\\$Default\\.toJar\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.DynamicType\\$Default\\.toJar\\:\\(Ljava\\/io\\/File\\;Ljava\\/util\\/jar\\/Manifest\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.DynamicType\\.saveIn\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.DynamicType\\.inject\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.DynamicType\\.inject\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.DynamicType\\.toJar\\:\\(Ljava\\/io\\/File\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.DynamicType\\.toJar\\:\\(Ljava\\/io\\/File\\;Ljava\\/util\\/jar\\/Manifest\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$NoOp\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.of\\:\\(Ljava\\/io\\/File\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.ofClassPath\\:\\(\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.ofClassPath\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.ofRuntimeJar\\:\\(\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForJarFile\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.pool\\.TypePool\\$AbstractBase\\$RawTypeValue\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lnet\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$RedefinitionStrategy\\$Collector\\.doApply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lnet\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$CircularityLock\\;Ljava\\/util\\/List\\;Lnet\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$LocationStrategy\\;Lnet\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$Listener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$Asynchronous\\$ThreadSwitchingClassLoadingDelegate\\.load\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ClassInjector\\$UsingReflection\\$Dispatcher\\$Indirect\\.make\\:\\(\\)Lnet\\/bytebuddy\\/dynamic\\/loading\\/ClassInjector\\$UsingReflection\\$Dispatcher\\$Initializable\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$AgentBased\\$ClassLoadingDelegate\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.pool\\.TypePool\\$AbstractBase\\$RawEnumerationValue\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lnet\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.pool\\.TypePool\\$Default\\$LazyTypeDescription\\$LazyAnnotationDescription\\$Loadable\\.load\\:\\(\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$UnlockingClassLoadingDelegate\\.load\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$RedefinitionStrategy\\$Collector\\$ForRedefinition\\.doApply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lnet\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$CircularityLock\\;Ljava\\/util\\/List\\;Lnet\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$LocationStrategy\\;Lnet\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$Listener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.annotation\\.AnnotationDescription\\$AnnotationInvocationHandler\\.of\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/Class\\;Ljava\\/util\\/Map\\;\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.annotation\\.AnnotationValue\\$ForTypeDescription\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lnet\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$AgentBased\\$ClassLoadingDelegate\\$Default\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\.defineClass\\:\\(Ljava\\/lang\\/String\\;\\[B\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\.defineClasses\\:\\(Ljava\\/util\\/Map\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\.findClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\.access\\$100\\:\\(Lnet\\/bytebuddy\\/dynamic\\/loading\\/ByteArrayClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/net\\/URL\\;\\)Ljava\\/lang\\/Package\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassFormatError"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ByteArrayClassLoader\\.access\\$200\\:\\(Lnet\\/bytebuddy\\/dynamic\\/loading\\/ByteArrayClassLoader\\;Ljava\\/lang\\/String\\;\\[BIILjava\\/security\\/ProtectionDomain\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\.reset\\:\\(\\[Ljava\\/lang\\/Class\\;\\)Lnet\\/bytebuddy\\/dynamic\\/loading\\/ClassReloadingStrategy\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\.reset\\:\\(Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;\\[Ljava\\/lang\\/Class\\;\\)Lnet\\/bytebuddy\\/dynamic\\/loading\\/ClassReloadingStrategy\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.utility\\.JavaType\\.load\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.pool\\.TypePool\\$AbstractBase\\$RawDescriptionArray\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lnet\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.pool\\.TypePool\\$AbstractBase\\$RawAnnotationValue\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lnet\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$Asynchronous\\$ThreadSwitchingClassLoadingDelegate\\$NotifyingClassLoadingAction\\.call\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$Asynchronous\\$ThreadSwitchingClassLoadingDelegate\\$NotifyingClassLoadingAction\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.type\\.TypeDescription\\$SuperTypeLoading\\$ClassLoadingDelegate\\.load\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.type\\.TypeDescription\\$SuperTypeLoading\\$ClassLoadingDelegate\\$Simple\\.load\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.annotation\\.AnnotationValue\\$ForEnumerationDescription\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lnet\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.annotation\\.AnnotationValue\\$ForAnnotationDescription\\.load\\:\\(Ljava\\/lang\\/ClassLoader\\;\\)Lnet\\/bytebuddy\\/description\\/annotation\\/AnnotationValue\\$Loaded\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.annotation\\.AnnotationDescription\\$Latent\\$Loadable\\.load\\:\\(\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForClassLoader\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForClassLoader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForClassLoader\\.locate\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$AgentBased\\$ClassLoadingDelegate\\$ForDelegatingClassLoader\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.scaffold\\.TypeWriter\\$Default\\$ClassDumpAction\\.run\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.scaffold\\.TypeWriter\\$Default\\$ClassDumpAction\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$Compound\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$Compound\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\$2\\.apply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\$2\\.reset\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$Asynchronous\\$ThreadSwitchingClassLoadingDelegate\\$SimpleClassLoadingAction\\.call\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$DescriptionStrategy\\$SuperTypeLoading\\$Asynchronous\\$ThreadSwitchingClassLoadingDelegate\\$SimpleClassLoadingAction\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.builder\\.AgentBuilder\\$RedefinitionStrategy\\$Collector\\$ForRetransformation\\.doApply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lnet\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$CircularityLock\\;Ljava\\/util\\/List\\;Lnet\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$LocationStrategy\\;Lnet\\/bytebuddy\\/agent\\/builder\\/AgentBuilder\\$Listener\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.annotation\\.AnnotationDescription\\$Loadable\\.load\\:\\(\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.description\\.annotation\\.AnnotationDescription\\$ForLoadedAnnotation\\.load\\:\\(\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForFolder\\.locate\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\$Resolution\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.ClassFileLocator\\$ForFolder\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.Nexus\\.initialize\\:\\(Ljava\\/lang\\/Class\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.InjectionClassLoader\\.defineClass\\:\\(Ljava\\/lang\\/String\\;\\[B\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.InjectionClassLoader\\.defineClasses\\:\\(Ljava\\/util\\/Map\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\.apply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\.reset\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\$1\\.apply\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.instrument.UnmodifiableClassException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.dynamic\\.loading\\.ClassReloadingStrategy\\$Strategy\\$1\\.reset\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Lnet\\/bytebuddy\\/dynamic\\/ClassFileLocator\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.jar\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.jar\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.jar\\.asm\\.ClassReader\\.readClass\\:\\(Ljava\\/io\\/InputStream\\;Z\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.jar\\.asm\\.commons\\.Method\\.getMethod\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/jar\\/asm\\/commons\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.jar\\.asm\\.commons\\.Method\\.getMethod\\:\\(Ljava\\/lang\\/String\\;Z\\)Lnet\\/bytebuddy\\/jar\\/asm\\/commons\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.jar\\.asm\\.commons\\.SerialVersionUIDAdder\\.computeSVUID\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.jar\\.asm\\.commons\\.SerialVersionUIDAdder\\.writeItems\\:\\(Ljava\\/util\\/Collection\\;Ljava\\/io\\/DataOutput\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.ByteBuddyAgent\\.installExternal\\:\\(Lnet\\/bytebuddy\\/agent\\/ByteBuddyAgent\\$AttachmentProvider\\$Accessor\\$ExternalAttachment\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\.loadAgent\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\.detach\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException", 
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.Attacher\\.install\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.ByteBuddyAgent\\$AgentProvider\\.resolve\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\$ForHotSpot\\.loadAgent\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\$ForHotSpot\\.connect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\$ForHotSpot\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\$ForHotSpot\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.ByteBuddyAgent\\$AgentProvider\\$ForByteBuddyAgent\\.resolve\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\$ForHotSpot\\$OnUnix\\.assertAvailability\\:\\(\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\$ForHotSpot\\$OnUnix\\.attach\\:\\(Ljava\\/lang\\/String\\;\\)Lnet\\/bytebuddy\\/agent\\/VirtualMachine\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\$ForHotSpot\\$OnUnix\\.connect\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\$ForHotSpot\\$OnUnix\\.read\\:\\(\\[B\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\$ForHotSpot\\$OnUnix\\.write\\:\\(\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "net\\.bytebuddy\\.agent\\.VirtualMachine\\$ForHotSpot\\$OnUnix\\.detach\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.objenesis\\.instantiator\\.basic\\.ObjectInputStreamInstantiator\\$MockStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.objenesis\\.instantiator\\.basic\\.ObjectInputStreamInstantiator\\$MockStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.objenesis\\.instantiator\\.basic\\.ObjectInputStreamInstantiator\\$MockStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.objenesis\\.instantiator\\.util\\.ClassDefinitionUtils\\.defineClass\\:\\(Ljava\\/lang\\/String\\;\\[BLjava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.objenesis\\.instantiator\\.util\\.ClassDefinitionUtils\\.readClass\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.objenesis\\.instantiator\\.util\\.ClassDefinitionUtils\\.writeClass\\:\\(Ljava\\/lang\\/String\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.objenesis\\.instantiator\\.gcj\\.GCJInstantiatorBase\\$DummyStream\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.hamcrest\\.beans\\.PropertyUtil\\.getPropertyDescriptor\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Ljava\\/beans\\/PropertyDescriptor\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.hamcrest\\.beans\\.PropertyUtil\\.propertyDescriptorsFor\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Class\\;\\)\\[Ljava\\/beans\\/PropertyDescriptor\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.AbstractComparator\\.compareJSON\\:\\(Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;\\)Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.AbstractComparator\\.compareJSON\\:\\(Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;\\)Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.AbstractComparator\\.checkJsonObjectKeysExpectedInActual\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.AbstractComparator\\.compareJSONArrayOfJsonObjects\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.AbstractComparator\\.compareJSONArrayOfSimpleValues\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.AbstractComparator\\.compareJSONArrayWithStrictOrder\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.AbstractComparator\\.recursivelyCompareJSONArray\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.ArraySizeComparator\\.compareJSONArray\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.CustomComparator\\.compareValues\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.DefaultComparator\\.compareJSON\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.DefaultComparator\\.compareValues\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.DefaultComparator\\.compareJSONArray\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONComparator\\.compareJSON\\:\\(Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;\\)Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONComparator\\.compareJSON\\:\\(Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;\\)Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONComparator\\.compareJSON\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONComparator\\.compareValues\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONComparator\\.compareJSONArray\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONCompareUtil\\.arrayOfJsonObjectToMap\\:\\(Lorg\\/json\\/JSONArray\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONCompareUtil\\.findUniqueKey\\:\\(Lorg\\/json\\/JSONArray\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONCompareUtil\\.isUsableAsUniqueKey\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONCompareUtil\\.jsonArrayToList\\:\\(Lorg\\/json\\/JSONArray\\;\\)Ljava\\/util\\/List\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONCompareUtil\\.allSimpleValues\\:\\(Lorg\\/json\\/JSONArray\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONCompareUtil\\.allJSONObjects\\:\\(Lorg\\/json\\/JSONArray\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.comparator\\.JSONCompareUtil\\.allJSONArrays\\:\\(Lorg\\/json\\/JSONArray\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.skyscreamer.jsonassert.ValueMatcherException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.Customization\\.matches\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/skyscreamer\\/jsonassert\\/comparator\\/JSONComparator\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/skyscreamer\\/jsonassert\\/comparator\\/JSONComparator\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/skyscreamer\\/jsonassert\\/comparator\\/JSONComparator\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/skyscreamer\\/jsonassert\\/comparator\\/JSONComparator\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONAssert\\.assertNotEquals\\:\\(Ljava\\/lang\\/String\\;Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONCompare\\.compareJSON\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/skyscreamer\\/jsonassert\\/comparator\\/JSONComparator\\;\\)Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONCompare\\.compareJSON\\:\\(Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/comparator\\/JSONComparator\\;\\)Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONCompare\\.compareJSON\\:\\(Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/comparator\\/JSONComparator\\;\\)Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONCompare\\.compareJSON\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONCompare\\.compareJSON\\:\\(Lorg\\/json\\/JSONObject\\;Lorg\\/json\\/JSONObject\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONCompare\\.compareJSON\\:\\(Lorg\\/json\\/JSONArray\\;Lorg\\/json\\/JSONArray\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareMode\\;\\)Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.JSONParser\\.parseJSON\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.skyscreamer.jsonassert.ValueMatcherException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.LocationAwareValueMatcher\\.equal\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Lorg\\/skyscreamer\\/jsonassert\\/JSONCompareResult\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.skyscreamer\\.jsonassert\\.RegularExpressionValueMatcher\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSON\\.checkDouble\\:\\(D\\)D"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSON\\.typeMismatch\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/json\\/JSONException\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSON\\.typeMismatch\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Lorg\\/json\\/JSONException\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.\\<init\\>\\:\\(Lorg\\/json\\/JSONTokener\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.\\<init\\>\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.put\\:\\(D\\)Lorg\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.put\\:\\(IZ\\)Lorg\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.put\\:\\(ID\\)Lorg\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.put\\:\\(II\\)Lorg\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.put\\:\\(IJ\\)Lorg\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.put\\:\\(ILjava\\/lang\\/Object\\;\\)Lorg\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.get\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.getBoolean\\:\\(I\\)Z"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.getDouble\\:\\(I\\)D"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.getInt\\:\\(I\\)I"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.getLong\\:\\(I\\)J"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.getString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.getJSONArray\\:\\(I\\)Lorg\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.getJSONObject\\:\\(I\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.toJSONObject\\:\\(Lorg\\/json\\/JSONArray\\;\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.join\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONArray\\.writeTo\\:\\(Lorg\\/json\\/JSONStringer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.\\<init\\>\\:\\(Lorg\\/json\\/JSONTokener\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.\\<init\\>\\:\\(Lorg\\/json\\/JSONObject\\;\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.put\\:\\(Ljava\\/lang\\/String\\;Z\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.put\\:\\(Ljava\\/lang\\/String\\;D\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.put\\:\\(Ljava\\/lang\\/String\\;I\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.put\\:\\(Ljava\\/lang\\/String\\;J\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.put\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.putOpt\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.accumulate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.checkName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.get\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.getBoolean\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.getDouble\\:\\(Ljava\\/lang\\/String\\;\\)D"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.getInt\\:\\(Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.getLong\\:\\(Ljava\\/lang\\/String\\;\\)J"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.getString\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.getJSONArray\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.getJSONObject\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.toJSONArray\\:\\(Lorg\\/json\\/JSONArray\\;\\)Lorg\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.toString\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.writeTo\\:\\(Lorg\\/json\\/JSONStringer\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONObject\\.numberToString\\:\\(Ljava\\/lang\\/Number\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.array\\:\\(\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.endArray\\:\\(\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.object\\:\\(\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.endObject\\:\\(\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.open\\:\\(Lorg\\/json\\/JSONStringer\\$Scope\\;Ljava\\/lang\\/String\\;\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.close\\:\\(Lorg\\/json\\/JSONStringer\\$Scope\\;Lorg\\/json\\/JSONStringer\\$Scope\\;Ljava\\/lang\\/String\\;\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.peek\\:\\(\\)Lorg\\/json\\/JSONStringer\\$Scope\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.value\\:\\(Ljava\\/lang\\/Object\\;\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.value\\:\\(Z\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.value\\:\\(D\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.value\\:\\(J\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.key\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/json\\/JSONStringer\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.beforeKey\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONStringer\\.beforeValue\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONTokener\\.nextValue\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONTokener\\.nextCleanInternal\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONTokener\\.nextString\\:\\(C\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONTokener\\.readEscapeCharacter\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONTokener\\.readLiteral\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONTokener\\.readObject\\:\\(\\)Lorg\\/json\\/JSONObject\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONTokener\\.readArray\\:\\(\\)Lorg\\/json\\/JSONArray\\;"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONTokener\\.next\\:\\(C\\)C"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONTokener\\.nextClean\\:\\(\\)C"
 }, 
 {
  "exceptions": [
   "org.json.JSONException"
  ], 
  "methodRegex": "org\\.json\\.JSONTokener\\.next\\:\\(I\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractFileResolvingResource\\$VfsResourceDelegate\\.getResource\\:\\(Ljava\\/net\\/URL\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractFileResolvingResource\\$VfsResourceDelegate\\.getResource\\:\\(Ljava\\/net\\/URI\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.WritableResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.WritableResource\\.writableChannel\\:\\(\\)Ljava\\/nio\\/channels\\/WritableByteChannel\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractResource\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractResource\\.getURI\\:\\(\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractResource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractResource\\.readableChannel\\:\\(\\)Ljava\\/nio\\/channels\\/ReadableByteChannel\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractResource\\.contentLength\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractResource\\.lastModified\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractResource\\.getFileForLastModifiedCheck\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractResource\\.createRelative\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.ByteArrayResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\$PatternVirtualFileVisitor\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PropertiesLoaderSupport\\.mergeProperties\\:\\(\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PropertiesLoaderSupport\\.loadProperties\\:\\(Ljava\\/util\\/Properties\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PropertiesLoaderUtils\\.loadProperties\\:\\(Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PropertiesLoaderUtils\\.fillProperties\\:\\(Ljava\\/util\\/Properties\\;Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PropertiesLoaderUtils\\.fillProperties\\:\\(Ljava\\/util\\/Properties\\;Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;Lorg\\/springframework\\/util\\/PropertiesPersister\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PropertiesLoaderUtils\\.loadProperties\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PropertiesLoaderUtils\\.fillProperties\\:\\(Ljava\\/util\\/Properties\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PropertiesLoaderUtils\\.loadAllProperties\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PropertiesLoaderUtils\\.loadAllProperties\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/util\\/Properties\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.ResourcePatternResolver\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)\\[Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.ResourceArrayPropertyEditor\\.setValue\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.EncodedResource\\.getReader\\:\\(\\)Ljava\\/io\\/Reader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.EncodedResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)\\[Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.findAllClassPathResources\\:\\(Ljava\\/lang\\/String\\;\\)\\[Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.doFindAllClassPathResources\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.findPathMatchingResources\\:\\(Ljava\\/lang\\/String\\;\\)\\[Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.resolveRootDirResource\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.isJarResource\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.doFindPathMatchingJarResources\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Ljava\\/net\\/URL\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.getJarFile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/jar\\/JarFile\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.doFindPathMatchingFileResources\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.doFindMatchingFileSystemResources\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.retrieveMatchingFiles\\:\\(Ljava\\/io\\/File\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\.doRetrieveMatchingFiles\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/File\\;Ljava\\/util\\/Set\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PropertySourceFactory\\.createPropertySource\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;\\)Lorg\\/springframework\\/core\\/env\\/PropertySource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.ResourcePropertySource\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.ResourcePropertySource\\.\\<init\\>\\:\\(Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.ResourcePropertySource\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.ResourcePropertySource\\.\\<init\\>\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.ResourcePropertySource\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.ResourcePropertySource\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.ResourcePropertySource\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.ResourcePropertySource\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.PathMatchingResourcePatternResolver\\$VfsResourceMatchingDelegate\\.findMatchingResources\\:\\(Ljava\\/net\\/URL\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/util\\/PathMatcher\\;\\)Ljava\\/util\\/Set\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.VfsPatternUtils\\.findRoot\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.VfsPatternUtils\\.visit\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/InvocationHandler\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.support\\.DefaultPropertySourceFactory\\.createPropertySource\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/io\\/support\\/EncodedResource\\;\\)Lorg\\/springframework\\/core\\/env\\/PropertySource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.buffer\\.DefaultDataBuffer\\$DefaultDataBufferOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.buffer\\.DefaultDataBuffer\\$DefaultDataBufferOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.buffer\\.DefaultDataBuffer\\$DefaultDataBufferInputStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.Resource\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.Resource\\.getURI\\:\\(\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.Resource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.Resource\\.readableChannel\\:\\(\\)Ljava\\/nio\\/channels\\/ReadableByteChannel\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.Resource\\.contentLength\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.Resource\\.lastModified\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.Resource\\.createRelative\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsResource\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsResource\\.getURI\\:\\(\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsResource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsResource\\.contentLength\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsResource\\.lastModified\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsResource\\.createRelative\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.UrlResource\\.\\<init\\>\\:\\(Ljava\\/net\\/URI\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.UrlResource\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.UrlResource\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.UrlResource\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.UrlResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.UrlResource\\.getURI\\:\\(\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.UrlResource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.UrlResource\\.createRelative\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileUrlResource\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileUrlResource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileUrlResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileUrlResource\\.writableChannel\\:\\(\\)Ljava\\/nio\\/channels\\/WritableByteChannel\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileUrlResource\\.createRelative\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractFileResolvingResource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractFileResolvingResource\\.getFileForLastModifiedCheck\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractFileResolvingResource\\.getFile\\:\\(Ljava\\/net\\/URI\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractFileResolvingResource\\.readableChannel\\:\\(\\)Ljava\\/nio\\/channels\\/ReadableByteChannel\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractFileResolvingResource\\.contentLength\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractFileResolvingResource\\.lastModified\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractFileResolvingResource\\.customizeConnection\\:\\(Ljava\\/net\\/URLConnection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.AbstractFileResolvingResource\\.customizeConnection\\:\\(Ljava\\/net\\/HttpURLConnection\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.ClassPathResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.ClassPathResource\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.invokeVfsMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.getSize\\:\\(Ljava\\/lang\\/Object\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.getLastModified\\:\\(Ljava\\/lang\\/Object\\;\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.getInputStream\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.getURL\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.getURI\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.getRelative\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.getChild\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.getFile\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.getRoot\\:\\(Ljava\\/net\\/URI\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.VfsUtils\\.getRoot\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.DescriptiveResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.InputStreamSource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.PathResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.PathResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.PathResource\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.PathResource\\.getURI\\:\\(\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.PathResource\\.getFile\\:\\(\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.PathResource\\.readableChannel\\:\\(\\)Ljava\\/nio\\/channels\\/ReadableByteChannel\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.PathResource\\.writableChannel\\:\\(\\)Ljava\\/nio\\/channels\\/WritableByteChannel\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.PathResource\\.contentLength\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.PathResource\\.lastModified\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.PathResource\\.createRelative\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.InputStreamResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileSystemResource\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileSystemResource\\.getOutputStream\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileSystemResource\\.getURL\\:\\(\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileSystemResource\\.getURI\\:\\(\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileSystemResource\\.readableChannel\\:\\(\\)Ljava\\/nio\\/channels\\/ReadableByteChannel\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileSystemResource\\.writableChannel\\:\\(\\)Ljava\\/nio\\/channels\\/WritableByteChannel\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.io\\.FileSystemResource\\.contentLength\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.filter\\.AbstractTypeHierarchyTraversingFilter\\.match\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.filter\\.AbstractTypeHierarchyTraversingFilter\\.match\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.filter\\.AbstractClassTestingTypeFilter\\.match\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.filter\\.AspectJTypeFilter\\.match\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.filter\\.TypeFilter\\.match\\:\\(Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReaderFactory\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.classreading\\.SimpleMetadataReaderFactory\\.getMetadataReader\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.classreading\\.SimpleMetadataReaderFactory\\.getMetadataReader\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.classreading\\.CachingMetadataReaderFactory\\.getMetadataReader\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.classreading\\.MetadataReaderFactory\\.getMetadataReader\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.classreading\\.MetadataReaderFactory\\.getMetadataReader\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;\\)Lorg\\/springframework\\/core\\/type\\/classreading\\/MetadataReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.type\\.classreading\\.SimpleMetadataReader\\.\\<init\\>\\:\\(Lorg\\/springframework\\/core\\/io\\/Resource\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.SerializableTypeWrapper\\$TypeProxyInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.annotation\\.SynthesizedAnnotationInvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.annotation\\.SynthesizingMethodParameter\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.ConfigurableObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/ClassLoader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.ConfigurableObjectInputStream\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/ClassLoader\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.ConfigurableObjectInputStream\\.resolveClass\\:\\(Ljava\\/io\\/ObjectStreamClass\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.ConfigurableObjectInputStream\\.resolveProxyClass\\:\\(\\[Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.ConfigurableObjectInputStream\\.resolveFallbackIfPossible\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassNotFoundException\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.ConfigurableObjectInputStream\\.getFallbackClassLoader\\:\\(\\)Ljava\\/lang\\/ClassLoader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.SerializableTypeWrapper\\$MethodParameterTypeProvider\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.task\\.support\\.ExecutorServiceAdapter\\.awaitTermination\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.RejectedExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.task\\.support\\.TaskExecutorAdapter\\.doExecute\\:\\(Ljava\\/util\\/concurrent\\/Executor\\;Lorg\\/springframework\\/core\\/task\\/TaskDecorator\\;Ljava\\/lang\\/Runnable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.OverridingClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.OverridingClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;Z\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.OverridingClassLoader\\.loadClassForOverriding\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.OverridingClassLoader\\.loadBytesForClass\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.springframework.core.env.MissingRequiredPropertiesException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.env\\.AbstractEnvironment\\.validateRequiredProperties\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.env\\.AbstractEnvironment\\.getRequiredProperty\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.env\\.AbstractEnvironment\\.getRequiredProperty\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.env\\.AbstractEnvironment\\.resolveRequiredPlaceholders\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.env\\.PropertyResolver\\.getRequiredProperty\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.env\\.PropertyResolver\\.getRequiredProperty\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.env\\.PropertyResolver\\.resolveRequiredPlaceholders\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.core.env.MissingRequiredPropertiesException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.env\\.ConfigurablePropertyResolver\\.validateRequiredProperties\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.SerializableTypeWrapper\\$FieldTypeProvider\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.SerializableTypeWrapper\\$MethodInvokeTypeProvider\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.convert\\.support\\.ConvertingPropertyEditorAdapter\\.setAsText\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.serializer\\.Deserializer\\.deserialize\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.serializer\\.support\\.SerializationDelegate\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.serializer\\.support\\.SerializationDelegate\\.deserialize\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.serializer\\.DefaultSerializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.serializer\\.DefaultDeserializer\\.deserialize\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.core\\.serializer\\.Serializer\\.serialize\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.asm\\.ClassReader\\.readClass\\:\\(Ljava\\/io\\/InputStream\\;Z\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FastByteArrayOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FastByteArrayOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FastByteArrayOutputStream\\.writeTo\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FastByteArrayOutputStream\\$FastByteArrayInputStream\\.skip\\:\\(J\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\$1\\.visitFile\\:\\(Ljava\\/nio\\/file\\/Path\\;Ljava\\/nio\\/file\\/attribute\\/BasicFileAttributes\\;\\)Ljava\\/nio\\/file\\/FileVisitResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\$1\\.postVisitDirectory\\:\\(Ljava\\/nio\\/file\\/Path\\;Ljava\\/io\\/IOException\\;\\)Ljava\\/nio\\/file\\/FileVisitResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\$1\\.postVisitDirectory\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/io\\/IOException\\;\\)Ljava\\/nio\\/file\\/FileVisitResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\$1\\.visitFile\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/nio\\/file\\/attribute\\/BasicFileAttributes\\;\\)Ljava\\/nio\\/file\\/FileVisitResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ResourceUtils\\.getURL\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ResourceUtils\\.getFile\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ResourceUtils\\.getFile\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ResourceUtils\\.getFile\\:\\(Ljava\\/net\\/URL\\;Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ResourceUtils\\.getFile\\:\\(Ljava\\/net\\/URI\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.io.FileNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ResourceUtils\\.getFile\\:\\(Ljava\\/net\\/URI\\;Ljava\\/lang\\/String\\;\\)Ljava\\/io\\/File\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ResourceUtils\\.extractJarFileURL\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ResourceUtils\\.extractArchiveURL\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URL\\;"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ResourceUtils\\.toURI\\:\\(Ljava\\/net\\/URL\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.net.URISyntaxException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ResourceUtils\\.toURI\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/URI\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\.deleteRecursively\\:\\(Ljava\\/nio\\/file\\/Path\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\.copyRecursively\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\.copyRecursively\\:\\(Ljava\\/nio\\/file\\/Path\\;Ljava\\/nio\\/file\\/Path\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.LinkageError"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ClassUtils\\.forName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ClassUtils\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileCopyUtils\\.copy\\:\\(Ljava\\/io\\/File\\;Ljava\\/io\\/File\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileCopyUtils\\.copy\\:\\(\\[BLjava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileCopyUtils\\.copyToByteArray\\:\\(Ljava\\/io\\/File\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileCopyUtils\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileCopyUtils\\.copy\\:\\(\\[BLjava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileCopyUtils\\.copyToByteArray\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileCopyUtils\\.copy\\:\\(Ljava\\/io\\/Reader\\;Ljava\\/io\\/Writer\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileCopyUtils\\.copy\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileCopyUtils\\.copyToString\\:\\(Ljava\\/io\\/Reader\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException", 
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.MethodInvoker\\.prepare\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.MethodInvoker\\.resolveClassName\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.MethodInvoker\\.getPreparedMethod\\:\\(\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.MethodInvoker\\.invoke\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StreamUtils\\.copyToByteArray\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StreamUtils\\.copyToString\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/nio\\/charset\\/Charset\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StreamUtils\\.copy\\:\\(\\[BLjava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StreamUtils\\.copy\\:\\(Ljava\\/lang\\/String\\;Ljava\\/nio\\/charset\\/Charset\\;Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StreamUtils\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StreamUtils\\.copyRange\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;JJ\\)J"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StreamUtils\\.drain\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DigestUtils\\.md5Digest\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DigestUtils\\.md5DigestAsHex\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DigestUtils\\.appendMd5DigestAsHex\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/StringBuilder\\;\\)Ljava\\/lang\\/StringBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DigestUtils\\.digest\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DigestUtils\\.digestAsHexString\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DigestUtils\\.appendDigestAsHex\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/StringBuilder\\;\\)Ljava\\/lang\\/StringBuilder\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DigestUtils\\.digestAsHexChars\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;\\)\\[C"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StreamUtils\\$NonClosingInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.UnsupportedOperationException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.CollectionUtils\\$EnumerationIterator\\.remove\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.concurrent\\.FutureAdapter\\.get\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.InterruptedException", 
   "java.util.concurrent.ExecutionException", 
   "java.util.concurrent.TimeoutException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.concurrent\\.FutureAdapter\\.get\\:\\(JLjava\\/util\\/concurrent\\/TimeUnit\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.concurrent\\.FutureAdapter\\.adaptInternal\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.util.concurrent.ExecutionException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.concurrent\\.FutureAdapter\\.adapt\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.UpdateMessageDigestInputStream\\.updateMessageDigest\\:\\(Ljava\\/security\\/MessageDigest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.UpdateMessageDigestInputStream\\.updateMessageDigest\\:\\(Ljava\\/security\\/MessageDigest\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ConcurrencyThrottleSupport\\.readObject\\:\\(Ljava\\/io\\/ObjectInputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.PropertiesPersister\\.load\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.PropertiesPersister\\.load\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/Reader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.PropertiesPersister\\.store\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.PropertiesPersister\\.store\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/Writer\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.PropertiesPersister\\.loadFromXml\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.PropertiesPersister\\.storeToXml\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.PropertiesPersister\\.storeToXml\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ReflectionUtils\\$FieldCallback\\.doWith\\:\\(Ljava\\/lang\\/reflect\\/Field\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StopWatch\\.start\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StopWatch\\.start\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StopWatch\\.stop\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StopWatch\\.getLastTaskTimeMillis\\:\\(\\)J"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StopWatch\\.getLastTaskName\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StopWatch\\.getLastTaskInfo\\:\\(\\)Lorg\\/springframework\\/util\\/StopWatch\\$TaskInfo\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\$2\\.preVisitDirectory\\:\\(Ljava\\/nio\\/file\\/Path\\;Ljava\\/nio\\/file\\/attribute\\/BasicFileAttributes\\;\\)Ljava\\/nio\\/file\\/FileVisitResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\$2\\.visitFile\\:\\(Ljava\\/nio\\/file\\/Path\\;Ljava\\/nio\\/file\\/attribute\\/BasicFileAttributes\\;\\)Ljava\\/nio\\/file\\/FileVisitResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\$2\\.visitFile\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/nio\\/file\\/attribute\\/BasicFileAttributes\\;\\)Ljava\\/nio\\/file\\/FileVisitResult\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.FileSystemUtils\\$2\\.preVisitDirectory\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/nio\\/file\\/attribute\\/BasicFileAttributes\\;\\)Ljava\\/nio\\/file\\/FileVisitResult\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException", 
   "java.lang.IllegalAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.ReflectionUtils\\$MethodCallback\\.doWith\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StreamUtils\\$NonClosingOutputStream\\.write\\:\\(\\[BII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.StreamUtils\\$NonClosingOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.util.AutoPopulatingList$ElementInstantiationException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.AutoPopulatingList\\$ElementFactory\\.createElement\\:\\(I\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractXMLStreamReader\\.getElementText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractXMLStreamReader\\.nextTag\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractXMLStreamReader\\.require\\:\\(ILjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XmlValidationModeDetector\\.detectValidationMode\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.parseInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleStartDocument\\:\\(Ljavax\\/xml\\/stream\\/events\\/XMLEvent\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleStartElement\\:\\(Ljavax\\/xml\\/stream\\/events\\/StartElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleCharacters\\:\\(Ljavax\\/xml\\/stream\\/events\\/Characters\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleEndElement\\:\\(Ljavax\\/xml\\/stream\\/events\\/EndElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleEndDocument\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleNotationDeclaration\\:\\(Ljavax\\/xml\\/stream\\/events\\/NotationDeclaration\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleEntityDeclaration\\:\\(Ljavax\\/xml\\/stream\\/events\\/EntityDeclaration\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleProcessingInstruction\\:\\(Ljavax\\/xml\\/stream\\/events\\/ProcessingInstruction\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleComment\\:\\(Ljavax\\/xml\\/stream\\/events\\/Comment\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleDtd\\:\\(Ljavax\\/xml\\/stream\\/events\\/DTD\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxEventXMLReader\\.handleEntityReference\\:\\(Ljavax\\/xml\\/stream\\/events\\/EntityReference\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamXMLReader\\.parseInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamXMLReader\\.handleStartDocument\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamXMLReader\\.handleStartElement\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamXMLReader\\.handleEndElement\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamXMLReader\\.handleCharacters\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamXMLReader\\.handleComment\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamXMLReader\\.handleDtd\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamXMLReader\\.handleEntityReference\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamXMLReader\\.handleEndDocument\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamXMLReader\\.handleProcessingInstruction\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.setNamespaceContext\\:\\(Ljavax\\/xml\\/namespace\\/NamespaceContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.setPrefix\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.getPrefix\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.setDefaultNamespace\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.getProperty\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeStartDocument\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeStartDocument\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeStartDocument\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeStartElement\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeStartElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeStartElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.doWriteStartElement\\:\\(Ljavax\\/xml\\/stream\\/events\\/StartElement\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeEmptyElement\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeEmptyElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeEmptyElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.closeEmptyElementIfNecessary\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeEndElement\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeAttribute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeAttribute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeAttribute\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeNamespace\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeDefaultNamespace\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.doWriteNamespace\\:\\(Ljavax\\/xml\\/stream\\/events\\/Namespace\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeCharacters\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeCharacters\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeCData\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeComment\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeProcessingInstruction\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeProcessingInstruction\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeDTD\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeEntityRef\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.writeEndDocument\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXNotRecognizedException", 
   "org.xml.sax.SAXNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxXMLReader\\.getFeature\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXNotRecognizedException", 
   "org.xml.sax.SAXNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxXMLReader\\.setFeature\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxXMLReader\\.parse\\:\\(Lorg\\/xml\\/sax\\/InputSource\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxXMLReader\\.parse\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxXMLReader\\.parse\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException", 
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxXMLReader\\.parseInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxXMLReader\\.startPrefixMapping\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxXMLReader\\.endPrefixMapping\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.ListBasedXMLEventReader\\.getElementText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.ListBasedXMLEventReader\\.nextTag\\:\\(\\)Ljavax\\/xml\\/stream\\/events\\/XMLEvent\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXNotRecognizedException", 
   "org.xml.sax.SAXNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractXMLReader\\.getFeature\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXNotRecognizedException", 
   "org.xml.sax.SAXNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractXMLReader\\.setFeature\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXNotRecognizedException", 
   "org.xml.sax.SAXNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractXMLReader\\.getProperty\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXNotRecognizedException", 
   "org.xml.sax.SAXNotSupportedException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractXMLReader\\.setProperty\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.SimpleSaxErrorHandler\\.warning\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.SimpleSaxErrorHandler\\.error\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.SimpleSaxErrorHandler\\.fatalError\\:\\(Lorg\\/xml\\/sax\\/SAXParseException\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.transform.TransformerException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.SimpleTransformErrorListener\\.warning\\:\\(Ljavax\\/xml\\/transform\\/TransformerException\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.transform.TransformerException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.SimpleTransformErrorListener\\.error\\:\\(Ljavax\\/xml\\/transform\\/TransformerException\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.transform.TransformerException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.SimpleTransformErrorListener\\.fatalError\\:\\(Ljavax\\/xml\\/transform\\/TransformerException\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamReader\\.\\<init\\>\\:\\(Ljavax\\/xml\\/stream\\/XMLEventReader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamReader\\.getProperty\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamReader\\.next\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.XMLEventStreamReader\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractXMLEventReader\\.getProperty\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractXMLEventReader\\.checkIfClosed\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.startDocument\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.endDocument\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.startElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Lorg\\/xml\\/sax\\/Attributes\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.endElement\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.characters\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.ignorableWhitespace\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.processingInstruction\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.skippedEntity\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.startDTD\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.endDTD\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.startCDATA\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.endCDATA\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.comment\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.startEntity\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.endEntity\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.startDocumentInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.endDocumentInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.startElementInternal\\:\\(Ljavax\\/xml\\/namespace\\/QName\\;Lorg\\/xml\\/sax\\/Attributes\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.endElementInternal\\:\\(Ljavax\\/xml\\/namespace\\/QName\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.charactersInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.cDataInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.ignorableWhitespaceInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.processingInstructionInternal\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.skippedEntityInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.dtdInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.AbstractStaxHandler\\.commentInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.startDocumentInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.endDocumentInternal\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.startElementInternal\\:\\(Ljavax\\/xml\\/namespace\\/QName\\;Lorg\\/xml\\/sax\\/Attributes\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.endElementInternal\\:\\(Ljavax\\/xml\\/namespace\\/QName\\;Ljava\\/util\\/Map\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.charactersInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.cDataInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.ignorableWhitespaceInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.processingInstructionInternal\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.dtdInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.commentInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.startEntity\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.endEntity\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.stream.XMLStreamException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.xml\\.StaxStreamHandler\\.skippedEntityInternal\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalArgumentException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.NumberUtils\\.convertNumberToTargetClass\\:\\(Ljava\\/lang\\/Number\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Number\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DefaultPropertiesPersister\\.load\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DefaultPropertiesPersister\\.load\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/Reader\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DefaultPropertiesPersister\\.store\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DefaultPropertiesPersister\\.store\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/Writer\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DefaultPropertiesPersister\\.loadFromXml\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DefaultPropertiesPersister\\.storeToXml\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.util\\.DefaultPropertiesPersister\\.storeToXml\\:\\(Ljava\\/util\\/Properties\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.beans\\.BeanGenerator\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.beans\\.BeanMap\\$Generator\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.beans\\.BulkBean\\$Generator\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.AbstractClassGenerator\\.firstInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.AbstractClassGenerator\\.nextInstance\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ClassGenerator\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.DefaultGeneratorStrategy\\.generate\\:\\(Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.DefaultGeneratorStrategy\\.getClassVisitor\\:\\(\\)Lorg\\/springframework\\/cglib\\/core\\/DebuggingClassWriter\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.DefaultGeneratorStrategy\\.transform\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.DefaultGeneratorStrategy\\.transform\\:\\(Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;\\)Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\$12\\.processCase\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\$12\\.processDefault\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\$14\\.processCase\\:\\(ILorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\$14\\.processDefault\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\$16\\.processCase\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\$16\\.processDefault\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\$2\\.processCase\\:\\(ILorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\$4\\.processCase\\:\\(ILorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\$6\\.processCase\\:\\(ILorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\.string\\_switch\\_trie\\:\\(Lorg\\/springframework\\/cglib\\/core\\/CodeEmitter\\;\\[Ljava\\/lang\\/String\\;Lorg\\/springframework\\/cglib\\/core\\/ObjectSwitchCallback\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\.stringSwitchHelper\\:\\(Lorg\\/springframework\\/cglib\\/core\\/CodeEmitter\\;Ljava\\/util\\/List\\;Lorg\\/springframework\\/cglib\\/core\\/ObjectSwitchCallback\\;Lorg\\/springframework\\/asm\\/Label\\;Lorg\\/springframework\\/asm\\/Label\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\.string\\_switch\\_hash\\:\\(Lorg\\/springframework\\/cglib\\/core\\/CodeEmitter\\;\\[Ljava\\/lang\\/String\\;Lorg\\/springframework\\/cglib\\/core\\/ObjectSwitchCallback\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\.member\\_helper\\_size\\:\\(Lorg\\/springframework\\/cglib\\/core\\/CodeEmitter\\;Ljava\\/util\\/List\\;Lorg\\/springframework\\/cglib\\/core\\/ObjectSwitchCallback\\;Lorg\\/springframework\\/cglib\\/core\\/EmitUtils\\$ParameterTyper\\;Lorg\\/springframework\\/asm\\/Label\\;Lorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\.member\\_helper\\_type\\:\\(Lorg\\/springframework\\/cglib\\/core\\/CodeEmitter\\;Ljava\\/util\\/List\\;Lorg\\/springframework\\/cglib\\/core\\/ObjectSwitchCallback\\;Lorg\\/springframework\\/cglib\\/core\\/EmitUtils\\$ParameterTyper\\;Lorg\\/springframework\\/asm\\/Label\\;Lorg\\/springframework\\/asm\\/Label\\;Ljava\\/util\\/BitSet\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\.access\\$000\\:\\(Lorg\\/springframework\\/cglib\\/core\\/CodeEmitter\\;Ljava\\/util\\/List\\;Lorg\\/springframework\\/cglib\\/core\\/ObjectSwitchCallback\\;Lorg\\/springframework\\/asm\\/Label\\;Lorg\\/springframework\\/asm\\/Label\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\.access\\$800\\:\\(Lorg\\/springframework\\/cglib\\/core\\/CodeEmitter\\;Ljava\\/util\\/List\\;Lorg\\/springframework\\/cglib\\/core\\/ObjectSwitchCallback\\;Lorg\\/springframework\\/cglib\\/core\\/EmitUtils\\$ParameterTyper\\;Lorg\\/springframework\\/asm\\/Label\\;Lorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.EmitUtils\\.access\\$900\\:\\(Lorg\\/springframework\\/cglib\\/core\\/CodeEmitter\\;Ljava\\/util\\/List\\;Lorg\\/springframework\\/cglib\\/core\\/ObjectSwitchCallback\\;Lorg\\/springframework\\/cglib\\/core\\/EmitUtils\\$ParameterTyper\\;Lorg\\/springframework\\/asm\\/Label\\;Lorg\\/springframework\\/asm\\/Label\\;Ljava\\/util\\/BitSet\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.GeneratorStrategy\\.generate\\:\\(Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ObjectSwitchCallback\\.processCase\\:\\(Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ObjectSwitchCallback\\.processDefault\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ProcessSwitchCallback\\.processCase\\:\\(ILorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ProcessSwitchCallback\\.processDefault\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ReflectUtils\\$1\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ReflectUtils\\$2\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ReflectUtils\\$3\\.run\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ReflectUtils\\.parseTypes\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)\\[Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ReflectUtils\\.getClass\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ReflectUtils\\.getClass\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/ClassLoader\\;\\[Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ReflectUtils\\.findDeclaredMethod\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ReflectUtils\\.defineClass\\:\\(Ljava\\/lang\\/String\\;\\[BLjava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.ReflectUtils\\.defineClass\\:\\(Ljava\\/lang\\/String\\;\\[BLjava\\/lang\\/ClassLoader\\;Ljava\\/security\\/ProtectionDomain\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.core\\.internal\\.LoadingCache\\$2\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.CallbackGenerator\\.generate\\:\\(Lorg\\/springframework\\/cglib\\/core\\/ClassEmitter\\;Lorg\\/springframework\\/cglib\\/proxy\\/CallbackGenerator\\$Context\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.CallbackGenerator\\.generateStatic\\:\\(Lorg\\/springframework\\/cglib\\/core\\/CodeEmitter\\;Lorg\\/springframework\\/cglib\\/proxy\\/CallbackGenerator\\$Context\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.Dispatcher\\.loadObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.Enhancer\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.Enhancer\\.firstInstance\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.Enhancer\\.getCallbacksSetter\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.Enhancer\\.access\\$000\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/reflect\\/Method\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.FixedValue\\.loadObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.InterfaceMaker\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.InvocationHandler\\.invoke\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.LazyLoader\\.loadObject\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.MethodInterceptor\\.intercept\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\[Ljava\\/lang\\/Object\\;Lorg\\/springframework\\/cglib\\/proxy\\/MethodProxy\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.MethodInterceptorGenerator\\.generateStatic\\:\\(Lorg\\/springframework\\/cglib\\/core\\/CodeEmitter\\;Lorg\\/springframework\\/cglib\\/proxy\\/CallbackGenerator\\$Context\\;Ljava\\/util\\/List\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.MethodProxy\\.invoke\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.MethodProxy\\.invokeSuper\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.proxy\\.ProxyRefDispatcher\\.loadObject\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.reflect\\.FastClass\\$Generator\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.reflect\\.FastClass\\.invoke\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Class\\;Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.reflect\\.FastClass\\.newInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.reflect\\.FastClass\\.newInstance\\:\\(\\[Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.reflect\\.FastClass\\.invoke\\:\\(ILjava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.reflect\\.FastClass\\.newInstance\\:\\(I\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.reflect\\.FastConstructor\\.newInstance\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.reflect\\.FastConstructor\\.newInstance\\:\\(\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.reflect.InvocationTargetException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.reflect\\.FastMethod\\.invoke\\:\\(Ljava\\/lang\\/Object\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.NoSuchMethodException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.reflect\\.MethodDelegate\\$Generator\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractClassLoader\\.loadClass\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractProcessTask\\.execute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "org.apache.tools.ant.BuildException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractProcessTask\\.beforeExecute\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractProcessTask\\.processFile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractTransformTask\\.processFile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception", 
   "java.io.FileNotFoundException", 
   "java.io.IOException", 
   "java.net.MalformedURLException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractTransformTask\\.processClassFile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractTransformTask\\.getClassReader\\:\\(Ljava\\/io\\/File\\;\\)Lorg\\/springframework\\/asm\\/ClassReader\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractTransformTask\\.isClassFile\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractTransformTask\\.processJarFile\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractTransformTask\\.process\\:\\(\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractTransformTask\\.getBytes\\:\\(Ljava\\/util\\/zip\\/ZipInputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractTransformTask\\.checkMagic\\:\\(Ljava\\/io\\/File\\;J\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.AbstractTransformTask\\.isJarFile\\:\\(Ljava\\/io\\/File\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.TransformingClassGenerator\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.impl\\.FieldProviderTransformer\\$1\\.processCase\\:\\(ILorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.impl\\.FieldProviderTransformer\\$1\\.processDefault\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.impl\\.FieldProviderTransformer\\$2\\.processCase\\:\\(ILorg\\/springframework\\/asm\\/Label\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.impl\\.FieldProviderTransformer\\$2\\.processDefault\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.impl\\.FieldProviderTransformer\\.generate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.impl\\.FieldProviderTransformer\\.setByIndex\\:\\(\\[Ljava\\/lang\\/String\\;\\[I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.impl\\.FieldProviderTransformer\\.getByIndex\\:\\(\\[Ljava\\/lang\\/String\\;\\[I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.impl\\.FieldProviderTransformer\\.getField\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.impl\\.FieldProviderTransformer\\.setField\\:\\(\\[Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.transform\\.impl\\.UndeclaredThrowableStrategy\\.transform\\:\\(Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;\\)Lorg\\/springframework\\/cglib\\/core\\/ClassGenerator\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.util\\.ParallelSorter\\$Generator\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.cglib\\.util\\.StringSwitcher\\$Generator\\.generateClass\\:\\(Lorg\\/springframework\\/asm\\/ClassVisitor\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.objenesis\\.instantiator\\.basic\\.ObjectInputStreamInstantiator\\$MockStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.objenesis\\.instantiator\\.basic\\.ObjectInputStreamInstantiator\\$MockStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.objenesis\\.instantiator\\.basic\\.ObjectInputStreamInstantiator\\$MockStream\\.read\\:\\(\\[BII\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.objenesis\\.instantiator\\.gcj\\.GCJInstantiatorBase\\$DummyStream\\.\\<init\\>\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.objenesis\\.instantiator\\.util\\.ClassDefinitionUtils\\.defineClass\\:\\(Ljava\\/lang\\/String\\;\\[BLjava\\/lang\\/ClassLoader\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.objenesis\\.instantiator\\.util\\.ClassDefinitionUtils\\.readClass\\:\\(Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.objenesis\\.instantiator\\.util\\.ClassDefinitionUtils\\.writeClass\\:\\(Ljava\\/lang\\/String\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.testng\\.AbstractTestNGSpringContextTests\\.springTestContextBeforeTestClass\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.testng\\.AbstractTestNGSpringContextTests\\.springTestContextPrepareTestInstance\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.testng\\.AbstractTestNGSpringContextTests\\.springTestContextBeforeTestMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.testng\\.AbstractTestNGSpringContextTests\\.springTestContextAfterTestMethod\\:\\(Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.testng\\.AbstractTestNGSpringContextTests\\.springTestContextAfterTestClass\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.testng\\.AbstractTestNGSpringContextTests\\.throwAs\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.dao.DataAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.testng\\.AbstractTransactionalTestNGSpringContextTests\\.executeSqlScript\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.ContextLoader\\.loadContext\\:\\(\\[Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/context\\/ApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.DirtiesContextBeforeModesTestExecutionListener\\.beforeTestClass\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.DirtiesContextBeforeModesTestExecutionListener\\.beforeTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.DependencyInjectionTestExecutionListener\\.prepareTestInstance\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.DependencyInjectionTestExecutionListener\\.beforeTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.DependencyInjectionTestExecutionListener\\.injectDependencies\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.AbstractDirtiesContextTestExecutionListener\\.beforeOrAfterTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;Lorg\\/springframework\\/test\\/annotation\\/DirtiesContext\\$MethodMode\\;Lorg\\/springframework\\/test\\/annotation\\/DirtiesContext\\$ClassMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.AbstractDirtiesContextTestExecutionListener\\.beforeOrAfterTestClass\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;Lorg\\/springframework\\/test\\/annotation\\/DirtiesContext\\$ClassMode\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.AbstractGenericContextLoader\\.loadContext\\:\\(Lorg\\/springframework\\/test\\/context\\/MergedContextConfiguration\\;\\)Lorg\\/springframework\\/context\\/ConfigurableApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.AbstractGenericContextLoader\\.loadContext\\:\\(\\[Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/context\\/ConfigurableApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.AbstractGenericContextLoader\\.loadContext\\:\\(Lorg\\/springframework\\/test\\/context\\/MergedContextConfiguration\\;\\)Lorg\\/springframework\\/context\\/ApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.AbstractGenericContextLoader\\.loadContext\\:\\(\\[Ljava\\/lang\\/String\\;\\)Lorg\\/springframework\\/context\\/ApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.DirtiesContextTestExecutionListener\\.afterTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.support\\.DirtiesContextTestExecutionListener\\.afterTestClass\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.junit.runners.model.InitializationError"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.SpringRunner\\.\\<init\\>\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.dao.DataAccessException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.AbstractTransactionalJUnit4SpringContextTests\\.executeSqlScript\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.rules\\.SpringClassRule\\$TestContextManagerCacheEvictor\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.SpringJUnit4ClassRunner\\$1\\.runReflectiveCall\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.statements\\.RunPrepareTestInstanceCallbacks\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.statements\\.SpringRepeat\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.statements\\.RunAfterTestExecutionCallbacks\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.statements\\.RunBeforeTestMethodCallbacks\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.statements\\.ProfileValueChecker\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.statements\\.SpringFailOnTimeout\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.statements\\.RunBeforeTestClassCallbacks\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.statements\\.RunBeforeTestExecutionCallbacks\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.statements\\.RunAfterTestClassCallbacks\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Throwable"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.junit4\\.statements\\.RunAfterTestMethodCallbacks\\.evaluate\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.SmartContextLoader\\.loadContext\\:\\(Lorg\\/springframework\\/test\\/context\\/MergedContextConfiguration\\;\\)Lorg\\/springframework\\/context\\/ApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.web\\.socket\\.MockServerContainer\\.connectToServer\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.web\\.socket\\.MockServerContainer\\.connectToServer\\:\\(Ljava\\/lang\\/Class\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.web\\.socket\\.MockServerContainer\\.connectToServer\\:\\(Ljavax\\/websocket\\/Endpoint\\;Ljavax\\/websocket\\/ClientEndpointConfig\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.web\\.socket\\.MockServerContainer\\.connectToServer\\:\\(Ljava\\/lang\\/Class\\;Ljavax\\/websocket\\/ClientEndpointConfig\\;Ljava\\/net\\/URI\\;\\)Ljavax\\/websocket\\/Session\\;"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.web\\.socket\\.MockServerContainer\\.addEndpoint\\:\\(Ljava\\/lang\\/Class\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.websocket.DeploymentException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.web\\.socket\\.MockServerContainer\\.addEndpoint\\:\\(Ljavax\\/websocket\\/server\\/ServerEndpointConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestContextManager\\.beforeTestClass\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestContextManager\\.prepareTestInstance\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestContextManager\\.beforeTestMethod\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestContextManager\\.beforeTestExecution\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestContextManager\\.afterTestExecution\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestContextManager\\.afterTestMethod\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestContextManager\\.afterTestClass\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestContextManager\\.handleBeforeException\\:\\(Ljava\\/lang\\/Throwable\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/test\\/context\\/TestExecutionListener\\;Ljava\\/lang\\/Object\\;Ljava\\/lang\\/reflect\\/Method\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.cache\\.DefaultCacheAwareContextLoaderDelegate\\.loadContextInternal\\:\\(Lorg\\/springframework\\/test\\/context\\/MergedContextConfiguration\\;\\)Lorg\\/springframework\\/context\\/ApplicationContext\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestExecutionListener\\.beforeTestClass\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestExecutionListener\\.prepareTestInstance\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestExecutionListener\\.beforeTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestExecutionListener\\.beforeTestExecution\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestExecutionListener\\.afterTestExecution\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestExecutionListener\\.afterTestMethod\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.context\\.TestExecutionListener\\.afterTestClass\\:\\(Lorg\\/springframework\\/test\\/context\\/TestContext\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.ResponseCreator\\.createResponse\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.MockRestServiceServer\\$MockClientHttpRequestFactory\\$1\\.executeInternal\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.UnorderedRequestExpectationManager\\.matchRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/test\\/web\\/client\\/RequestExpectation\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.RequestExpectationManager\\.validateRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.RequestMatcher\\.match\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.AbstractRequestExpectationManager\\.validateRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.AbstractRequestExpectationManager\\.validateRequestInternal\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.AbstractRequestExpectationManager\\.matchRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/test\\/web\\/client\\/RequestExpectation\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.xpath.XPathExpressionException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$3\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.ContentRequestMatchers\\$2\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$12\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.ContentRequestMatchers\\$3\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$8\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$5\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$4\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$9\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$AbstractXpathRequestMatcher\\.match\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$AbstractXpathRequestMatcher\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$5\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.ContentRequestMatchers\\$AbstractXmlRequestMatcher\\.match\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.ContentRequestMatchers\\$AbstractXmlRequestMatcher\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.ContentRequestMatchers\\$4\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$11\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$2\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$6\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$2\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$10\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$9\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$8\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$3\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.ContentRequestMatchers\\$1\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$1\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$13\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$1\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.AssertionError"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$AbstractJsonPathRequestMatcher\\.match\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$AbstractJsonPathRequestMatcher\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.text.ParseException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.JsonPathRequestMatchers\\$14\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$10\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$4\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.match\\.XpathRequestMatchers\\$7\\.matchInternal\\:\\(Lorg\\/springframework\\/mock\\/http\\/client\\/MockClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.DefaultRequestExpectation\\.match\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.DefaultRequestExpectation\\.createResponse\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.MockMvcClientHttpRequestFactory\\$1\\.executeInternal\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.response\\.DefaultResponseCreator\\.createResponse\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.MockMvcClientHttpRequestFactory\\$2\\.executeInternal\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.client\\.SimpleRequestExpectationManager\\.matchRequest\\:\\(Lorg\\/springframework\\/http\\/client\\/ClientHttpRequest\\;\\)Lorg\\/springframework\\/test\\/web\\/client\\/RequestExpectation\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.result\\.MockMvcResultHandlers\\$LoggingResultHandler\\.handle\\:\\(Lorg\\/springframework\\/test\\/web\\/servlet\\/MvcResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.ResultActions\\.andExpect\\:\\(Lorg\\/springframework\\/test\\/web\\/servlet\\/ResultMatcher\\;\\)Lorg\\/springframework\\/test\\/web\\/servlet\\/ResultActions\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.ResultActions\\.andDo\\:\\(Lorg\\/springframework\\/test\\/web\\/servlet\\/ResultHandler\\;\\)Lorg\\/springframework\\/test\\/web\\/servlet\\/ResultActions\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.PatternMappingFilterProxy\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.PatternMappingFilterProxy\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getAutowireCapableBeanFactory\\:\\(\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/AutowireCapableBeanFactory\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getBean\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getBean\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getBean\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getBean\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getBean\\:\\(Ljava\\/lang\\/Class\\;\\[Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.isSingleton\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.isPrototype\\:\\(Ljava\\/lang\\/String\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.isTypeMatch\\:\\(Ljava\\/lang\\/String\\;Lorg\\/springframework\\/core\\/ResolvableType\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.isTypeMatch\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Z"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getType\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getBeansOfType\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getBeansOfType\\:\\(Ljava\\/lang\\/Class\\;ZZ\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getBeansWithAnnotation\\:\\(Ljava\\/lang\\/Class\\;\\)Ljava\\/util\\/Map\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.factory.NoSuchBeanDefinitionException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.findAnnotationOnBean\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/annotation\\/Annotation\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getMessage\\:\\(Ljava\\/lang\\/String\\;\\[Ljava\\/lang\\/Object\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.context.NoSuchMessageException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getMessage\\:\\(Lorg\\/springframework\\/context\\/MessageSourceResolvable\\;Ljava\\/util\\/Locale\\;\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\.getResources\\:\\(Ljava\\/lang\\/String\\;\\)\\[Lorg\\/springframework\\/core\\/io\\/Resource\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\$StubBeanFactory\\.initializeBean\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\$StubBeanFactory\\.autowireBean\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\$StubBeanFactory\\.resolveNamedBean\\:\\(Ljava\\/lang\\/Class\\;\\)Lorg\\/springframework\\/beans\\/factory\\/config\\/NamedBeanHolder\\;"
 }, 
 {
  "exceptions": [
   "org.springframework.beans.BeansException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.setup\\.StubWebApplicationContext\\$StubBeanFactory\\.applyBeanPropertyValues\\:\\(Ljava\\/lang\\/Object\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.MockMvc\\$1\\.andExpect\\:\\(Lorg\\/springframework\\/test\\/web\\/servlet\\/ResultMatcher\\;\\)Lorg\\/springframework\\/test\\/web\\/servlet\\/ResultActions\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.MockMvc\\$1\\.andDo\\:\\(Lorg\\/springframework\\/test\\/web\\/servlet\\/ResultHandler\\;\\)Lorg\\/springframework\\/test\\/web\\/servlet\\/ResultActions\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.ResultMatcher\\.match\\:\\(Lorg\\/springframework\\/test\\/web\\/servlet\\/MvcResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.ResultHandler\\.handle\\:\\(Lorg\\/springframework\\/test\\/web\\/servlet\\/MvcResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.MockMvc\\.perform\\:\\(Lorg\\/springframework\\/test\\/web\\/servlet\\/RequestBuilder\\;\\)Lorg\\/springframework\\/test\\/web\\/servlet\\/ResultActions\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.MockMvc\\.applyDefaultResultActions\\:\\(Lorg\\/springframework\\/test\\/web\\/servlet\\/MvcResult\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.htmlunit\\.MockWebResponseBuilder\\.build\\:\\(\\)Lcom\\/gargoylesoftware\\/htmlunit\\/WebResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.htmlunit\\.MockWebResponseBuilder\\.webResponseData\\:\\(\\)Lcom\\/gargoylesoftware\\/htmlunit\\/WebResponseData\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.web\\.servlet\\.htmlunit\\.DelegatingWebConnection\\.getResponse\\:\\(Lcom\\/gargoylesoftware\\/htmlunit\\/WebRequest\\;\\)Lcom\\/gargoylesoftware\\/htmlunit\\/WebResponse\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XmlExpectationsHelper\\.assertNode\\:\\(Ljava\\/lang\\/String\\;Lorg\\/hamcrest\\/Matcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XmlExpectationsHelper\\.parseXmlString\\:\\(Ljava\\/lang\\/String\\;\\)Lorg\\/w3c\\/dom\\/Document\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XmlExpectationsHelper\\.assertSource\\:\\(Ljava\\/lang\\/String\\;Lorg\\/hamcrest\\/Matcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XmlExpectationsHelper\\.assertXmlEqual\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.xpath.XPathExpressionException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\[Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.xpath.XPathExpressionException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.compileXpathExpression\\:\\(Ljava\\/lang\\/String\\;Ljava\\/util\\/Map\\;\\)Ljavax\\/xml\\/xpath\\/XPathExpression\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.assertNode\\:\\(\\[BLjava\\/lang\\/String\\;Lorg\\/hamcrest\\/Matcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.parseXmlByteArray\\:\\(\\[BLjava\\/lang\\/String\\;\\)Lorg\\/w3c\\/dom\\/Document\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.xpath.XPathExpressionException"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.evaluateXpath\\:\\(Lorg\\/w3c\\/dom\\/Document\\;Ljavax\\/xml\\/namespace\\/QName\\;Ljava\\/lang\\/Class\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.exists\\:\\(\\[BLjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.doesNotExist\\:\\(\\[BLjava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.assertNodeCount\\:\\(\\[BLjava\\/lang\\/String\\;Lorg\\/hamcrest\\/Matcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.assertNodeCount\\:\\(\\[BLjava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.assertString\\:\\(\\[BLjava\\/lang\\/String\\;Lorg\\/hamcrest\\/Matcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.assertString\\:\\(\\[BLjava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.assertNumber\\:\\(\\[BLjava\\/lang\\/String\\;Lorg\\/hamcrest\\/Matcher\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.assertNumber\\:\\(\\[BLjava\\/lang\\/String\\;Ljava\\/lang\\/Double\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.XpathExpectationsHelper\\.assertBoolean\\:\\(\\[BLjava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.JsonExpectationsHelper\\.assertJsonEqual\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.JsonExpectationsHelper\\.assertJsonEqual\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.JsonExpectationsHelper\\.assertJsonNotEqual\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.springframework\\.test\\.util\\.JsonExpectationsHelper\\.assertJsonNotEqual\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.http\\.client\\.MockClientHttpRequest\\.execute\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.http\\.client\\.MockClientHttpRequest\\.executeInternal\\:\\(\\)Lorg\\/springframework\\/http\\/client\\/ClientHttpResponse\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.http\\.client\\.MockClientHttpResponse\\.getStatusCode\\:\\(\\)Lorg\\/springframework\\/http\\/HttpStatus\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.http\\.client\\.MockClientHttpResponse\\.getRawStatusCode\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.http\\.client\\.MockClientHttpResponse\\.getStatusText\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.http\\.client\\.MockAsyncClientHttpRequest\\.executeAsync\\:\\(\\)Lorg\\/springframework\\/util\\/concurrent\\/ListenableFuture\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.http\\.MockHttpInputMessage\\.getBody\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.http\\.MockHttpOutputMessage\\.getBody\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\$BindingEnumeration\\.\\<init\\>\\:\\(Lorg\\/springframework\\/mock\\/jndi\\/SimpleNamingContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\$BindingEnumeration\\.\\<init\\>\\:\\(Lorg\\/springframework\\/mock\\/jndi\\/SimpleNamingContext\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/mock\\/jndi\\/SimpleNamingContext\\$1\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.ExpectedLookupTemplate\\.lookup\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.list\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.listBindings\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NameNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.lookup\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NameNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.lookupLink\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NameNotFoundException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.rename\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.list\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.listBindings\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/NamingEnumeration\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.lookup\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.lookupLink\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.bind\\:\\(Ljavax\\/naming\\/Name\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.unbind\\:\\(Ljavax\\/naming\\/Name\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.rebind\\:\\(Ljavax\\/naming\\/Name\\;Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.rename\\:\\(Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Name\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.createSubcontext\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/Context\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.destroySubcontext\\:\\(Ljavax\\/naming\\/Name\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.getNameInNamespace\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.getNameParser\\:\\(Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/NameParser\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.getNameParser\\:\\(Ljava\\/lang\\/String\\;\\)Ljavax\\/naming\\/NameParser\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\.composeName\\:\\(Ljavax\\/naming\\/Name\\;Ljavax\\/naming\\/Name\\;\\)Ljavax\\/naming\\/Name\\;"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\$NameClassPairEnumeration\\.\\<init\\>\\:\\(Lorg\\/springframework\\/mock\\/jndi\\/SimpleNamingContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\$NameClassPairEnumeration\\.\\<init\\>\\:\\(Lorg\\/springframework\\/mock\\/jndi\\/SimpleNamingContext\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/mock\\/jndi\\/SimpleNamingContext\\$1\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\$AbstractNamingEnumeration\\.\\<init\\>\\:\\(Lorg\\/springframework\\/mock\\/jndi\\/SimpleNamingContext\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.naming.NamingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.jndi\\.SimpleNamingContext\\$AbstractNamingEnumeration\\.\\<init\\>\\:\\(Lorg\\/springframework\\/mock\\/jndi\\/SimpleNamingContext\\;Ljava\\/lang\\/String\\;Lorg\\/springframework\\/mock\\/jndi\\/SimpleNamingContext\\$1\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockPageContext\\.forward\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockPageContext\\.include\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockPageContext\\.include\\:\\(Ljava\\/lang\\/String\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.UnsupportedEncodingException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockPageContext\\.getContentAsString\\:\\(\\)Ljava\\/lang\\/String\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockPageContext\\.handlePageException\\:\\(Ljava\\/lang\\/Exception\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockPageContext\\.handlePageException\\:\\(Ljava\\/lang\\/Throwable\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.writeOut\\:\\(Ljava\\/io\\/Writer\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.clear\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.clearBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.newLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.print\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.print\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.print\\:\\(\\[C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.print\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.print\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.print\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.print\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.print\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.print\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.println\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.println\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.println\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.println\\:\\(\\[C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.println\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.println\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.println\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.println\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.println\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockBodyContent\\.println\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockPart\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockPart\\.write\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockPart\\.delete\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockFilterChain\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockMultipartFile\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockMultipartFile\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockMultipartFile\\.getBytes\\:\\(\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockMultipartFile\\.getInputStream\\:\\(\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockMultipartFile\\.transferTo\\:\\(Ljava\\/io\\/File\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockFilterChain\\$ServletFilterProxy\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;Ljavax\\/servlet\\/FilterChain\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockFilterChain\\$ServletFilterProxy\\.init\\:\\(Ljavax\\/servlet\\/FilterConfig\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.DelegatingServletInputStream\\.read\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.DelegatingServletInputStream\\.available\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.DelegatingServletInputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockExpressionEvaluator\\.parseExpression\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljavax\\/servlet\\/jsp\\/el\\/FunctionMapper\\;\\)Ljavax\\/servlet\\/jsp\\/el\\/Expression\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockExpressionEvaluator\\.evaluate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljavax\\/servlet\\/jsp\\/el\\/VariableResolver\\;Ljavax\\/servlet\\/jsp\\/el\\/FunctionMapper\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockExpressionEvaluator\\.doEvaluate\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljavax\\/servlet\\/jsp\\/el\\/FunctionMapper\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "javax.servlet.jsp.el.ELException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockExpressionEvaluator\\$1\\.evaluate\\:\\(Ljavax\\/servlet\\/jsp\\/el\\/VariableResolver\\;\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.DelegatingServletOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.DelegatingServletOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.DelegatingServletOutputStream\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockHttpServletResponse\\$ResponseServletOutputStream\\.write\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockHttpServletResponse\\$ResponseServletOutputStream\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "javax.servlet.ServletException", 
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.PassThroughFilterChain\\.doFilter\\:\\(Ljavax\\/servlet\\/ServletRequest\\;Ljavax\\/servlet\\/ServletResponse\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.getTargetWriter\\:\\(\\)Ljava\\/io\\/PrintWriter\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.clear\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.clearBuffer\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.newLine\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.write\\:\\(\\[CII\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.print\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.print\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.print\\:\\(\\[C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.print\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.print\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.print\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.print\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.print\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.print\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.println\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.println\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.println\\:\\(C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.println\\:\\(\\[C\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.println\\:\\(D\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.println\\:\\(F\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.println\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.println\\:\\(J\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.println\\:\\(Ljava\\/lang\\/Object\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.springframework\\.mock\\.web\\.MockJspWriter\\.println\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "javax.xml.bind.JAXBException", 
   "javax.xml.bind.PropertyException"
  ], 
  "methodRegex": "org\\.xmlunit\\.builder\\.JaxbBuilder\\.createDefaultMarshaller\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.xmlunit\\.builder\\.JaxbBuilder\\.getObjectFactoryClass\\:\\(Ljava\\/lang\\/Object\\;\\)Ljava\\/lang\\/Class\\;"
 }, 
 {
  "exceptions": [
   "javax.xml.transform.TransformerConfigurationException"
  ], 
  "methodRegex": "org\\.xmlunit\\.diff\\.DefaultComparisonFormatter\\.createXmlTransformer\\:\\(I\\)Ljavax\\/xml\\/transform\\/Transformer\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.xmlunit\\.diff\\.XPathContext\\$Level\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.CloneNotSupportedException"
  ], 
  "methodRegex": "org\\.xmlunit\\.diff\\.XPathContext\\.clone\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.xmlunit\\.validation\\.ParsingValidator\\$Handler\\.resolveEntity\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/xml\\/sax\\/InputSource\\;"
 }, 
 {
  "exceptions": [
   "org.xml.sax.SAXException"
  ], 
  "methodRegex": "org\\.xmlunit\\.validation\\.JAXPValidator\\.getSchema\\:\\(\\)Ljavax\\/xml\\/validation\\/Schema\\;"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.RT\\.getAgent\\:\\(\\)Lorg\\/jacoco\\/agent\\/rt\\/IAgent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.IAgent\\.dump\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.JmxRegistration\\.\\<init\\>\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/IAgent\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.JmxRegistration\\.call\\:\\(\\)Ljava\\/lang\\/Void\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.JmxRegistration\\.call\\:\\(\\)Ljava\\/lang\\/Object\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.PreMain\\.premain\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/instrument\\/Instrumentation\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.PreMain\\.createRuntime\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/IRuntime\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.ClassFileDumper\\.dump\\:\\(Ljava\\/lang\\/String\\;\\[B\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.Agent\\.getInstance\\:\\(\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/Agent\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.Agent\\.dump\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.init\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.run\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpConnection\\.visitDumpCommand\\:\\(ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpClientOutput\\.createSocket\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;\\)Ljava\\/net\\/Socket\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.FileOutput\\.openFile\\:\\(\\)Ljava\\/io\\/OutputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.createServerSocket\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;\\)Ljava\\/net\\/ServerSocket\\;"
 }, 
 {
  "exceptions": [
   "java.net.UnknownHostException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.TcpServerOutput\\.getInetAddress\\:\\(Ljava\\/lang\\/String\\;\\)Ljava\\/net\\/InetAddress\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.IAgentOutput\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/AgentOptions\\;Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.IAgentOutput\\.shutdown\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.output\\.IAgentOutput\\.writeExecutionData\\:\\(Z\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.IllegalClassFormatException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.CoverageTransformer\\.transform\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.vladium\\.emma\\.rt\\.RT\\.dumpCoverageData\\:\\(Ljava\\/io\\/File\\;ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "com\\.vladium\\.emma\\.rt\\.RT\\.dumpCoverageData\\:\\(Ljava\\/io\\/File\\;Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException", 
   "org.jacoco.agent.rt.internal_28bab1d.core.data.IncompatibleExecDataVersionException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.read\\:\\(\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readBlock\\:\\(B\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readHeader\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readSessionInfo\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataReader\\.readExecutionData\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataStore\\.put\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/data\\/ExecutionData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataStore\\.subtract\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/data\\/ExecutionData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionData\\.assertCompatibility\\:\\(JLjava\\/lang\\/String\\;I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataWriter\\.\\<init\\>\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataWriter\\.writeHeader\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.data\\.ExecutionDataWriter\\.flush\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlReader\\.readBlock\\:\\(B\\)Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlReader\\.readDumpCommand\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\.createFor\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/lang\\/String\\;\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/IRuntime\\;"
 }, 
 {
  "exceptions": [
   "java.lang.ClassNotFoundException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\.createFor\\:\\(Ljava\\/lang\\/instrument\\/Instrumentation\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/IRuntime\\;"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.IRuntime\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.IRemoteCommandVisitor\\.visitDumpCommand\\:\\(ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlWriter\\.\\<init\\>\\:\\(Ljava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlWriter\\.sendCmdOk\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.RemoteControlWriter\\.visitDumpCommand\\:\\(ZZ\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.Exception"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.AbstractRuntime\\.startup\\:\\(Lorg\\/jacoco\\/agent\\/rt\\/internal\\_28bab1d\\/core\\/runtime\\/RuntimeData\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.lang.instrument.IllegalClassFormatException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.runtime\\.ModifiedSystemClassRuntime\\$1\\.transform\\:\\(Ljava\\/lang\\/ClassLoader\\;Ljava\\/lang\\/String\\;Ljava\\/lang\\/Class\\;Ljava\\/security\\/ProtectionDomain\\;\\[B\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataOutput\\.writeVarInt\\:\\(I\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataOutput\\.writeBooleanArray\\:\\(\\[Z\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataInput\\.readVarInt\\:\\(\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.data\\.CompactDataInput\\.readBooleanArray\\:\\(\\)\\[Z"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.Pack200Streams\\$NoCloseInput\\.close\\:\\(\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.InputStreams\\.readFully\\:\\(Ljava\\/io\\/InputStream\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.Pack200Streams\\.unpack\\:\\(Ljava\\/io\\/InputStream\\;\\)Ljava\\/io\\/InputStream\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.Pack200Streams\\.pack\\:\\(\\[BLjava\\/io\\/OutputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.ContentTypeDetector\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.ContentTypeDetector\\.determineType\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.ContentTypeDetector\\.readInt\\:\\(Ljava\\/io\\/InputStream\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.instr\\.SignatureRemover\\.filterEntry\\:\\(Ljava\\/lang\\/String\\;Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;\\)Z"
 }, 
 {
  "exceptions": [
   "java.lang.IllegalStateException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.internal\\.instr\\.InstrSupport\\.assertNotInstrumented\\:\\(Ljava\\/lang\\/String\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrument\\:\\(\\[BLjava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrument\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/lang\\/String\\;\\)\\[B"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrument\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentAll\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentZip\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.nextEntry\\:\\(Ljava\\/util\\/zip\\/ZipInputStream\\;Ljava\\/lang\\/String\\;\\)Ljava\\/util\\/zip\\/ZipEntry\\;"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentGzip\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.instrumentPack200\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.copy\\:\\(Ljava\\/io\\/InputStream\\;Ljava\\/io\\/OutputStream\\;Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.core\\.instr\\.Instrumenter\\.read\\:\\(Ljava\\/io\\/InputStream\\;\\[BLjava\\/lang\\/String\\;\\)I"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/io\\/InputStream\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassReader\\.\\<init\\>\\:\\(Ljava\\/lang\\/String\\;\\)V"
 }, 
 {
  "exceptions": [
   "java.io.IOException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassReader\\.readStream\\:\\(Ljava\\/io\\/InputStream\\;Z\\)\\[B"
 }, 
 {
  "exceptions": [
   "org.jacoco.agent.rt.internal_28bab1d.asm.ClassTooLargeException", 
   "org.jacoco.agent.rt.internal_28bab1d.asm.MethodTooLargeException"
  ], 
  "methodRegex": "org\\.jacoco\\.agent\\.rt\\.internal\\_28bab1d\\.asm\\.ClassWriter\\.toByteArray\\:\\(\\)\\[B"
 }
]