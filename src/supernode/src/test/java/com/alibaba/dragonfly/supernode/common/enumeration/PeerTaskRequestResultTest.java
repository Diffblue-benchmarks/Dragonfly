package com.alibaba.dragonfly.supernode.common.enumeration;

import com.alibaba.dragonfly.supernode.common.enumeration.PeerTaskRequestResult;
import com.diffblue.deeptestutils.Reflector;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.lang.reflect.Array;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class PeerTaskRequestResultTest {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: PeerTaskRequestResult */

  /*
   * Test generated by Diffblue Deeptest.This test covers `boolean
   * isValidResult(int)' block 2 (line 31)
   * This test covers `boolean isValidResult(int)' block 3 (line 31)
   * This test covers `boolean isValidResult(int)' block 4 (line 31)
   * This test covers `boolean isValidResult(int)' block 5 (line 31)
   * This test covers `boolean isValidResult(int)' block 6 (line 31)
   * This test covers `boolean isValidResult(int)' block 8 (line 31)
   * This test covers `boolean isValidResult(int)' block 9 (line 32)
   * This test covers `boolean isValidResult(int)' block 10 (line 32)
   * This test covers `boolean isValidResult(int)' block 12 (line 33)
   *
   */

  @Test
  public void isValidResultInputPositiveOutputTrue() {

    // Arrange
    final int val = 502;

    // Act
    final boolean retval = PeerTaskRequestResult.isValidResult(val);

    // Assert result
    Assert.assertEquals(true, retval);
  }
}
