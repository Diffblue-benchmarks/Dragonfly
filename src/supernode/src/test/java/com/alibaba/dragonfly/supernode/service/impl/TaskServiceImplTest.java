package com.alibaba.dragonfly.supernode.service.impl;

import static org.mockito.AdditionalMatchers.or;
import static org.mockito.Matchers.isA;
import static org.mockito.Matchers.isNull;
import static org.powermock.api.mockito.PowerMockito.mockStatic;

import com.alibaba.dragonfly.supernode.common.domain.Task;
import com.alibaba.dragonfly.supernode.common.domain.gc.GcMeta;
import com.alibaba.dragonfly.supernode.common.enumeration.CdnStatus;
import com.alibaba.dragonfly.supernode.repository.TaskRepository;
import com.alibaba.dragonfly.supernode.service.impl.TaskServiceImpl;
import com.diffblue.deeptestutils.Reflector;
import org.apache.commons.codec.digest.DigestUtils;
import org.apache.commons.lang3.StringUtils;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.api.mockito.expectation.PowerMockitoStubber;
import org.powermock.core.classloader.annotations.PowerMockIgnore;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.powermock.modules.junit4.PowerMockRunner;

import java.lang.reflect.Array;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.List;

@PowerMockIgnore({"javax.management.*"})
@RunWith(PowerMockRunner.class)
public class TaskServiceImplTest {

  @Rule public ExpectedException thrown = ExpectedException.none();

  /* testedClasses: TaskServiceImpl */

  /*
   * Test generated by Diffblue Deeptest.
   * This test case covers:
   *  - conditional line 75 branch to line 81
   */

  @Test
  public void gcInputNullOutputFalse() {

    // Arrange
    final TaskServiceImpl objectUnderTest = new TaskServiceImpl();
    final GcMeta gcMeta = null;

    // Act
    final boolean retval = objectUnderTest.gc(gcMeta);

    // Assert result
    Assert.assertEquals(false, retval);
  }
}
